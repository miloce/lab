{"version":3,"sources":["components/CanvasDataGrid.tsx","components/WorkSheet.tsx","pages/ShowPage/ShowData/Filter/ButtonSelect.tsx","pages/ShowPage/ShowData/Filter/PoolSelect.tsx","pages/ShowPage/ShowData/Filter/index.tsx","pages/ShowPage/ShowData/index.tsx"],"names":["scaleToWidth","grid","self","style","width","sbw","scrollBarWidth","scrollBarBorderWidth","scrollBox","dataWidth","widthBoxRatio","verticalBarVisible","showWidth","bar","v","x","scale","left","CanvasDataGrid","data","schema","attributes","onCreate","props","divEl","useRef","gridRef","useEffect","current","timer","setTimeout","canvasDataGrid","parentNode","scrollBarBoxWidth","clearTimeout","dispose","ref","editable","allowColumnResize","allowRowResize","orderBy","touchZoomMin","touchZoomMax","WorkSheet","handleCreate","useCallback","node","oldStringSorter","sorters","string","columnName","direction","sortTime","sortCount","number","l","r","info","addEventListener","e","star","row","ctx","fillStyle","COLOR","FOUR_STAR","FIVE_STAR","height","ISMOBILE","canvas","margin","cellHorizontalAlignment","activeCellHorizontalAlignment","columnHeaderCellHorizontalAlignment","font","FONT_FAMILY","cellFont","activeCellFont","columnHeaderCellFont","rowHeaderCellFont","cellColor","activeCellColor","css","buttonStyle","Item","children","onClick","enable","type","borderColor","borderWidth","background","ButtonSelect","value","onChange","Array","isArray","map","reactNode","name","isEnable","includes","index","indexOf","splice","push","Option","Select","makeKey","pool","date","Date","from","five","join","month","getMonth","day","getDate","getFullYear","format","PoolSelect","pools","handleChange","realValue","useMemo","idx","placeholder","allowClear","makeFilterByArray","array","expr","Function","makeFilterByForm","values","matchs","search","length","mapping","weapon","character","compare","key","类别","parseInt","星级","to","filterFor","filterRegExp","pattern","exec","flags","substring","flagLength","RegExp","test","toString","toLocaleUpperCase","filterString","名称","undefined","every","func","Filter","activeKey","useState","visible","setVisible","count","setCount","Form","useForm","form","handleVisibleChange","object","getFieldsValue","Object","filter","handleFormChange","setFields","CHARACTER_POOLS","WEAPON_POOLS","filteredPools","useCacheMemo","hitPoolIndex","dataIndex","item","Error","findIndex","o","reverse","handleFinish","handleReset","resetFields","content","layout","onFinish","initialValue","color","hidden","htmlType","trigger","placement","title","onVisibleChange","icon","TabPane","Tabs","ShowData","onGetData","tabs","useCacheState","setActiveKey","setFilter","handleFilterChange","canvasDataRef","handleCreateWorkSheet","handleGoTop","scrollTop","handleGoBottom","scrollHeight","size","centered","tab","SHOW_DATA_ALL_KEY","IconButton","tip","SCHEMA_ALL","SCHEMA"],"mappings":"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","file":"static/js/12.d8e481cb.chunk.js","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport React, { FC, useEffect, useRef } from 'react';\n// @ts-ignore\nimport canvasDataGrid from 'canvas-datagrid';\n\ntype CanvasDataGridProps = {\n  onCreate?: (grid: any) => void; // 获取最初的参数\n  attributes?: {\n    [key: string]: any;\n  };\n  data: Array<any> | undefined;\n  schema?: Array<any>;\n};\n// 给予canvas-datagrid一个缩放，令x轴方向不出现滚动条\nfunction scaleToWidth(grid: any) {\n  if (!grid.self) return;\n  if (grid.style.width === 'auto') return;\n  const sbw = grid.style.scrollBarWidth * 2 * grid.style.scrollBarBorderWidth * 2;\n  const { scrollBox } = grid.self;\n  let dataWidth = scrollBox.width / scrollBox.widthBoxRatio;\n  if (scrollBox.verticalBarVisible) dataWidth -= sbw;\n  const showWidth = scrollBox.bar.v.x;\n  grid.self.scale *= showWidth / (dataWidth + scrollBox.left);\n}\nexport const CanvasDataGrid: FC<\n  CanvasDataGridProps & React.HTMLAttributes<HTMLDivElement>\n> = function ({ data, schema, attributes, onCreate, ...props }) {\n  const divEl = useRef(null);\n  const gridRef = useRef(null);\n  useEffect(() => {\n    if (gridRef.current) {\n      const grid: any = gridRef.current;\n      grid.schema = schema;\n      scaleToWidth(grid);\n    }\n  }, [schema]);\n  useEffect(() => {\n    if (gridRef.current) {\n      (gridRef.current as any).data = data;\n    }\n  }, [data]);\n  useEffect(() => {\n    let grid: any;\n    const timer = setTimeout(() => {\n      grid = canvasDataGrid({\n        parentNode: divEl.current,\n        schema: schema,\n        ...attributes,\n      });\n      grid.style.scrollBarBoxWidth = 10;\n      grid.style.scrollBarWidth = 13;\n      onCreate && onCreate(grid);\n      scaleToWidth(grid);\n      gridRef.current = grid;\n      setTimeout(() => {\n        if (gridRef.current) (gridRef.current as any).data = data;\n      });\n    });\n    return () => {\n      clearTimeout(timer);\n      if (gridRef.current) {\n        (gridRef.current as any).dispose();\n        delete (gridRef.current as any).self;\n      }\n    };\n  }, []);\n  return <div ref={divEl} {...props}></div>;\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { COLOR, FONT_FAMILY, ISMOBILE } from 'const';\nimport React, { FC, useCallback } from 'react';\nimport { CanvasDataGrid } from './CanvasDataGrid';\n\ntype WorkSheetProps = {\n  data: Array<any>;\n  schema: SchemaType;\n  onCreate?: (grid: any) => void;\n};\n\ntype SchemaType = Array<{\n  name?: string;\n  type?: string;\n  title?: string;\n  width?: number;\n  hidden?: boolean;\n  filter?: (e: any) => boolean;\n  formatter?: (e: any) => any;\n  defaultValue?: any;\n}>;\n\nconst attributes = {\n  editable: false,\n  allowColumnResize: false,\n  allowRowResize: false,\n  orderBy: '时间',\n  touchZoomMin: 0.5,\n  touchZoomMax: 1.5,\n};\nexport const WorkSheet: FC<WorkSheetProps> = function ({ data, schema, onCreate }) {\n  const handleCreate = useCallback((node: any) => {\n    if (process.env.NODE_ENV === 'development') (window as any).node = node;\n    const oldStringSorter = node.sorters.string;\n    // sortBy 时间\n    node.sorters.string = function (columnName: string, direction: string) {\n      if (columnName === '时间') {\n        const sortTime = oldStringSorter(columnName, direction);\n        const sortCount = node.sorters.number('总次数', direction);\n        return (l: any, r: any) => {\n          const info = sortTime(l, r);\n          return info === 0 ? sortCount(l, r) : info;\n        };\n      } else return oldStringSorter(columnName, direction);\n    };\n    // render color:\n    node.addEventListener('rendertext', function (e: any) {\n      const star = e.row['星级'];\n      if (star === 4) {\n        e.ctx.fillStyle = COLOR.FOUR_STAR;\n      } else if (star === 5) {\n        e.ctx.fillStyle = COLOR.FIVE_STAR;\n      }\n    });\n    node.style.height = '100%';\n    if (ISMOBILE) node.style.width = '100%';\n    node.canvas.style.margin = '0 auto';\n    node.style.cellHorizontalAlignment = 'center';\n    node.style.activeCellHorizontalAlignment = 'center';\n    node.style.columnHeaderCellHorizontalAlignment = 'center';\n    const font = '16px ' + FONT_FAMILY;\n    node.style.cellFont = font;\n    node.style.activeCellFont = font;\n    node.style.columnHeaderCellFont = font;\n    node.style.rowHeaderCellFont = font;\n    node.style.cellColor = '#262626';\n    node.style.activeCellColor = '#262626';\n    onCreate && onCreate(node);\n  }, []);\n  return (\n    <CanvasDataGrid\n      css={css`\n        width: 100%;\n        height: 100%;\n        position: relative;\n        overflow-y: hidden;\n        overflow-x: auto;\n        border-bottom: 2px dotted thistle;\n      `}\n      onCreate={handleCreate}\n      data={data}\n      schema={schema}\n      attributes={attributes}\n    />\n  );\n};\n","/**\n * 按钮选择器。效果类似于checkBox\n */\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Button } from 'antd';\nimport React, { FC } from 'react';\n\nexport type ButtonSelectProps = {\n  value?: string[];\n  onChange?: (value: string[]) => void;\n};\ntype ButtonSelectItemProps = {\n  name: string;\n  enable?: boolean;\n  onClick?: (e: any) => void;\n};\nconst buttonStyle = css`\n  margin: 2px 12px 2px 2px;\n  border-radius: 5px;\n`;\ninterface ButtonSelectInterface extends FC<ButtonSelectProps> {\n  Item: FC<ButtonSelectItemProps>;\n}\n\nconst Item: FC<ButtonSelectItemProps> = function ({ children, onClick, enable }) {\n  return (\n    <Button\n      type='text'\n      css={buttonStyle}\n      style={\n        enable\n          ? {\n              borderColor: '#1890ff',\n              borderWidth: '2px',\n              background: '#f0f0f0',\n            }\n          : {\n              borderColor: 'transparent',\n              borderWidth: '2px',\n              background: '#f5f5f5',\n            }\n      }\n      onClick={onClick}\n    >\n      {children}\n    </Button>\n  );\n};\nexport const ButtonSelect: ButtonSelectInterface = function ({ value = [], children, onChange }) {\n  return (\n    <>\n      {(Array.isArray(children) ? children : [children]).map((reactNode: any) => {\n        const name = reactNode.props.name;\n        const isEnable = value && value.includes(name);\n        return (\n          <Item\n            key={name}\n            name={name}\n            enable={isEnable}\n            onClick={(e) => {\n              const data = [...value];\n              if (!isEnable) data.push(name);\n              else {\n                const index = data.indexOf(name);\n                if (index > -1) data.splice(index, 1);\n              }\n              onChange && onChange(data);\n            }}\n          >\n            {reactNode.props.children}\n          </Item>\n        );\n      })}\n    </>\n  );\n};\n\nButtonSelect.Item = Item;\n","/**\n * 池子选择项, 默认的Select只是string或number，在此传回对象\n */\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Select } from 'antd';\nimport React, { FC, useCallback, useMemo } from 'react';\nimport { PoolType } from 'types';\n\nexport type PoolSelectProps = {\n  pools: PoolType[];\n  value?: string | undefined;\n  onChange?: (value: any) => void;\n};\nconst { Option } = Select;\n\nfunction format(date: Date) {\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n  return (\n    date.getFullYear() +\n    '/' +\n    (month >= 10 ? month : '0' + month) +\n    '/' +\n    (day >= 10 ? day : '0' + day)\n  );\n}\n\nconst makeKey = (pool: PoolType) => {\n  const date = new Date(pool.from);\n  return `${pool.five.join('、')} (${format(date)})`;\n};\nexport const PoolSelect: FC<PoolSelectProps> = function ({ pools, value, onChange }) {\n  const handleChange = useCallback(\n    (index) => {\n      onChange && onChange(pools[index]);\n    },\n    [pools],\n  );\n  const realValue = useMemo(() => {\n    const idx = pools.indexOf(value as any);\n    if (idx > -1) return idx;\n    return undefined;\n  }, [value, pools]);\n  return (\n    <Select placeholder='--选择UP池--' onChange={handleChange} allowClear value={realValue}>\n      {pools.map((pool, index) => (\n        <Option value={index} key={pool.from}>\n          {makeKey(pool)}\n        </Option>\n      ))}\n    </Select>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Button, Input, Popover, Form } from 'antd';\nimport { ButtonSelect } from './ButtonSelect';\nimport { CHARACTER_POOLS, WEAPON_POOLS, COLOR } from 'const';\nimport React, { FC, useCallback, useState, useMemo, useEffect } from 'react';\nimport FilterOutlined from '@ant-design/icons/FilterOutlined';\nimport { PoolSelect } from './PoolSelect';\nimport { DataItem, PoolType } from 'types';\nimport findIndex from 'lodash/findIndex';\nimport { useCacheMemo } from 'context/CacheContext';\n\ntype FilterProps = {\n  activeKey?: string;\n  onChange?: (values: any) => any;\n  data: DataItem[];\n  [key: string]: any;\n};\n// 根据值数组 做一个filter\nfunction makeFilterByArray(array: any[], format?: (v: any) => any) {\n  const handle = (v: any) => (typeof v === 'string' ? '\"' + v + '\"' : v);\n  const expr =\n    'return ' + array.map((value) => `v===${handle(format ? format(value) : value)}`).join('||');\n  return new Function('v', expr);\n}\n// 测试字符串是不是值的一部分，支持正则\nconst filterString = function (value: string, filterFor: string) {\n  var filterRegExp,\n    regEnd = /\\/(i|g|m)*$/,\n    pattern = regEnd.exec(filterFor),\n    flags = pattern ? pattern[0].substring(1) : '',\n    flagLength = flags.length;\n  if (filterFor.substring(0, 1) === '/' && pattern) {\n    try {\n      filterRegExp = new RegExp(filterFor.substring(1, filterFor.length - (flagLength + 1)), flags);\n    } catch (e) {\n      return;\n    }\n    return filterRegExp.test(value);\n  }\n  return value.toString\n    ? value.toString().toLocaleUpperCase().indexOf(filterFor.toLocaleUpperCase()) !== -1\n    : false;\n};\n// 根据form的值， 做一个filter\nfunction makeFilterByForm(values: {\n  pool?: {\n    from: number;\n    to: number;\n  };\n  search?: string;\n  star: string[];\n  type: string[];\n}) {\n  const matchs: any[] = [];\n  const { type = [], star = [], search, pool } = values;\n  if (type.length !== 0) {\n    const mapping = {\n      weapon: '武器',\n      character: '角色',\n    };\n    const compare = makeFilterByArray(type, (key: keyof typeof mapping) => mapping[key]);\n    matchs.push((data: DataItem) => compare(data.类别));\n  }\n  if (star.length !== 0) {\n    const compare = makeFilterByArray(star, (key: string) => parseInt(key));\n    matchs.push((data: DataItem) => compare(data.星级));\n  }\n  if (pool) matchs.push((data: DataItem) => data.date >= pool.from && data.date <= pool.to);\n\n  if (search) matchs.push((data: DataItem) => filterString(data.名称, search));\n\n  return matchs.length === 0\n    ? undefined\n    : (data: DataItem) => {\n        return matchs.every((func) => func(data));\n      };\n}\n// 计算当前筛选条目有几个\nfunction countObjectProperty(object: any): number {\n  return Object.values(object).filter((v) => {\n    if (v === undefined || v === '' || (Array.isArray(v) && v.length === 0)) return false;\n    return true;\n  }).length;\n}\nexport const Filter: FC<FilterProps> = function ({ activeKey, onChange, data, ...props }) {\n  const [visible, setVisible] = useState(false);\n  const [count, setCount] = useState(0);\n  const [form] = Form.useForm();\n  const handleVisibleChange = useCallback((v) => {\n    setVisible(v);\n    setCount(countObjectProperty(form.getFieldsValue(true)));\n  }, []);\n  const handleFormChange = useCallback((v?: any) => {\n    onChange && onChange(makeFilterByForm(v || form.getFieldsValue(true)));\n  }, []);\n  const pools = useMemo(() => {\n    // 切换页面时应重置filter\n    form.setFields([\n      {\n        name: 'pool',\n        value: undefined,\n      },\n    ]);\n    handleFormChange();\n    switch (activeKey) {\n      case '角色活动祈愿':\n      case 'Character Event Wish':\n        return CHARACTER_POOLS;\n      case '武器活动祈愿':\n      case 'Weapon Event Wish':\n        return WEAPON_POOLS;\n      default:\n        return [];\n    }\n  }, [activeKey]);\n  const filteredPools = useCacheMemo(\n    () => {\n      // 只显示有抽卡记录的池子\n      if (pools.length === 0) return pools;\n      let filteredPools = [] as PoolType[];\n      let hitPoolIndex = 0;\n      let dataIndex = 0;\n      try {\n        while (true) {\n          if (dataIndex >= data.length - 1) break;\n          const item = data[dataIndex];\n          const pool = pools[hitPoolIndex];\n          if (item.date > pool.to) {\n            hitPoolIndex += 1;\n            if (hitPoolIndex >= pools.length - 1) throw new Error('wrong data');\n          } else if (item.date >= pool.from) {\n            const idx = findIndex(data, (o) => o.date > pool.to, dataIndex + 1);\n            filteredPools.push(pool);\n            if (idx === -1) {\n              break;\n            }\n            dataIndex = idx;\n          } else {\n            throw new Error('impossible data');\n          }\n        }\n      } catch (e) {\n        filteredPools = pools;\n      }\n      return filteredPools.reverse();\n    },\n    [pools, data],\n    `filter-${activeKey}`,\n  );\n  const handleFinish = useCallback((values: any) => {\n    handleFormChange(values);\n    handleVisibleChange(false);\n  }, []);\n  const handleReset = useCallback((values: any) => {\n    form.resetFields();\n    handleFormChange();\n    handleVisibleChange(false);\n  }, []);\n  const content = (\n    <Form\n      layout='vertical'\n      css={css`\n        max-width: 260px;\n      `}\n      onFinish={handleFinish}\n      form={form}\n    >\n      <Form.Item name='search'>\n        <Input placeholder='搜索名称请输入...' />\n      </Form.Item>\n      <Form.Item name='type' initialValue={[]}>\n        <ButtonSelect>\n          <ButtonSelect.Item name='weapon'>武器</ButtonSelect.Item>\n          <ButtonSelect.Item name='character'>角色</ButtonSelect.Item>\n        </ButtonSelect>\n      </Form.Item>\n      <Form.Item name='star' initialValue={[]}>\n        <ButtonSelect>\n          <ButtonSelect.Item name='3'>\n            <div>三星</div>\n          </ButtonSelect.Item>\n          <ButtonSelect.Item name='4'>\n            <div style={{ color: COLOR.FOUR_STAR }}>四星</div>\n          </ButtonSelect.Item>\n          <ButtonSelect.Item name='5'>\n            <div style={{ color: COLOR.FIVE_STAR }}>五星</div>\n          </ButtonSelect.Item>\n        </ButtonSelect>\n      </Form.Item>\n      <Form.Item name='pool' hidden={filteredPools.length === 0}>\n        <PoolSelect pools={filteredPools} />\n      </Form.Item>\n      <Form.Item\n        css={css`\n          .ant-form-item-control-input-content {\n            display: flex;\n            justify-content: space-between;\n          }\n        `}\n      >\n        <Button onClick={handleReset}>重置</Button>\n        <Button type='primary' htmlType='submit'>\n          确认\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n  return (\n    <Popover\n      content={content}\n      trigger='click'\n      placement='bottomLeft'\n      title='筛选(以下均不是必填项)'\n      visible={visible}\n      onVisibleChange={handleVisibleChange}\n    >\n      <Button type='primary' icon={<FilterOutlined />} {...props}>\n        筛选{count === 0 ? '' : `(${count})`}\n      </Button>\n    </Popover>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React, { FC, useCallback, useMemo, useRef, useState } from 'react';\nimport { Tabs } from 'antd';\nimport UpOutlined from '@ant-design/icons/UpOutlined';\nimport DownOutlined from '@ant-design/icons/DownOutlined';\nimport { ISMOBILE, SCHEMA, SCHEMA_ALL, SHOW_DATA_ALL_KEY } from 'const';\nimport { WorkSheet } from 'components/WorkSheet';\nimport { Filter } from './Filter';\nimport { IconButton } from 'components/IconButton';\nimport { useCacheState } from 'context/CacheContext';\n\ntype ShowDataProps = {\n  onGetData: (key: string) => any;\n  tabs: Array<string>;\n};\nconst { TabPane } = Tabs;\n\nexport const ShowData: FC<ShowDataProps> = function ({ onGetData, tabs }) {\n  const [activeKey, setActiveKey] = useCacheState(tabs[0], 'activeKey');\n  const handleChange = useCallback((key) => {\n    setActiveKey(key);\n  }, []);\n  // filter为函数，因此不能直接使用useState，为了页面能更新，不使用ref\n  const [filter, setFilter] = useState<{\n    current: any;\n  }>({\n    current: void 0,\n  });\n  const handleFilterChange = useCallback((filter) => {\n    setFilter({\n      current: filter,\n    });\n  }, []);\n  const data = useMemo(() => {\n    const data = onGetData(activeKey);\n    if (!filter.current) return data;\n    return data.filter(filter.current);\n  }, [filter.current, activeKey]);\n  const canvasDataRef = useRef();\n  const handleCreateWorkSheet = useCallback((node) => {\n    canvasDataRef.current = node;\n  }, []);\n  const handleGoTop = useCallback(() => {\n    if (canvasDataRef.current) (canvasDataRef.current as any).scrollTop = 0;\n  }, []);\n  const handleGoBottom = useCallback(() => {\n    const node: any = canvasDataRef.current;\n    if (node) node.scrollTop = node.scrollHeight;\n  }, []);\n  return (\n    <div\n      css={css`\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        display: flex;\n        flex-direction: column;\n        padding-bottom: ${ISMOBILE ? 0 : 20}px;\n      `}\n    >\n      <Tabs\n        activeKey={activeKey}\n        onChange={handleChange}\n        size={ISMOBILE ? 'middle' : 'large'}\n        centered\n        css={\n          ISMOBILE\n            ? css`\n                background: #fff;\n                padding: 0 10px;\n                .ant-tabs-nav {\n                  background: #fff;\n                  height: 48px;\n                }\n              `\n            : css`\n                .ant-tabs-nav {\n                  background: #fff;\n                  height: 64px;\n                }\n              `\n        }\n      >\n        {tabs.map((name: string) => (\n          <TabPane tab={name} key={name} />\n        ))}\n        <TabPane tab={SHOW_DATA_ALL_KEY} key={SHOW_DATA_ALL_KEY} />\n      </Tabs>\n      <Filter\n        data={data}\n        css={css`\n          position: absolute;\n          top: ${ISMOBILE ? 56 : 68}px;\n          z-index: 999;\n        `}\n        onChange={handleFilterChange}\n        activeKey={activeKey}\n      />\n      {!ISMOBILE && (\n        <div\n          css={css`\n            position: absolute;\n            right: 10%;\n            z-index: 999;\n            top: 72px;\n          `}\n        >\n          <IconButton\n            placement='right'\n            tip='前往顶部'\n            icon={<UpOutlined />}\n            onClick={handleGoTop}\n          />\n          <br />\n          <IconButton\n            placement='right'\n            tip='前往底部'\n            icon={<DownOutlined />}\n            onClick={handleGoBottom}\n          />\n        </div>\n      )}\n      <WorkSheet\n        data={data}\n        schema={activeKey === SHOW_DATA_ALL_KEY ? SCHEMA_ALL : SCHEMA}\n        onCreate={handleCreateWorkSheet}\n      />\n    </div>\n  );\n};\n"],"sourceRoot":""}