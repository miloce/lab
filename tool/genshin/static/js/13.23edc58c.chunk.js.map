{"version":3,"sources":["components/CanvasDataGrid.tsx","components/WorkSheet.tsx","pages/ShowPage/Timeline/getDateInfo.ts","pages/ShowPage/Timeline/CollapseWorkSheet.tsx","pages/ShowPage/Timeline/index.tsx"],"names":["scaleToWidth","grid","self","style","width","sbw","scrollBarWidth","scrollBarBorderWidth","scrollBox","dataWidth","widthBoxRatio","verticalBarVisible","showWidth","bar","v","x","scale","left","CanvasDataGrid","data","schema","attributes","onCreate","props","divEl","useRef","gridRef","useEffect","current","timer","setTimeout","canvasDataGrid","parentNode","scrollBarBoxWidth","clearTimeout","dispose","ref","editable","allowColumnResize","allowRowResize","orderBy","touchZoomMin","touchZoomMax","WorkSheet","handleCreate","useCallback","node","oldStringSorter","sorters","string","columnName","direction","sortTime","sortCount","number","l","r","info","addEventListener","e","star","row","ctx","fillStyle","COLOR","FOUR_STAR","FIVE_STAR","height","ISMOBILE","canvas","margin","cellHorizontalAlignment","activeCellHorizontalAlignment","columnHeaderCellHorizontalAlignment","font","FONT_FAMILY","cellFont","activeCellFont","columnHeaderCellFont","rowHeaderCellFont","cellColor","activeCellColor","css","format","date","mouth","getMonth","day","getDate","getFullYear","Panel","Collapse","CollapseWorkSheet","onGetData","useState","isCollapsed","setCollapsed","handleCreateGrid","orderDirection","getData","endIndex","allData","SHOW_DATA_ALL_KEY","dayStart","parseToDate","dayEnd","startIndex","findIndex","i","length","slice","handleChange","key","activeKey","onChange","header","SCHEMA_ALL","echarts","TitleComponent","ToolboxComponent","TooltipComponent","GridComponent","LegendComponent","DataZoomComponent","MarkPointComponent","CanvasRenderer","BarChart","barList","THREE_STAR","Timeline","echartsWrapper","myChartRef","hideZeroDay","setHideZeroDay","currentday","setCurrentDay","useCacheMemo","isHideZeroDay","countByDay","getDay","dateList","begin","end","arr","str_b","split","str_e","date_b","Date","setUTCFullYear","date_e","unixDb","getTime","unixDe","j","push","parseInt","getDateInfo","map","count","addToList","walk","item","星级","len","时间","calculateData","getOption","memoize","dataList","markPoint","max","maxBy","o","label","color","itemStyle","name","value","xAxis","indexOf","yAxis","type","series","index","stack","undefined","formatToEchartsOption","getInfoByDay","Object","create","forEach","isHideZeroDayRef","useMemo","legendFormatData","5","4","3","debouncedFreshChart","debounce","myChart","setOption","getTitle","xData","get","getModel","startValue","endValue","startDay","endDay","reduce","acc","cur","option","title","text","textStyle","fontFamily","fontWeight","options","tooltip","trigger","formatter","axisValue","total","reverse","marker","seriesName","join","toolbox","feature","mySaveAsImage","show","icon","onclick","tempCanvas","document","createElement","Math","getWidth","getHeight","tempChart","dataZoom","animation","backgroundColor","right","bottom","renderPngTip","resolve","downloadCanvas","legend","top","charAt","boundaryGap","start","getZr","on","params","pointInPixel","offsetX","offsetY","containPixel","xIndex","convertFromPixel","seriesIndex","handleChangeSwitch","checked","message","banner","showIcon"],"mappings":"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","file":"static/js/13.23edc58c.chunk.js","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport React, { FC, useEffect, useRef } from 'react';\n// @ts-ignore\nimport canvasDataGrid from 'canvas-datagrid';\n\ntype CanvasDataGridProps = {\n  onCreate?: (grid: any) => void; // 获取最初的参数\n  attributes?: {\n    [key: string]: any;\n  };\n  data: Array<any> | undefined;\n  schema?: Array<any>;\n};\n// 给予canvas-datagrid一个缩放，令x轴方向不出现滚动条\nfunction scaleToWidth(grid: any) {\n  if (!grid.self) return;\n  if (grid.style.width === 'auto') return;\n  const sbw = grid.style.scrollBarWidth * 2 * grid.style.scrollBarBorderWidth * 2;\n  const { scrollBox } = grid.self;\n  let dataWidth = scrollBox.width / scrollBox.widthBoxRatio;\n  if (scrollBox.verticalBarVisible) dataWidth -= sbw;\n  const showWidth = scrollBox.bar.v.x;\n  grid.self.scale *= showWidth / (dataWidth + scrollBox.left);\n}\nexport const CanvasDataGrid: FC<\n  CanvasDataGridProps & React.HTMLAttributes<HTMLDivElement>\n> = function ({ data, schema, attributes, onCreate, ...props }) {\n  const divEl = useRef(null);\n  const gridRef = useRef(null);\n  useEffect(() => {\n    if (gridRef.current) {\n      const grid: any = gridRef.current;\n      grid.schema = schema;\n      scaleToWidth(grid);\n    }\n  }, [schema]);\n  useEffect(() => {\n    if (gridRef.current) {\n      (gridRef.current as any).data = data;\n    }\n  }, [data]);\n  useEffect(() => {\n    let grid: any;\n    const timer = setTimeout(() => {\n      grid = canvasDataGrid({\n        parentNode: divEl.current,\n        schema: schema,\n        ...attributes,\n      });\n      grid.style.scrollBarBoxWidth = 10;\n      grid.style.scrollBarWidth = 13;\n      onCreate && onCreate(grid);\n      scaleToWidth(grid);\n      gridRef.current = grid;\n      setTimeout(() => {\n        if (gridRef.current) (gridRef.current as any).data = data;\n      });\n    });\n    return () => {\n      clearTimeout(timer);\n      if (gridRef.current) {\n        (gridRef.current as any).dispose();\n        delete (gridRef.current as any).self;\n      }\n    };\n  }, []);\n  return <div ref={divEl} {...props}></div>;\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { COLOR, FONT_FAMILY, ISMOBILE } from 'const';\nimport React, { FC, useCallback } from 'react';\nimport { CanvasDataGrid } from './CanvasDataGrid';\n\ntype WorkSheetProps = {\n  data: Array<any>;\n  schema: SchemaType;\n  onCreate?: (grid: any) => void;\n};\n\ntype SchemaType = Array<{\n  name?: string;\n  type?: string;\n  title?: string;\n  width?: number;\n  hidden?: boolean;\n  filter?: (e: any) => boolean;\n  formatter?: (e: any) => any;\n  defaultValue?: any;\n}>;\n\nconst attributes = {\n  editable: false,\n  allowColumnResize: false,\n  allowRowResize: false,\n  orderBy: '时间',\n  touchZoomMin: 0.5,\n  touchZoomMax: 1.5,\n};\nexport const WorkSheet: FC<WorkSheetProps> = function ({ data, schema, onCreate }) {\n  const handleCreate = useCallback((node: any) => {\n    if (process.env.NODE_ENV === 'development') (window as any).node = node;\n    const oldStringSorter = node.sorters.string;\n    // sortBy 时间\n    node.sorters.string = function (columnName: string, direction: string) {\n      if (columnName === '时间') {\n        const sortTime = oldStringSorter(columnName, direction);\n        const sortCount = node.sorters.number('总次数', direction);\n        return (l: any, r: any) => {\n          const info = sortTime(l, r);\n          return info === 0 ? sortCount(l, r) : info;\n        };\n      } else return oldStringSorter(columnName, direction);\n    };\n    // render color:\n    node.addEventListener('rendertext', function (e: any) {\n      const star = e.row['星级'];\n      if (star === 4) {\n        e.ctx.fillStyle = COLOR.FOUR_STAR;\n      } else if (star === 5) {\n        e.ctx.fillStyle = COLOR.FIVE_STAR;\n      }\n    });\n    node.style.height = '100%';\n    if (ISMOBILE) node.style.width = '100%';\n    node.canvas.style.margin = '0 auto';\n    node.style.cellHorizontalAlignment = 'center';\n    node.style.activeCellHorizontalAlignment = 'center';\n    node.style.columnHeaderCellHorizontalAlignment = 'center';\n    const font = '16px ' + FONT_FAMILY;\n    node.style.cellFont = font;\n    node.style.activeCellFont = font;\n    node.style.columnHeaderCellFont = font;\n    node.style.rowHeaderCellFont = font;\n    node.style.cellColor = '#262626';\n    node.style.activeCellColor = '#262626';\n    onCreate && onCreate(node);\n  }, []);\n  return (\n    <CanvasDataGrid\n      css={css`\n        width: 100%;\n        height: 100%;\n        position: relative;\n        overflow-y: hidden;\n        overflow-x: auto;\n        border-bottom: 2px dotted thistle;\n      `}\n      onCreate={handleCreate}\n      data={data}\n      schema={schema}\n      attributes={attributes}\n    />\n  );\n};\n","function format(date: Date) {\n  var mouth = date.getMonth() + 1 >= 10 ? date.getMonth() + 1 : '0' + (date.getMonth() + 1);\n  var day = date.getDate() >= 10 ? date.getDate() : '0' + date.getDate();\n  return date.getFullYear() + '-' + mouth + '-' + day; // 返回 “年-月-日”格式\n}\n\nexport function getDateInfo(begin: string, end: string) {\n  var arr = [];\n  var str_b = begin.split('-');\n  var str_e = end.split('-');\n  var date_b = new Date();\n  // @ts-ignore\n  date_b.setUTCFullYear(str_b[0], str_b[1] - 1, str_b[2]);\n  var date_e = new Date();\n  // @ts-ignore\n  date_e.setUTCFullYear(str_e[0], str_e[1] - 1, str_e[2]);\n  var unixDb = date_b.getTime();\n  var unixDe = date_e.getTime();\n  for (var j = unixDb; j <= unixDe; ) {\n    arr.push(format(new Date(parseInt(j as any))));\n    j = j + 24 * 60 * 60 * 1000;\n  }\n  return arr;\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React, { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\n// @ts-ignore\nimport { Collapse } from 'antd';\nimport { WorkSheet } from 'components/WorkSheet';\nimport { SCHEMA_ALL, SHOW_DATA_ALL_KEY } from 'const';\nimport { Data } from 'types';\nimport parseToDate from 'utils/parseToDate';\n\nconst { Panel } = Collapse;\n\ntype CollapseWorkSheetProps = {\n  day: string;\n  onGetData: (key: string) => any;\n};\nexport const CollapseWorkSheet: FC<CollapseWorkSheetProps> = function ({ day, onGetData }) {\n  const [isCollapsed, setCollapsed] = useState(true);\n  const handleCreateGrid = useCallback((grid) => {\n    grid.orderBy = '星级';\n    grid.orderDirection = 'desc'; /// descending order;\n  }, []);\n  const getData = useCallback((day) => {\n    const allData: Data = onGetData(SHOW_DATA_ALL_KEY);\n    const dayStart = +parseToDate(`${day} 00:00:00`);\n    const dayEnd = dayStart + 3600 * 24 * 1000;\n    const startIndex = allData.findIndex((data) => data.date >= dayStart);\n    let endIndex;\n    for (let i = startIndex; i < allData.length; i++) {\n      if (allData[i].date >= dayEnd) {\n        endIndex = i;\n        break;\n      }\n    }\n    return allData.slice(startIndex, endIndex);\n  }, []);\n  const handleChange = useCallback((key: any) => {\n    if (key.length === 1) setCollapsed(false);\n    else setCollapsed(true);\n  }, []);\n  return (\n    <Collapse\n      activeKey={isCollapsed ? '' : '1'}\n      onChange={handleChange}\n      css={css`\n        margin-top: 12px;\n        .ant-collapse-content-box {\n          background: #f0f2f5;\n        }\n      `}\n    >\n      <Panel header={'点击展开 ' + day + ' 数据'} key='1'>\n        <div\n          css={css`\n            width: 100%;\n            height: 500px;\n          `}\n        >\n          {!isCollapsed && (\n            <WorkSheet data={getData(day)} schema={SCHEMA_ALL} onCreate={handleCreateGrid} />\n          )}\n        </div>\n      </Panel>\n    </Collapse>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React, { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport * as echarts from 'echarts/core';\nimport {\n  TitleComponent,\n  ToolboxComponent,\n  TooltipComponent,\n  GridComponent,\n  LegendComponent,\n  DataZoomComponent,\n  MarkPointComponent,\n} from 'echarts/components';\nimport { BarChart } from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { ECharts } from 'echarts/core';\nimport { Data, DataItem } from 'types';\nimport { COLOR, FONT_FAMILY, SHOW_DATA_ALL_KEY } from 'const';\nimport { Alert, Switch } from 'antd';\nimport memoize from 'lodash/memoize';\nimport { getDateInfo } from './getDateInfo';\nimport { CollapseWorkSheet } from './CollapseWorkSheet';\nimport { useCacheMemo } from 'context/CacheContext';\nimport get from 'lodash/get';\nimport maxBy from 'lodash/maxBy';\nimport renderPngTip from 'utils/renderPngTip';\nimport downloadCanvas from 'utils/downloadCanvas';\nimport debounce from 'lodash/debounce';\n\necharts.use([\n  TitleComponent,\n  ToolboxComponent,\n  TooltipComponent,\n  GridComponent,\n  LegendComponent,\n  DataZoomComponent,\n  MarkPointComponent,\n  CanvasRenderer,\n  BarChart,\n]);\ntype TimelineProps = {\n  onGetData: (key: string) => Data;\n};\ntype DateInfo = {\n  count: number;\n  '5': number;\n  '4': number;\n  '3': number;\n  day: string;\n};\nfunction calculateData(data: Data) {\n  const countByDay: Array<DateInfo> = [];\n  function addToList(current: DateInfo) {\n    countByDay.push(current);\n  }\n  const format = (index: number) => data[index].时间.slice(0, 10);\n  const initCurrent = () => ({\n    count: 0,\n    '5': 0,\n    '4': 0,\n    '3': 0,\n    day: '',\n  });\n  let current = initCurrent();\n  const walk = (item: DataItem) => {\n    current.count += 1;\n    (current as any)[item.星级] += 1;\n  };\n  for (let i = 0, len = data.length; i < len; i++) {\n    const item = data[i];\n    const day = format(i);\n    if (current.day === day) {\n      walk(item);\n    } else {\n      current.count && addToList(current);\n      current = initCurrent();\n      current.day = day;\n      walk(item);\n    }\n  }\n  current.count && addToList(current);\n  return countByDay;\n}\nconst barList = [\n  ['3 星', '3', COLOR.THREE_STAR],\n  ['4 星', '4', COLOR.FOUR_STAR],\n  ['5 星', '5', '#FAC858'],\n];\n\nexport const Timeline: FC<TimelineProps> = function ({ onGetData }) {\n  const echartsWrapper = useRef<HTMLDivElement>(null);\n  const myChartRef = useRef<ECharts>();\n  const [hideZeroDay, setHideZeroDay] = useState(true);\n  const [currentday, setCurrentDay] = useState<string>();\n\n  // 获取数据，并写入缓存。\n  const { getOption, getInfoByDay } = useCacheMemo(\n    () => {\n      function formatToEchartsOption(dataList: DateInfo[]) {\n        const max = maxBy(dataList, (o) => o.count);\n        let markPoint: any;\n        if (max) {\n          markPoint = {\n            label: {\n              color: '#fff',\n            },\n            itemStyle: {\n              color: COLOR.THREE_STAR,\n            },\n            data: [\n              {\n                name: '抽卡数最多',\n                value: max.count,\n                xAxis: dataList.indexOf(max),\n                yAxis: max.count,\n              },\n            ],\n          };\n        }\n        return {\n          xAxis: {\n            type: 'category',\n            data: dataList.map(({ day }) => day),\n          },\n          series: barList.map(([name, key, color], index) => {\n            return {\n              name,\n              type: 'bar',\n              stack: 'total',\n              markPoint: key === '5' ? markPoint : undefined,\n              itemStyle: {\n                color,\n              },\n              data: dataList.map((data: any) => data[key]),\n            };\n          }),\n        };\n      }\n      function getData(isHideZeroDay: boolean) {\n        if (!isHideZeroDay) {\n          const countByDay: DateInfo[] = getData(true);\n          // 如果中间日期需要显示\n          const getDay = (data: DateInfo) => data.day;\n          // 获取最开始一天和最后一天中间的日期\n          const dateList: DateInfo[] = getDateInfo(\n            getDay(countByDay[0]),\n            getDay(countByDay[countByDay.length - 1]),\n          ).map((day: string) => ({\n            count: 0,\n            '5': 0,\n            '4': 0,\n            '3': 0,\n            day,\n          }));\n          let j = 0;\n          for (let i = 0; i < countByDay.length; i++) {\n            const day = getDay(countByDay[i]);\n            while (day !== dateList[j].day) {\n              j++;\n              if (j >= dateList.length) break;\n            }\n            dateList[j] = countByDay[i];\n          }\n          return dateList;\n        }\n        return calculateData(onGetData(SHOW_DATA_ALL_KEY));\n      }\n      const getOption = function (isHideZeroDay: boolean) {\n        return formatToEchartsOption(getData(isHideZeroDay));\n      };\n      let map: any;\n      function getInfoByDay(day: string): DateInfo | undefined {\n        if (map) return map[day];\n        map = Object.create(null);\n        getData(true).forEach((info) => (map[info.day] = info));\n        return getInfoByDay(day);\n      }\n      return {\n        getOption: memoize(getOption),\n        getInfoByDay,\n      };\n    },\n    [],\n    'timeline',\n  );\n\n  const isHideZeroDayRef = useRef(hideZeroDay);\n  const { legendFormatData, getTitle, debouncedFreshChart } = useMemo(() => {\n    const legendFormatData = {\n      current: {\n        5: 0,\n        4: 0,\n        3: 0,\n      },\n    } as any;\n    const debouncedFreshChart = debounce(() => {\n      const myChart = myChartRef.current;\n      if (!myChart) return;\n      myChart.setOption({}, false, true);\n    }, 100);\n    const getTitle = () => {\n      const myChart = myChartRef.current;\n      if (!myChart) return 'chart not exist';\n      const xData = getOption(isHideZeroDayRef.current).xAxis.data;\n      const { startValue, endValue } = get((myChart as any).getModel(), 'option.dataZoom[0]') || {\n        startValue: 0,\n        endValue: xData.length - 1,\n      };\n      const startDay = xData[startValue];\n      const endDay = xData[endValue];\n      const data = xData.slice(startValue, endValue + 1).reduce(\n        (acc, cur: string) => {\n          const info = getInfoByDay(cur);\n          if (info && info.count) {\n            acc.count += info.count;\n            acc['5'] += info['5'];\n            acc['4'] += info['4'];\n            acc['3'] += info['3'];\n          }\n          return acc;\n        },\n        {\n          count: 0,\n          5: 0,\n          4: 0,\n          3: 0,\n        },\n      );\n      legendFormatData.current = {\n        5: data['5'],\n        4: data['4'],\n        3: data['3'],\n      };\n      return `${startDay} - ${endDay} (共${data.count}抽)`;\n    };\n    return {\n      legendFormatData,\n      getTitle,\n      debouncedFreshChart,\n    };\n  }, []);\n  useEffect(() => {\n    isHideZeroDayRef.current = hideZeroDay;\n    if (myChartRef.current) {\n      const option = getOption(hideZeroDay);\n      myChartRef.current.setOption(option);\n      myChartRef.current.setOption(\n        {\n          title: {\n            text: getTitle(),\n          },\n        },\n        false,\n        true,\n      );\n    }\n  }, [hideZeroDay]);\n  useEffect(() => {\n    let myChart: ECharts;\n    if (echartsWrapper.current) {\n      myChart = echarts.init(echartsWrapper.current);\n      myChartRef.current = myChart;\n      const textStyle = {\n        fontFamily: FONT_FAMILY,\n        fontWeight: 'normal',\n      };\n      const options = {\n        textStyle,\n        tooltip: {\n          trigger: 'axis',\n          formatter(series: any[]) {\n            if (series.length === 0) return '';\n            const day = series[0].axisValue;\n            const info = getInfoByDay(day);\n            const total = info ? info.count : 0;\n            return `<div style=\"font-size:14px;color:#666;font-weight:400;line-height:1.5;\">\n              <div>${day}</div>\n              <div>当日抽卡次数: <span style=\"font-weight:900\">${total}<span></div>\n              ${series\n                .reverse()\n                .map(\n                  (data) => `<div>\n                  ${data.marker}\n                  <span style=\"margin-left:2px\">${data.seriesName}</span>\n                  <span style=\"float:right;margin-left:20px;font-weight:900;color=${data.color}\">${data.value}</span>\n                </div>`,\n                )\n                .join('')}</div>`;\n          },\n        },\n        title: {\n          left: 'center',\n          text: getTitle(),\n          textStyle,\n        },\n        toolbox: {\n          feature: {\n            mySaveAsImage: {\n              show: true,\n              icon:\n                'path://M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n              title: '保存为图片',\n              onclick() {\n                const option = myChart.getOption();\n                const tempCanvas = document.createElement('canvas');\n                tempCanvas.width = Math.max(1200, myChart.getWidth());\n                tempCanvas.height = Math.max(600, myChart.getHeight());\n                const tempChart = echarts.init(tempCanvas);\n                tempChart.setOption({\n                  ...option,\n                  toolbox: {},\n                  dataZoom: (option as any).dataZoom[0],\n                  animation: false,\n                  backgroundColor: '#fff',\n                  grid: {\n                    left: '5%',\n                    right: '5%',\n                    bottom: 45,\n                  },\n                });\n                renderPngTip((resolve) => {\n                  downloadCanvas(tempCanvas, (option as any).title[0].text, () => {\n                    resolve();\n                    tempChart.dispose();\n                    tempCanvas.width = 0;\n                    tempCanvas.height = 0;\n                  });\n                });\n              },\n            },\n          },\n          right: '5%',\n        },\n        legend: {\n          top: 25,\n          data: barList.map(([name]) => name),\n          formatter(name: string) {\n            return `${name}(共${legendFormatData.current[name.charAt(0)]}个)`;\n          },\n        },\n        yAxis: {\n          type: 'value',\n          boundaryGap: false,\n        },\n        dataZoom: [\n          {\n            type: 'inside',\n            start: 0,\n            end: 100,\n          },\n          {\n            start: 0,\n            end: 100,\n          },\n        ],\n        ...getOption(isHideZeroDayRef.current),\n      };\n      options && myChart.setOption(options as any);\n      myChart.getZr().on('click', function (params) {\n        const pointInPixel = [params.offsetX, params.offsetY];\n        if (myChart.containPixel('grid', pointInPixel)) {\n          let xIndex = myChart.convertFromPixel({ seriesIndex: 0 }, [\n            params.offsetX,\n            params.offsetY,\n          ])[0];\n          const option = myChart.getOption();\n          const day = get(option, `xAxis[0].data[${xIndex}]`) as string;\n          if (day) setCurrentDay(day);\n        }\n      });\n      myChart.on('datazoom', (e: any) => {\n        const option = (myChart as any).getModel().option;\n        option.title[0].text = getTitle();\n        debouncedFreshChart();\n      });\n    }\n    return () => {\n      myChart && myChart.dispose();\n    };\n  }, []);\n  const handleChangeSwitch = useCallback((checked: boolean) => {\n    setHideZeroDay(!checked);\n  }, []);\n  return (\n    <div\n      css={css`\n        width: 100%;\n        height: 100%;\n        overflow-y: auto;\n        overflow-x: hidden;\n        position: absolute;\n      `}\n    >\n      <div\n        css={css`\n          width: 100%;\n          display: flex;\n          justify-content: center;\n          background: #e6f7ff;\n          margin: 0 0 20px;\n          .ant-alert {\n            background: #e6f7ff;\n          }\n        `}\n      >\n        <Alert\n          message={<div>点击图中数据可以查看当天的抽卡记录</div>}\n          type='info'\n          banner\n          showIcon\n        />\n      </div>\n      <div>\n        显示没有抽卡的日期: <Switch checked={!hideZeroDay} onChange={handleChangeSwitch} />\n      </div>\n      <div\n        ref={echartsWrapper}\n        css={css`\n          width: 100%;\n          height: 500px;\n        `}\n      ></div>\n      {currentday && <CollapseWorkSheet onGetData={onGetData} day={currentday} />}\n    </div>\n  );\n};\n"],"sourceRoot":""}