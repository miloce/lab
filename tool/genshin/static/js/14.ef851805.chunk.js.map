{"version":3,"sources":["components/PieChart.tsx","pages/ShowPage/AnalysisChart/utils.ts","pages/ShowPage/AnalysisChart/PoolAnalysis.tsx","pages/ShowPage/AnalysisChart/renderToCanvas.tsx","components/WordCloud.tsx","pages/ShowPage/AnalysisChart/WordCloudCharts/WordCloudChart.tsx","pages/ShowPage/AnalysisChart/WordCloudCharts/index.tsx","pages/ShowPage/AnalysisChart/index.tsx"],"names":["echarts","TitleComponent","TooltipComponent","LegendComponent","EchartsPieChart","CanvasRenderer","PieChart","onCreate","props","echartsWrapperRef","useRef","useEffect","myChart","resize","current","throttle","window","addEventListener","dispose","removeEventListener","ref","timeFormatter","date","parseToDate","toLocaleDateString","percent","num","total","Math","round","percentColors","pct","color","r","g","b","getColorByPercent","i","length","lower","upper","range","rangePct","pctLower","pctUpper","floor","join","PoolAnalysis","sheetName","data","info","useCacheMemo","poolMax","indexOf","isWeaponPool","keys","langs","colors","colorByKey","Object","fromEntries","map","key","index","countByKey","langByKey","fiveStarHistory","forEach","item","星级","push","类别","isWeapon","lastFiveStar","takeRight","leftCount","lastIndexOf","chartDataList","filter","chartData","value","name","chartColors","chartSelected","fromTime","toTime","totalCount","fiveStarCount","fourStarCount","threeStarCount","fiveStarAverage","meanBy","o","保底内","chartRef","handlePieChartCreate","useCallback","chart","textStyle","fontFamily","FONT_FAMILY","fontStyle","setOption","title","text","left","tooltip","trigger","legend","top","selected","series","type","startAngle","radius","getColorByCount","count","renderPercent","style","css","renderColor","height","once","scrollContainer","COLOR","FIVE_STAR","FOUR_STAR","THREE_STAR","名称","总次数","renderItem","toFixed","getFont","size","isChangeLineChar","char","drawText","ctx","restore","width","letterSpace","lineHeight","setup","loc","x","y","undefined","match","font","Error","parseFloat","fromattedText","Array","isArray","maxWidth","changeLine","max","walk","charWidth","measureText","textItem","str","draw","sx","sy","fillText","colorText","before","fillStyle","WIDTH","HEIGHT","renderTextContent","baseTextSet","rawStringArr","drawTextByTag","resetCanvas","textBaseline","textAlign","colorCount","dateWidth","dateHeight","drawDate","infoHeight","drawInfo","starWidth","starHeight","drawStarCount","drawExtraInfo","drawPercent","fiveStarHistoryHeight","drawHistory","averageHeight","drawAverage","CONTENT_WIDTH","drawEndLine","fontWidth","drawLink","strokeStyle","lineCap","lineWidth","centerY","beginPath","moveTo","lineTo","closePath","stroke","defaultFormatter","WordCloud","list","formatter","canvasRef","tooltipRef","useState","setTooltip","tooltipVisible","setTooltipVisible","visibleRef","hover","useMemo","dimension","event","tootipEl","innerHTML","getBoundingClientRect","clientX","clientY","document","body","clientWidth","clientHeight","offsetX","min","offsetY","timer","setTimeout","wordCloud","gridSize","backgroundColor","rotateRatio","drawOutOfBound","shrinkToFit","clearTimeout","zIndex","opacity","dangerouslySetInnerHTML","__html","WordCloudChart","filters","initialValue","initialList","isSelected","checkedList","setCheckedList","handleChange","filteredList","filterArr","v","find","some","reduce","acc","cur","pow","Group","options","onChange","WordCloudCharts","onGetData","wordCloudWrapperRef","isVertical","useGlobalContext","wordCloudData","SHOW_DATA_ALL_KEY","countMap","star","randomColor","luminosity","isCharacter","weapons","characters","values","sorter","a","getWordCloudList","sort","weaponList","characterList","handleRenderWordCloudPng","renderPngTip","resolve","reject","canvasCollection","getElementsByTagName","canvas1","selfWidth","selfHeight","canvas","createElement","getContext","currentCanvas","drawImage","downloadCanvas","slice","onClick","icon","AnalysisChart","sheetNames","dataArr","validSheetNames","localCache","useCacheContext","handleRenderPng","infoList","callback","tempCanvas","renderer","animation","PADDING","TOP","LEFT","RIGHT","BOTTOM","draws","maxHeight","cacheCanvas","cacheCtx","contentHeight","drawContent","endLineHeight","drawEndLink","canvasWidth","canvasHeight","fillRect","renderToCanvas","target","href","ISMOBILE","shape","IconButton","tip","placement","FriendLinks","mode"],"mappings":"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","file":"static/js/14.ef851805.chunk.js","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { FC, useEffect, useRef } from 'react';\nimport * as echarts from 'echarts/core';\nimport { TitleComponent, TooltipComponent, LegendComponent } from 'echarts/components';\nimport { PieChart as EchartsPieChart } from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { ECharts } from 'echarts/core';\nimport throttle from 'lodash/throttle';\n\necharts.use([TitleComponent, TooltipComponent, LegendComponent, EchartsPieChart, CanvasRenderer]);\n\ninterface PieChartProps {\n  onCreate: (chart: ECharts) => void;\n  [key: string]: any;\n}\n\nexport const PieChart: FC<PieChartProps> = ({ onCreate, ...props }) => {\n  const echartsWrapperRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    let myChart: ECharts;\n    let resize: any;\n    if (echartsWrapperRef.current) {\n      myChart = echarts.init(echartsWrapperRef.current);\n      onCreate(myChart);\n      resize = throttle(() => {\n        myChart.resize();\n      }, 100);\n      window.addEventListener('resize', resize);\n    }\n    return () => {\n      if (myChart) {\n        myChart.dispose();\n        window.removeEventListener('resize', resize);\n      }\n    };\n  }, []);\n  return <div ref={echartsWrapperRef} {...props}></div>;\n};\n","import parseToDate from 'utils/parseToDate';\n\nexport const timeFormatter = (date: number) => parseToDate(date).toLocaleDateString();\n\nexport const percent = (num: number, total: number) => {\n  return `${Math.round((num / total) * 10000) / 100}%`;\n};\n\nvar percentColors = [\n  { pct: 0.0, color: { r: 46, g: 200, b: 5 } },\n  { pct: 0.77, color: { r: 67, g: 93, b: 250 } },\n  { pct: 1.0, color: { r: 0xff, g: 0, b: 0 } },\n];\n\nexport var getColorByPercent = function (pct: number) {\n  for (var i = 1; i < percentColors.length - 1; i++) {\n    if (pct < percentColors[i].pct) {\n      break;\n    }\n  }\n  var lower = percentColors[i - 1];\n  var upper = percentColors[i];\n  var range = upper.pct - lower.pct;\n  var rangePct = (pct - lower.pct) / range;\n  var pctLower = 1 - rangePct;\n  var pctUpper = rangePct;\n  var color = {\n    r: Math.floor(lower.color.r * pctLower + upper.color.r * pctUpper),\n    g: Math.floor(lower.color.g * pctLower + upper.color.g * pctUpper),\n    b: Math.floor(lower.color.b * pctLower + upper.color.b * pctUpper),\n  };\n  return 'rgb(' + [color.r, color.g, color.b].join(',') + ')';\n  // or output as hex if preferred\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { PieChart } from 'components/PieChart';\nimport { COLOR, FONT_FAMILY } from 'const';\nimport { ECharts } from 'echarts/core';\nimport takeRight from 'lodash/takeRight';\nimport meanBy from 'lodash/meanBy';\nimport { FC, useCallback, useEffect, useMemo, useRef } from 'react';\nimport { DataItem } from 'types';\nimport { timeFormatter, percent, getColorByPercent } from './utils';\nimport { useCacheMemo } from 'context/CacheContext';\n// @ts-ignore\nimport LazyLoad from 'react-lazyload';\n\ninterface PoolAnalysisProps {\n  sheetName: string;\n  data: DataItem[];\n}\n\nexport const PoolAnalysis: FC<PoolAnalysisProps> = ({ sheetName, data }) => {\n  const info = useCacheMemo(\n    () => {\n      // 解析数据\n      const isWeaponPool = (sheetName: string) => sheetName.indexOf('武器') !== -1;\n      const poolMax = isWeaponPool(sheetName) ? 80 : 90;\n      const isWeapon = (item: DataItem) => item.类别 === '武器';\n      const keys = ['character5', 'weapon5', 'character4', 'weapon4', 'weapon3'];\n      const langs = ['5星角色', '5星武器', '4星角色', '4星武器', '3星武器'];\n      const colors = ['#fac858', '#ee6666', '#5470c6', '#91cc75', '#73c0de'];\n      const colorByKey = Object.fromEntries(keys.map((key, index) => [key, colors[index]]));\n      const countByKey = Object.fromEntries(keys.map((key) => [key, 0]));\n      const langByKey = Object.fromEntries(keys.map((key, index) => [key, langs[index]]));\n      const fiveStarHistory: DataItem[] = [];\n      data.forEach((item) => {\n        if (item.星级 === 5) fiveStarHistory.push(item);\n        countByKey[`${isWeapon(item) ? 'weapon' : 'character'}${item.星级}`] += 1;\n      });\n      const lastFiveStar = fiveStarHistory.length === 0 ? null : takeRight(fiveStarHistory)[0];\n      const leftCount = lastFiveStar\n        ? data.length - data.lastIndexOf(lastFiveStar!) - 1\n        : data.length;\n      const chartDataList = keys.filter((key) => countByKey[key] !== 0);\n      const chartData = chartDataList.map((key) => ({\n        value: countByKey[key],\n        name: langByKey[key],\n      }));\n      const chartColors = chartDataList.map((key) => colorByKey[key]);\n      return {\n        name: sheetName,\n        chartSelected: {\n          [langByKey['weapon3']]: data.length > 20 ? false : true,\n        },\n        poolMax,\n        chartData,\n        chartColors,\n        fromTime: data[0].date,\n        toTime: data[data.length - 1].date,\n        totalCount: data.length,\n        leftCount,\n        fiveStarCount: fiveStarHistory.length,\n        fourStarCount: countByKey['weapon4'] + countByKey['character4'],\n        threeStarCount: countByKey['weapon3'],\n        fiveStarHistory,\n        fiveStarAverage: meanBy(fiveStarHistory, (o) => o.保底内),\n      };\n    },\n    [data],\n    sheetName,\n  );\n  const chartRef = useRef<ECharts>();\n  const handlePieChartCreate = useCallback(\n    (chart: ECharts) => {\n      chartRef.current = chart;\n      const textStyle = {\n        fontFamily: FONT_FAMILY,\n        fontStyle: 'normal',\n      };\n      chart.setOption({\n        textStyle: {\n          fontFamily: FONT_FAMILY,\n          fontStyle: 'normal',\n        },\n        title: {\n          text: info.name,\n          left: 'center',\n          textStyle,\n        },\n        tooltip: {\n          trigger: 'item',\n        },\n        legend: {\n          top: '10%',\n          left: 'center',\n          selected: info.chartSelected,\n        },\n        color: info.chartColors,\n        series: [\n          {\n            name: info.name,\n            type: 'pie',\n            top: 50,\n            startAngle: 70,\n            radius: '70%',\n            data: info.chartData,\n          },\n        ],\n      });\n    },\n    [info],\n  );\n  const getColorByCount = (count: number) => {\n    return getColorByPercent(count / info.poolMax);\n  };\n  function renderPercent(title: string, count: number, color?: string) {\n    return (\n      <>\n        <span style={color ? { color } : void 0}>\n          <span\n            css={css`\n              display: inline-block;\n              width: 100px;\n            `}\n          >\n            {title}：{count}\n          </span>\n          [{percent(count, info.totalCount)}]\n        </span>\n        <br />\n      </>\n    );\n  }\n  function renderColor(text: string | number, color: string) {\n    return <span style={{ color }}> {text} </span>;\n  }\n  function renderItem(item: DataItem) {\n    return (\n      <span\n        key={item.总次数}\n        style={{\n          color: getColorByCount(item.保底内),\n        }}\n        css={css`\n          margin: 4px;\n        `}\n      >\n        {item.名称}[{item.保底内}]\n      </span>\n    );\n  }\n  return (\n    <div\n      css={css`\n        display: inline-block;\n        width: 100%;\n        max-width: 450px;\n        text-align: left;\n        vertical-align: top;\n      `}\n    >\n      <LazyLoad height={500} once scrollContainer={'.ant-layout-content'}>\n        <PieChart\n          css={css`\n            height: 300px;\n          `}\n          onCreate={handlePieChartCreate}\n        />\n      </LazyLoad>\n      <div\n        css={css`\n          padding: 0 50px;\n        `}\n      >\n        <p\n          css={css`\n            text-align: center;\n            span {\n              color: grey;\n            }\n          `}\n        >\n          <span>{timeFormatter(info.fromTime)}</span>\n          <span> - </span>\n          <span>{timeFormatter(info.toTime)}</span>\n        </p>\n        <p>\n          <span>\n            一共抽取{renderColor(info.totalCount, '#1890ff')}次, 已累计\n            {renderColor(info.leftCount, getColorByCount(info.leftCount))}抽未出5星\n          </span>\n        </p>\n        <p>\n          {[\n            renderPercent('5星', info.fiveStarCount, COLOR.FIVE_STAR),\n            renderPercent('4星', info.fourStarCount, COLOR.FOUR_STAR),\n            renderPercent('3星', info.threeStarCount, COLOR.THREE_STAR),\n          ]}\n        </p>\n        {info.fiveStarHistory.length !== 0 && (\n          <>\n            <p>\n              5星历史记录：\n              {info.fiveStarHistory.map((item) => renderItem(item))}\n            </p>\n            <p>\n              5星平均出货次数：\n              {renderColor(info.fiveStarAverage.toFixed(2), getColorByCount(info.fiveStarAverage))}\n            </p>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { DataItem } from 'types';\nimport * as echarts from 'echarts/core';\nimport { TitleComponent, TooltipComponent, LegendComponent } from 'echarts/components';\nimport { PieChart as EchartsPieChart } from 'echarts/charts';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { COLOR, FONT_FAMILY } from 'const';\nimport { getColorByPercent, percent, timeFormatter } from './utils';\n\necharts.use([TitleComponent, TooltipComponent, LegendComponent, EchartsPieChart, CanvasRenderer]);\n\nfunction getFont(size: number) {\n  return `${size}px ${FONT_FAMILY}`;\n}\n\n// 对canvas执行操作的函数\ntype CanvasFunc = (ctx: CanvasRenderingContext2D) => void;\n// 对canvas执行setup，如果setup返回一个函数，则返回的函数是restore\ntype CanvasSetup = (ctx: CanvasRenderingContext2D) => CanvasFunc | void;\ntype TextItem =\n  | string\n  | {\n      text: string;\n      setup?: CanvasSetup;\n    };\nconst isChangeLineChar = (char: string) => char === '\\n';\n// draw text auto change line\nfunction drawText(\n  ctx: CanvasRenderingContext2D,\n  {\n    text,\n    width,\n    letterSpace = 0,\n    lineHeight,\n    setup,\n  }: {\n    text: TextItem | TextItem[];\n    width?: number;\n    letterSpace?: number;\n    lineHeight?: number;\n    setup?: CanvasSetup;\n  },\n) {\n  const loc = {\n    x: 0,\n    y: 0,\n  };\n  let restore: any;\n  const data: Array<\n    | {\n        char: string;\n        x: number;\n        y: number;\n      }\n    | CanvasFunc\n  > = []; // 记录绘制操作，是function则是对canvas的处理，是对象则是绘制字体的坐标\n  if (setup) {\n    restore = setup(ctx);\n    data.push(setup);\n  }\n  if (lineHeight === undefined) {\n    // 获取lineHeight\n    const match = ctx.font.match(/\\d\\dpx/);\n    if (match === null) throw new Error('match error');\n    else lineHeight = parseFloat(match[0]) * 1.3;\n  }\n  const fromattedText = Array.isArray(text) ? text : [text];\n  let maxWidth = 0;\n  function changeLine() {\n    loc.y += lineHeight!;\n    maxWidth = Math.max(loc.x, maxWidth);\n    loc.x = 0;\n  }\n  // 遍历字符char\n  const walk =\n    width === undefined\n      ? function (char: string) {\n          if (isChangeLineChar(char)) return changeLine();\n          const { width: charWidth } = ctx.measureText(char);\n          data.push({\n            char,\n            x: loc.x,\n            y: loc.y,\n          });\n          loc.x += charWidth + letterSpace;\n        }\n      : function (char: string) {\n          if (isChangeLineChar(char)) return changeLine();\n          const { width: charWidth } = ctx.measureText(char);\n          if (loc.x + charWidth + letterSpace > width) {\n            changeLine();\n            walk(char);\n          } else {\n            data.push({\n              char,\n              x: loc.x,\n              y: loc.y,\n            });\n            loc.x += charWidth + letterSpace;\n          }\n        };\n  fromattedText.forEach((textItem) => {\n    let str, restore;\n    if (typeof textItem === 'string') str = textItem;\n    else {\n      str = textItem.text;\n      if (textItem.setup) {\n        restore = textItem.setup(ctx);\n        data.push(textItem.setup);\n      }\n    }\n    for (let i = 0; i < str.length; i++) {\n      walk(str[i]);\n    }\n    if (restore) {\n      restore(ctx);\n      data.push(restore);\n    }\n  });\n  if (restore) {\n    restore(ctx);\n    data.push(restore);\n  }\n  return {\n    draw(x: number, y: number) {\n      // 实际进行绘制\n      data.forEach((item) => {\n        if (typeof item === 'function') item(ctx);\n        else {\n          const { char, x: sx, y: sy } = item;\n          ctx.fillText(char, x + sx, y + sy);\n        }\n      });\n    },\n    width: maxWidth === 0 ? loc.x : maxWidth,\n    height: loc.y + lineHeight,\n  };\n}\n// 返回不同颜色字体的设置\nfunction colorText(text: string | number, color: string) {\n  return {\n    text: ' ' + text + ' ',\n    setup(ctx: CanvasRenderingContext2D) {\n      const before = ctx.fillStyle;\n      ctx.fillStyle = color;\n      return () => {\n        ctx.fillStyle = before;\n      };\n    },\n  };\n}\n// draw Text by tag function\nfunction drawTextByTag(\n  ctx: CanvasRenderingContext2D,\n  {\n    width,\n    letterSpace = 0,\n    lineHeight,\n    setup,\n  }: {\n    width?: number;\n    letterSpace?: number;\n    lineHeight?: number;\n    setup?: CanvasSetup;\n  },\n) {\n  return function (rawStringArr: any, ...list: (TextItem | TextItem[])[]) {\n    const text = [];\n    for (let i = 0; i < rawStringArr.length; i++) {\n      text.push(rawStringArr[i]);\n      if (i < list.length) {\n        const item = list[i];\n        if (Array.isArray(item)) text.push(...item);\n        else text.push(item);\n      }\n    }\n    return drawText(ctx, {\n      text,\n      width,\n      letterSpace,\n      lineHeight,\n      setup,\n    });\n  };\n}\n// 传入参数\ntype Info = {\n  name: string;\n  chartSelected: {\n    [x: string]: boolean;\n  };\n  poolMax: number;\n  chartData: {\n    value: number;\n    name: string;\n  }[];\n  chartColors: string[];\n  fromTime: number;\n  toTime: number;\n  totalCount: number;\n  leftCount: number;\n  fiveStarCount: number;\n  fourStarCount: number;\n  threeStarCount: number;\n  fiveStarHistory: DataItem[];\n  fiveStarAverage: number;\n};\nconst WIDTH = 450;\nconst HEIGHT = 325;\nconst renderTextContent = (\n  ctx: CanvasRenderingContext2D,\n  {\n    totalCount,\n    poolMax,\n    fiveStarCount,\n    fourStarCount,\n    threeStarCount,\n    fiveStarHistory,\n    fiveStarAverage,\n    fromTime,\n    toTime,\n    leftCount,\n  }: Info,\n) => {\n  const TEXT_PADDING = 15;\n  const LINE_SPACE = 4;\n  const CONTENT_WIDTH = WIDTH - 2 * TEXT_PADDING;\n  const baseTextSet = drawTextByTag(ctx, {\n    width: CONTENT_WIDTH,\n  });\n  const resetCanvas = () => {\n    ctx.font = getFont(16);\n    ctx.textBaseline = 'top';\n    ctx.textAlign = 'left';\n  };\n  const getColorByCount = (count: number) => {\n    return getColorByPercent(count / poolMax);\n  };\n  const colorCount = (count: number) => colorText(count, getColorByCount(count));\n  resetCanvas();\n  let height = 0;\n  const { width: dateWidth, height: dateHeight, draw: drawDate } = baseTextSet`${colorText(\n    `${timeFormatter(fromTime)} - ${timeFormatter(toTime)}`,\n    '#808080',\n  )}`;\n  height += dateHeight + LINE_SPACE;\n  const { width: infoWidth, height: infoHeight, draw: drawInfo } = baseTextSet`一共${colorText(\n    totalCount,\n    '#1890ff',\n  )}抽，已累计${colorCount(leftCount)}抽未出5星`;\n  height += infoHeight + LINE_SPACE;\n  const { width: starWidth, height: starHeight, draw: drawStarCount } = baseTextSet`${colorText(\n    `5星：${fiveStarCount}`,\n    COLOR.FIVE_STAR,\n  )}\\n${colorText(`4星：${fourStarCount}`, COLOR.FOUR_STAR)}\\n${colorText(\n    `3星：${threeStarCount}`,\n    COLOR.THREE_STAR,\n  )}`;\n  height += starHeight + LINE_SPACE;\n  const { draw: drawPercent } = baseTextSet`${colorText(\n    `[${percent(fiveStarCount, totalCount)}]`,\n    COLOR.FIVE_STAR,\n  )}\\n${colorText(`[${percent(fourStarCount, totalCount)}]`, COLOR.FOUR_STAR)}\\n${colorText(\n    `[${percent(threeStarCount, totalCount)}]`,\n    COLOR.THREE_STAR,\n  )}`;\n  let drawExtraInfo: any;\n  if (fiveStarHistory.length !== 0) {\n    const { height: fiveStarHistoryHeight, draw: drawHistory } = baseTextSet(\n      ['5星历史记录：'],\n      fiveStarHistory.map((item) =>\n        colorText(`${item.名称}[${item.保底内}]`, getColorByCount(item.保底内)),\n      ),\n    );\n    height += fiveStarHistoryHeight + LINE_SPACE;\n    const { height: averageHeight, draw: drawAverage } = baseTextSet`5星平均出货次数：${colorCount(\n      parseFloat(fiveStarAverage.toFixed(2)),\n    )}`;\n    height += averageHeight + LINE_SPACE;\n    drawExtraInfo = function (x: number, y: number) {\n      drawHistory(x, y);\n      drawAverage(x, y + fiveStarHistoryHeight + LINE_SPACE);\n    };\n  }\n  return {\n    width: CONTENT_WIDTH,\n    height,\n    draw(x: number, y: number) {\n      const loc = {\n        x: x + TEXT_PADDING,\n        y,\n      };\n      resetCanvas();\n      drawDate(loc.x + CONTENT_WIDTH / 2 - dateWidth / 2, loc.y);\n      loc.y += dateHeight + LINE_SPACE;\n      drawInfo(loc.x, loc.y);\n      loc.y += infoHeight + LINE_SPACE;\n      drawStarCount(loc.x, loc.y);\n      drawPercent(loc.x + starWidth + 50, loc.y);\n      loc.y += starHeight + LINE_SPACE;\n      drawExtraInfo && drawExtraInfo(loc.x, loc.y);\n    },\n  };\n};\n// 绘制尾部链接\nfunction drawEndLine(ctx: CanvasRenderingContext2D) {\n  const LINE_PADDING = 20;\n  const { width: fontWidth, height, draw: drawLink } = drawText(ctx, {\n    text: 'https://genshin-gacha-analyzer.vercel.app/',\n    letterSpace: 1,\n    setup(ctx) {\n      ctx.font = getFont(13);\n      ctx.fillStyle = '#988b81';\n      ctx.textBaseline = 'middle';\n    },\n  });\n  const HEIGHT = 20;\n  return {\n    height: HEIGHT,\n    draw(x: number, y: number, width: number) {\n      ctx.strokeStyle = '#e0d6cb';\n      ctx.lineCap = 'round';\n      ctx.lineWidth = 2;\n      const centerY = y + HEIGHT / 2;\n      ctx.beginPath();\n      ctx.moveTo(x + LINE_PADDING, centerY);\n      ctx.lineTo(x + width / 2 - fontWidth / 2 - LINE_PADDING, centerY);\n      ctx.closePath();\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(x + width / 2 + fontWidth / 2 + LINE_PADDING, centerY);\n      ctx.lineTo(x + width - LINE_PADDING, centerY);\n      ctx.closePath();\n      ctx.stroke();\n      drawLink(x + width / 2 - fontWidth / 2, centerY);\n    },\n  };\n}\n\nexport function renderToCanvas(\n  infoList: Info[],\n  isVertical = false,\n  callback: (canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) => void,\n) {\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  const ctx: CanvasRenderingContext2D = canvas.getContext('2d')!;\n  const tempCanvas = document.createElement('canvas'); // 用于绘制echarts\n  tempCanvas.width = WIDTH;\n  tempCanvas.height = HEIGHT;\n  const textStyle = {\n    fontFamily: FONT_FAMILY,\n    fontStyle: 'normal',\n  };\n  const chart = echarts.init(tempCanvas, {\n    renderer: 'canvas',\n    width: WIDTH,\n    height: 300,\n  });\n  chart.setOption({\n    textStyle: {\n      fontFamily: FONT_FAMILY,\n      fontStyle: 'normal',\n    },\n    title: {\n      left: 'center',\n      textStyle,\n    },\n    tooltip: {\n      trigger: 'item',\n    },\n    legend: {\n      top: '10%',\n      left: 'center',\n    },\n    animation: false,\n  });\n  const PADDING = {\n    TOP: 10,\n    LEFT: 10,\n    RIGHT: 10,\n    BOTTOM: 0,\n  };\n  const loc = {\n    x: PADDING.LEFT,\n    y: PADDING.TOP,\n  };\n  const draws: (() => any)[] = []; // 存储实际进行绘制的函数\n  let maxHeight = 0;\n  // echarts绘制到tempCanvas上，再绘制到cacheCanvas上(cacheCanvas尺寸可以绘制多个饼图作为缓存)\n  const cacheCanvas = document.createElement('canvas');\n  cacheCanvas.width = WIDTH * infoList.length;\n  cacheCanvas.height = HEIGHT;\n  const cacheCtx = cacheCanvas.getContext('2d')!;\n\n  infoList.forEach((info, index) => {\n    // 根据每个info来绘制\n    chart.setOption({\n      title: {\n        text: info.name,\n      },\n      legend: {\n        selected: info.chartSelected,\n      },\n      color: info.chartColors,\n      series: [\n        {\n          name: info.name,\n          type: 'pie',\n          top: 50,\n          startAngle: 70,\n          radius: '70%',\n          data: info.chartData,\n        },\n      ],\n    });\n    // 将echarts绘制到tempCanvas，再绘制到cacheCanvas\n    cacheCtx.drawImage(tempCanvas, 0, 0, WIDTH, HEIGHT, index * WIDTH, 0, WIDTH, HEIGHT);\n    const { height: contentHeight, draw: drawContent } = renderTextContent(ctx, info);\n    if (isVertical) {\n      maxHeight += contentHeight + HEIGHT + 10;\n    } else {\n      maxHeight = Math.max(maxHeight, contentHeight + HEIGHT);\n    }\n    (function (x: number, y: number, i: number) {\n      draws.push(() =>\n        ctx.drawImage(cacheCanvas, i * WIDTH, 0, WIDTH, HEIGHT, x, y, WIDTH, HEIGHT),\n      );\n      draws.push(() => drawContent(x, y + HEIGHT));\n    })(loc.x, loc.y, index);\n    if (isVertical) {\n      loc.y = maxHeight;\n    } else loc.x += WIDTH;\n  });\n  const { height: endLineHeight, draw: drawEndLink } = drawEndLine(ctx);\n  const canvasWidth = loc.x + PADDING.RIGHT + (isVertical ? WIDTH : 0);\n  const canvasHeight = maxHeight + endLineHeight + PADDING.TOP + PADDING.BOTTOM;\n  canvas.width = canvasWidth;\n  canvas.height = canvasHeight;\n  ctx.fillStyle = '#fff'; // #f9f9f9\n  ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n  draws.forEach((draw) => draw());\n  const endLineWidth = WIDTH;\n  drawEndLink((canvasWidth - endLineWidth) / 2, canvasHeight - endLineHeight, endLineWidth);\n  callback(canvas, ctx);\n\n  // destroy\n  chart.dispose();\n  [tempCanvas, canvas, cacheCanvas].forEach((canvas) => {\n    canvas.width = 0;\n    canvas.height = 0;\n  });\n}\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FONT_FAMILY } from 'const';\nimport { FC, useEffect, useMemo, useRef, useState } from 'react';\n// @ts-ignore\nimport wordCloud from 'wordcloud';\nimport throttle from 'lodash/throttle';\n\nexport interface WordCloudProps {\n  width: number | string;\n  height: number | string;\n  list: any[];\n  color?: ((name: string) => string) | string;\n  formatter?: (item: any) => string;\n  [key: string]: any;\n}\n\nfunction defaultFormatter(item: any[]) {\n  return `${item[0]} 获取次数 ${item[1]}`;\n}\nexport const WordCloud: FC<WordCloudProps> = ({\n  width,\n  height,\n  list,\n  color,\n  formatter,\n  ...props\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const tooltipRef = useRef<HTMLDivElement>(null);\n  const [tooltip, setTooltip] = useState<{\n    left?: number;\n    top?: number;\n    text: string;\n  }>({\n    text: '',\n  });\n  const [tooltipVisible, setTooltipVisible] = useState(false);\n  const visibleRef = useRef(tooltipVisible);\n  useEffect(() => {\n    visibleRef.current = tooltipVisible;\n  }, [tooltipVisible]);\n  const hover = useMemo(() => {\n    return throttle(function hover(item: any, dimension: any, event: MouseEvent) {\n      if (item === undefined) setTooltipVisible(false);\n      else if (Array.isArray(item)) {\n        let text = (formatter || defaultFormatter)(item);\n        const tootipEl = tooltipRef.current!;\n        if (!tootipEl) return;\n        // 确保tooltip被限制在viewport中\n        tootipEl.innerHTML = text;\n        const { width, height } = tootipEl.getBoundingClientRect();\n        const { clientX, clientY } = event;\n        const { clientWidth, clientHeight } = document.body;\n        let offsetX = Math.min(10, clientWidth - clientX - width - 30);\n        let offsetY = Math.min(20, clientHeight - clientY - height - 30);\n        if (!visibleRef.current) {\n          setTooltip({\n            text,\n          });\n        }\n        setTooltip({\n          left: event.offsetX + offsetX,\n          top: event.offsetY + offsetY,\n          text,\n        });\n        setTooltipVisible(true);\n      }\n    }, 100);\n  }, [formatter]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      wordCloud(canvasRef.current, {\n        gridSize: 12,\n        list: list,\n        fontFamily: FONT_FAMILY,\n        color: color || 'random-dark',\n        backgroundColor: '#f9f9f9',\n        rotateRatio: 0,\n        hover,\n        drawOutOfBound: false,\n        shrinkToFit: false,\n      });\n    });\n    return () => {\n      // wordCloud.stop();\n      clearTimeout(timer);\n    };\n  }, [list, hover, color]);\n  return (\n    <div\n      css={css`\n        position: relative;\n      `}\n      {...props}\n    >\n      <canvas\n        ref={canvasRef}\n        width={width}\n        height={height}\n        css={css`\n          width: 100%;\n        `}\n      ></canvas>\n      <div\n        ref={tooltipRef}\n        css={css`\n          background-color: rgba(0, 0, 0, 0.8);\n          color: #fff;\n          padding: 5px 10px;\n          border-radius: 5px;\n          font-size: 14px;\n          line-height: 1.4;\n          transition: left 0.1s, top 0.1s, z-index 0.2s, opacity 0.2s;\n          position: absolute;\n          white-space: nowrap;\n          z-index: 999;\n        `}\n        style={{\n          left: tooltip.left,\n          top: tooltip.top,\n          zIndex: tooltipVisible ? 999 : -1,\n          opacity: tooltipVisible ? 1 : 0,\n          fontFamily: FONT_FAMILY,\n        }}\n        dangerouslySetInnerHTML={{\n          __html: tooltip.text || '',\n        }}\n      />\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Checkbox } from 'antd';\nimport { WordCloud, WordCloudProps } from 'components/WordCloud';\nimport { FC, useCallback, useMemo, useState } from 'react';\n\nexport interface WordCloudChartProps {\n  list: ListItem[];\n  filters: Filter[];\n  formatter?: (item: ListItem) => string;\n  color?: WordCloudProps['color'];\n}\n\nexport type ListItem = [\n  str: string,\n  size: number,\n  data: {\n    size: number;\n    count: number;\n    star: number;\n  },\n];\n\ntype Filter = {\n  text: string;\n  filter: (item: any) => boolean;\n  isSelected?: boolean;\n};\n\nfunction defaultFormatter(item: ListItem) {\n  const [name, size, { count }] = item;\n  return `${name} 获取次数: ${count}`;\n}\n\nexport const WordCloudChart: FC<WordCloudChartProps> = ({ list, filters, formatter, color }) => {\n  const { initialValue, initialList } = useMemo(() => {\n    return {\n      initialValue: filters.map((filter) => filter.text),\n      initialList: filters\n        .filter((filter) => !('isSelected' in filter) || filter.isSelected)\n        .map((filter) => filter.text),\n    };\n  }, []);\n  const [checkedList, setCheckedList] = useState(initialList);\n  const handleChange = useCallback((list) => {\n    setCheckedList(list);\n  }, []);\n  const filteredList = useMemo(() => {\n    const filterArr: Filter['filter'][] = [];\n    checkedList.forEach((v: string) => {\n      const data = filters.find((item) => item.text === v);\n      if (data) filterArr.push(data.filter);\n    });\n    const filter = (item: any) => filterArr.some((v) => v(item));\n    const filteredList = list.filter(filter);\n    const total = filteredList.reduce((acc, cur) => acc + cur[2].count, 0);\n    filteredList.forEach((item) => {\n      const { count, size } = item[2];\n      item[1] = 250 * size * Math.pow(count / total, 1 / 2);\n    });\n    return filteredList;\n  }, [list, checkedList]);\n  return (\n    <div\n      css={css`\n        position: relative;\n        display: inline-block;\n        width: 100%;\n        max-width: 450px;\n      `}\n    >\n      <Checkbox.Group\n        options={initialValue}\n        value={checkedList}\n        onChange={handleChange}\n        css={css`\n          position: absolute;\n          right: 0px;\n          top: -15px;\n          z-index: 9999;\n          background-color: #f0f0f0;\n          border-bottom-left-radius: 5px;\n          padding: 5px 10px;\n        `}\n      />\n      <WordCloud\n        width='800'\n        height='600'\n        list={filteredList}\n        formatter={formatter || defaultFormatter}\n        color={color}\n        css={css`\n          margin-top: 15px;\n          width: 100%;\n        `}\n      />\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Button, Divider } from 'antd';\nimport { useCacheMemo } from 'context/CacheContext';\nimport { FC, useCallback, useRef } from 'react';\nimport DownloadOutlined from '@ant-design/icons/DownloadOutlined';\nimport { DataItem } from 'types';\nimport { SHOW_DATA_ALL_KEY } from 'const';\nimport { useGlobalContext } from 'context/GlobalContext';\nimport { ListItem, WordCloudChart } from './WordCloudChart';\n// @ts-ignore\nimport randomColor from 'randomcolor';\nimport renderPngTip from 'utils/renderPngTip';\nimport downloadCanvas from 'utils/downloadCanvas';\n\ninterface WordCloudChartsProps {\n  onGetData: (key: string) => DataItem[];\n}\n\nconst WordCloudCharts: FC<WordCloudChartsProps> = ({ onGetData }) => {\n  const wordCloudWrapperRef = useRef<HTMLDivElement>(null);\n  const { isVertical } = useGlobalContext();\n  const wordCloudData = useCacheMemo(\n    () => {\n      const data = onGetData(SHOW_DATA_ALL_KEY);\n      type Info = {\n        count: number;\n        data: DataItem[];\n        name: string;\n        star: number;\n        color: string;\n        isCharacter: boolean;\n      };\n      const countMap: {\n        [key: string]: Info;\n      } = {};\n      data.forEach((item) => {\n        if (item.名称 in countMap) {\n          const info = countMap[item.名称];\n          info.count += 1;\n          info.data.push(item);\n        } else\n          countMap[item.名称] = {\n            count: 1,\n            data: [item],\n            name: item.名称,\n            star: item.星级,\n            color: randomColor({\n              luminosity: 'dark',\n            }),\n            isCharacter: item.类别 === '角色',\n          };\n      });\n      const weapons: Info[] = [],\n        characters: Info[] = [];\n      Object.values(countMap).forEach((v) => {\n        if (v.isCharacter) {\n          characters.push(v);\n        } else {\n          weapons.push(v);\n        }\n      });\n      const sorter = (a: Info, b: Info) => b.star - a.star || b.count - a.count;\n      weapons.sort(sorter);\n      characters.sort(sorter);\n      function getWordCloudList(data: Info[]): ListItem[] {\n        return data.map((item) => {\n          const { name, count, star } = item;\n          return [\n            name,\n            1,\n            {\n              size: 1,\n              count,\n              star,\n            },\n          ];\n        });\n      }\n      return {\n        weaponList: getWordCloudList(weapons),\n        characterList: getWordCloudList(characters),\n        filters: [3, 4, 5].map((star) => ({\n          text: `${star} 星`,\n          filter: (item: ListItem) => item[2].star === star,\n          isSelected: star === 3 ? false : true,\n        })),\n        color(name: string) {\n          if (name in countMap) {\n            const { color } = countMap[name];\n            return color;\n          }\n          return '#fff';\n        },\n      };\n    },\n    [],\n    'wordCloudData',\n  );\n  const handleRenderWordCloudPng = useCallback(() => {\n    renderPngTip((resolve, reject) => {\n      if (!wordCloudWrapperRef.current) return reject();\n      const canvasCollection = wordCloudWrapperRef.current.getElementsByTagName(\n        'canvas',\n      ) as HTMLCollectionOf<HTMLCanvasElement>;\n      const canvas1 = canvasCollection[0];\n      const selfWidth = canvas1.width,\n        selfHeight = canvas1.height;\n      let width, height;\n      if (isVertical) {\n        width = selfWidth;\n        height = 2 * selfHeight;\n      } else {\n        width = 2 * selfWidth;\n        height = selfHeight;\n      }\n      const canvas = document.createElement('canvas');\n      const scale = 1;\n      canvas.width = width * scale;\n      canvas.height = height * scale;\n      const ctx = canvas.getContext('2d')!;\n      const loc = {\n        x: 0,\n        y: 0,\n      };\n      for (let i = 0; i < canvasCollection.length; i++) {\n        const currentCanvas = canvasCollection[i];\n        ctx.drawImage(\n          currentCanvas,\n          0,\n          0,\n          selfWidth,\n          selfHeight,\n          loc.x * scale,\n          loc.y * scale,\n          selfWidth * scale,\n          selfHeight * scale,\n        );\n        if (isVertical) loc.y += selfHeight;\n        else loc.x += selfWidth;\n      }\n      downloadCanvas(canvas, 'wordCloud.png', resolve);\n    });\n  }, [isVertical]);\n  return (\n    <div\n      ref={wordCloudWrapperRef}\n      css={css`\n        text-align: center;\n        margin: 24px 0;\n      `}\n    >\n      <Divider>抽取数目展示图</Divider>\n      <WordCloudChart\n        list={wordCloudData.characterList}\n        filters={wordCloudData.filters.slice(1)}\n        color={wordCloudData.color}\n      />\n      <WordCloudChart\n        list={wordCloudData.weaponList}\n        filters={wordCloudData.filters}\n        color={wordCloudData.color}\n      />\n      <br />\n      <Button\n        type='primary'\n        onClick={handleRenderWordCloudPng}\n        icon={<DownloadOutlined />}\n        size='middle'\n      >\n        生成图片\n      </Button>\n    </div>\n  );\n};\nexport default WordCloudCharts;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Button, Divider } from 'antd';\nimport { useCacheContext } from 'context/CacheContext';\nimport { FC, useCallback, useMemo } from 'react';\nimport DownloadOutlined from '@ant-design/icons/DownloadOutlined';\nimport { DataItem } from 'types';\nimport { PoolAnalysis } from './PoolAnalysis';\nimport { renderToCanvas } from './renderToCanvas';\nimport { ISMOBILE } from 'const';\nimport { useGlobalContext } from 'context/GlobalContext';\nimport { IconButton } from 'components/IconButton';\nimport { FriendLinks } from 'components/FriendLinks';\nimport WordCloudCharts from './WordCloudCharts';\nimport renderPngTip from 'utils/renderPngTip';\nimport downloadCanvas from 'utils/downloadCanvas';\n// @ts-ignore\nimport LazyLoad from 'react-lazyload';\n\ninterface AnalysisChartProps {\n  sheetNames: string[];\n  onGetData: (key: string) => DataItem[];\n}\n\nexport const AnalysisChart: FC<AnalysisChartProps> = ({ sheetNames, onGetData }) => {\n  const { dataArr, validSheetNames } = useMemo(() => {\n    const dataArr: DataItem[][] = [];\n    const validSheetNames: string[] = [];\n    sheetNames.forEach((key) => {\n      const data = onGetData(key);\n      if (data && data.length !== 0) {\n        dataArr.push(data);\n        validSheetNames.push(key);\n      }\n    });\n    return {\n      dataArr,\n      validSheetNames,\n    };\n  }, [sheetNames]);\n  const localCache = useCacheContext();\n  const { isVertical } = useGlobalContext();\n  const handleRenderPng = useCallback(() => {\n    renderPngTip((resolve, reject) => {\n      renderToCanvas(\n        validSheetNames.map((key: string) => localCache[key]),\n        isVertical,\n        (canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) => {\n          downloadCanvas(canvas, 'charts.png', resolve);\n        },\n      );\n    });\n  }, [isVertical]);\n  return (\n    <div>\n      <Divider>\n        <span>\n          此页面参考自 Github 项目：\n          <a target='_blank' href='https://github.com/biuuu/genshin-gacha-export'>\n          genshin-wish-export\n          </a>\n        </span>\n      </Divider>\n      {ISMOBILE ? (\n        <div\n          css={css`\n            position: absolute;\n            right: 12px;\n            z-index: 999;\n          `}\n        >\n          <Button\n            type='primary'\n            onClick={handleRenderPng}\n            icon={<DownloadOutlined />}\n            size='middle'\n            shape='circle'\n          />\n        </div>\n      ) : (\n        <div\n          css={css`\n            position: fixed;\n            right: 64px;\n            z-index: 999;\n          `}\n        >\n          <IconButton\n            icon={<DownloadOutlined />}\n            onClick={handleRenderPng}\n            tip='生成图片'\n            placement='left'\n          />\n        </div>\n      )}\n      <div\n        css={css`\n          text-align: center;\n          margin: 10px 0;\n        `}\n      >\n        {validSheetNames\n          .map((key, index) => {\n            return <PoolAnalysis sheetName={key} data={dataArr[index]} key={key} />;\n          })\n          .filter((v) => !!v)}\n      </div>\n      <div\n        css={css`\n          text-align: center;\n          margin-bottom: 48px;\n        `}\n      >\n        <Button type='primary' onClick={handleRenderPng} icon={<DownloadOutlined />} size='middle'>\n          生成图片\n        </Button>\n      </div>\n      <LazyLoad height={500} scrollContainer={'.ant-layout-content'} once>\n        <WordCloudCharts onGetData={onGetData} />\n      </LazyLoad>\n      <FriendLinks mode='bottom' />\n    </div>\n  );\n};\n"],"sourceRoot":""}