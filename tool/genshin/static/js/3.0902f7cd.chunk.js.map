{"version":3,"sources":["../node_modules/rc-util/es/hooks/useMergedState.js","../node_modules/canvas-datagrid/lib/main.js","../node_modules/canvas-datagrid/lib/defaults.js","../node_modules/canvas-datagrid/lib/component.js","../node_modules/canvas-datagrid/lib/draw.js","../node_modules/canvas-datagrid/lib/events.js","../node_modules/is-printable-key-event/dist/index.js","../node_modules/canvas-datagrid/lib/touch.js","../node_modules/canvas-datagrid/lib/contextMenu.js","../node_modules/canvas-datagrid/lib/dom.js","../node_modules/canvas-datagrid/lib/publicMethods.js","../node_modules/canvas-datagrid/lib/intf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"names":["useControlledState","defaultStateValue","option","_ref","defaultValue","value","onChange","postState","_React$useState","React","undefined","_React$useState2","_slicedToArray","innerValue","setInnerValue","mergedValue","firstRenderRef","current","newValue","webComponent","component","modules","defaults","draw","events","touch","intf","contextMenu","dom","publicMethods","Grid","args","self","isComponent","isChildGrid","parentNode","test","nodeType","eval","document","createElement","applyComponentStyle","hyphenateProperty","dehyphenateProperty","createGrid","forEach","module","shadowRoot","attachShadow","mode","init","canvasDatagrid","i","tKeys","window","customElements","Object","keys","argKey","indexOf","attributes","tKey","sKey","data","appendChild","HTMLElement","prototype","create","observedAttributes","getObservableAttributes","disconnectedCallback","attributeChangedCallback","connectedCallback","adoptedCallback","define","require","EXCLUDE_GLOBAL","styles","typeMap","prop","replace","nextLetterCap","p","Array","call","char","toUpperCase","cust","toLowerCase","supressChangeAndDrawEvents","cStyle","getComputedStyle","tagName","canvas","defs","computedStyle","def","val","getPropertyValue","setStyleProperty","dispatchEvent","requestAnimationFrame","resize","style","strData","JSON","parse","e","Error","schema","strSchema","number","strNum","n","parseInt","isNaN","boolean","strBool","string","str","attrs","attr","push","this","connected","parentDOMNode","innerHTML","observe","attrName","oldVal","newVal","tfn","dataType","base","item","filter","getDefaultItem","addEventListener","Function","name","MutationObserver","mutations","checkInnerHTML","checkStyle","mutation","attributeName","target","nodeName","addedNodes","length","type","characterData","childList","subtree","perfCounters","cachedImagesDrawn","drawCount","perfWindowSize","entityCount","scrollDebugCounters","touchPPSCounters","fillArray","low","high","step","x","drawHtml","cell","img","v","formattedValue","cacheKey","toString","rowIndex","columnIndex","Math","round","canvasOffsetLeft","y","canvasOffsetTop","htmlImageCache","height","width","complete","ctx","drawImage","Image","onload","loaded","html","drawOnAllImagesLoaded","src","btoa","radiusRect","w","h","radius","r","b","beginPath","moveTo","lineTo","quadraticCurveTo","fillRect","strokeRect","fillText","text","clipFrozenArea","lastFrozenColumnPixel","lastFrozenRowPixel","clip","fillHandle","selectionHandleType","arc","PI","fill","fillCircle","strokeHandle","stroke","strokeCircle","addBorderLine","c","pos","t","l","internal","parentGrid","visible","checkScrollHeight","cx","cy","treeGrid","rowOpen","rowHeight","cornerCell","rowData","aCell","viewData","bc","gridBorderCollapse","selectionBorders","moveBorders","selectionHandles","rowHeaders","u","currentCell","columnHeaderCellHeight","getColumnHeaderCellHeight","rowHeaderCellWidth","getRowHeaderCellWidth","cellHeight","performance","now","visibleRowHeights","orders","rows","createRowOrders","save","visibleRows","getSchema","visibleCells","offsetTop","offsetLeft","fillStyle","gridBackgroundColor","ln","min","frozenRow","scrollBox","scrollLeft","scrollPixelLeft","cellBorderWidth","drawRow","allowFreezingRows","frozenMarkerBorderWidth","frozenMarkerWidth","drawFrozenRows","columnOrderIndex","rowOrderIndex","headerIndex","g","snapToRow","scrollTop","scrollPixelTop","scrollIndexTop","scrollIndexBottom","scrollPixelBottom","showNewRow","showRowHeaders","scrollIndexLeft","columns","drawCell","newRow","restore","drawRows","cl","activeCell","frozenColumn","selectionMode","lineWidth","activeCellOverlayBorderWidth","strokeStyle","activeCellOverlayBorderColor","getHeaderWidth","drawActiveCell","d","o","columnHeaderCell","header","nonFrozenHeaderWidth","drawHeaderColumnRange","start","end","hidden","title","cellWidth","index","order","rArgs","rhIndex","filteredRowNumber","getBoundRowIndexFromViewRowIndex","rowHeaderValue","hasActiveFilters","rowHeaderCell","headerDescription","sizes","openChildren","drawRowHeader","showColumnHeaders","columnHeaderCellBorderWidth","scrollBarWidth","isColumnHeaderCell","isColumnHeaderCellCap","endCap","drawHeaders","my","mx","xHover","yHover","allowFreezingColumns","frozenMarkerHoverColor","frozenMarkerColor","frozenMarkerHoverBorderColor","frozenMarkerBorderColor","unshift","freezeMarkerPosition","frozenMarkerActiveColor","frozenMarkerActiveBorderColor","dragMode","drawFrozenMarkers","mobile","allowMovingSelection","selectionHandleBorderWidth","selectionHandleBorderColor","selectionHandleColor","hw","selectionHandleSize","tr","br","tl","bl","addselectionHandle","az","touchSelectHandleZone","ax","ay","reorderObject","dragOffset","m","reorderMarkerBackgroundColor","reorderMarkerBorderWidth","reorderMarkerBorderColor","reorderMarkerIndexBorderWidth","reorderMarkerIndexBorderColor","reorderTarget","sortRowIndex","sortColumnIndex","drawReorderMarkers","movingSelection","moveOverlayBorderWidth","moveOverlayBorderColor","setLineDash","moveOverlayBorderSegments","gridBorderWidth","gridBorderColor","dsb","selectionOverlayBorderWidth","selectionOverlayBorderColor","drawSelectionBorders","drawCorner","en","entities","scrollBarBoxMargin","scrollBarBorderColor","scrollBarBorderWidth","horizontalBox","horizontalBar","scrollBoxWidth","scrollWidth","verticalBox","verticalBar","scrollBoxHeight","scrollHeight","horizontalBarVisible","scrollBarBackgroundColor","scrollBarBoxColor","horizontalBoxVisible","context","scrollBarActiveColor","scrollBarBoxBorderRadius","verticalBarVisible","verticalBoxVisible","scrollBarCornerBorderColor","scrollBarCornerBackgroundColor","corner","drawScrollBars","showPerformance","debug","pop","font","debugFont","perf","reduce","a","toFixed","perfDelta","frozenColumnsWidth","s","getColummnWidth","getFrozenColumnsWidth","htmlImages","scale","startScale","scaleDelta","zoomDeltaStart","touchLength","touches","touchPosition","touchPosition1","scrollIndex","scrollPixel","canvasOffset","touchDelta","touchAnimateTo","scrollAnimation","touchPPS","xPPS","yPPS","touchPPST","xPPST","yPPST","touchDuration","pointerLockPosition","size","mouse","touchStart","hasFocus","dragContext","textAlign","debugBackgroundColor","key","debugColor","drawDebug","px","py","debugPerfChartBackground","debugScrollHeightColor","debugScrollWidthColor","debugPerformanceColor","debugEntitiesColor","debugTouchPPSXColor","debugTouchPPSYColor","dpl","apply","perfArr","arrIndex","max","color","useAbs","abs","drawPerfLine","debugPerfChartTextColor","drawPerfLines","createBorderOverlayArray","drawArray","propPrefix","offsetPoint","selectionBorder","isRowHeader","selections","isHeader","cellGridAttributes","cellStyle","isCorner","isColumnHeader","wrap","cellWhiteSpace","selected","hovered","hovers","active","rawValue","isGrid","activeHeader","f","formatters","orderByArrowSize","treeArrowSize","ev","row","fontHeight","horizontalAlignment","verticalAlignment","paddingLeft","paddingTop","paddingRight","paddingBottom","whiteSpace","lineHeight","cellLineHeight","lineSpacing","cellLineSpacing","offsetWidth","offsetHeight","offsetParent","viewRowIndex","viewColumnIndex","boundRowIndex","boundColumnIndex","isNormal","gridId","calculatedLineHeight","paddedWidth","paddedHeight","userHeight","userWidth","cellHeightWithChildGrid","cellWidthWithChildGrid","tree","mt","treeArrowMarginTop","mr","treeArrowMarginRight","ml","treeArrowMarginLeft","aw","treeArrowWidth","ah","treeArrowHeight","treeArrowColor","treeArrowBorderColor","drawTreeArrow","showRowNumbers","childGrids","saveAppearance","cellGridHeight","grid","orderBy","columnHeaderOrderByArrowMarginTop","columnHeaderOrderByArrowMarginLeft","columnHeaderOrderByArrowMarginRight","columnHeaderOrderByArrowWidth","columnHeaderOrderByArrowHeight","columnHeaderOrderByArrowColor","columnHeaderOrderByArrowBorderColor","orderDirection","drawOrderByArrow","orderByArrowWidth","console","warn","columnFilters","filterTextPrefix","splitChar","lines","word","elWidth","plWidth","clippedVal","previousLine","words","split","textHeight","autoResize","autoResizeRows","et","ellipsisText","line","cHeight","measureText","measure","splice","originText","stepLength","direction","substr","wrapText","vPos","hPos","stringify","pw","idx","idx_ord","map","drawText","selectionBorderTop","selectionBorderRight","selectionHandle","selectionBorderLeft","selectionBorderBottom","selectionHandleBehavior","createHandlesOverlayArray","moveOffset","treeHeight","rowSansTreeHeight","trees","scrollIndexRight","scrollPixelRight","wheeling","stopPropagation","fn","removeEventListener","sfn","defaultPrevented","preventDefault","getRatio","maxPixelRatio","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","drawAfterResize","dims","vb","nb","co","isScrollBoxCorner","sbw","ratio","bm","cellBorder","columnHeaderCellBorder","dataHeight","dataWidth","ch","scrollCache","accumulator","column","va","setCanvasSize","top","left","setScrollBoxSize","checkScrollBoxVisibility","widthBoxRatio","heightBoxRatio","scrollBarBoxMinSize","scrollBarBoxWidth","bar","box","page","pageUpDownOverlap","resizeEditInput","scroll","overflowX","overflowY","dim","appliedInlineStyles","parentNodeStyle","dontDraw","floor","ellipsisCache","mousemove","overridePos","input","getLayerPos","dragBounds","sBounds","delta","ctrl","ctrlKey","metaKey","persistantSelectionMode","singleSelectionMode","getCellAt","NativeEvent","previousCell","clearTimeout","scrollTimer","isInGrid","rowBoundaryCrossed","columnBoundaryCrossed","cellBoundaryCrossed","prefix","draggingItem","scrollModes","dragItem","cursor","selecting","dragStart","dragStartObject","shiftKey","bottom","right","getSelectionBounds","ignoreNextClick","dragAddToSelection","selectRow","selectionBounds","selectArea","autoScrollZone","click","startingBounds","endEdit","setActiveCell","selectAll","checkSelectionChange","columnHeaderClickBehavior","selectColumn","treeArrowClickRadius","toggleTree","sb","defineProperty","get","getSelectedData","dragResizeColumn","resizingStartingWidth","resizingStartingHeight","minColumnWidth","minRowHeight","resizeScrollZone","resizeChildGrids","globalRowResize","stopDragResize","body","setStorageData","scrollGrid","scrollPointerLock","scrollStartMode","movementX","movementY","scrollMode","scrollStart","setTimeout","scrollRepeatRate","selectionScrollIncrement","stopScrollGrid","exitPointerLock","dragReorder","columReorder","rowReorder","allowColumnReordering","allowRowReordering","source","reorderDeadZone","stopDragReorder","oIndex","tIndex","cr","dragMove","stopDragMove","moveSelection","freezeMove","stopFreezeMove","startFreezeMove","mousedown","lastMouseDownTarget","button","move","freeze","requestPointerLock","concat","dragging","mouseup","controlInput","focus","getAdjacentCells","first","last","keydown","adjacentCells","cols","isPrintableKeyEvent","beginEditAt","selectNone","Number","isArrowKey","includes","scrollIntoView","selectionFollowsActiveCell","selectedData","keyup","keypress","dblclick","fitColumnToValues","autosize","scrollWheel","deltaX","deltaY","deltaMode","touchHaltAnimation","scrollTo","pasteData","pasteValue","mimeType","startRowIndex","startColIndex","getVisibleSchema","substring","match","parseData","cellData","forEachSelectedCell","colName","realRowIndex","cells","existingRowData","newRowData","assign","colIndex","columnName","originalData","affectedCells","refresh","getNextVisibleColumnIndex","visibleColumnIndex","getVisibleColumnIndexOf","paste","event","editable","clipboardItems","Map","from","clipboardData","items","supportedMimeTypes","pasteableItems","itemToPaste","pasteType","getAsString","join","cut","copy","outputHeaderKeys","tableRows","textRows","outputHeaders","sData","rowKeys","trRow","textRow","sSorted","fCopyCell","addCellValue","addHeaders","setData","htmlSafe","headers","useHtml","hVal","exports","enumerable","Symbol","toStringTag","__esModule","bind","default","hasOwnProperty","modifier","legacyModifier","navigation","editing","ui","device","imeCompositionKeys","koreanSpecific","japaneseSpecific","commonFunction","multimedia","multimediaNumpad","audio","speech","application","browser","mobilePhone","tv","mediaControls","touchMoving","touchScrollTimeout","animationFrames","getTouchPos","touchIndex","rect","getBoundingClientRect","clientX","clientY","easingFunctions","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easing","touchEasingMethod","calculatePPSTimed","touchSigmaTimed","calculatePPS","touchSigma","touchEndAnimation","touchReleaseAnimationDurationMs","stopAnimation","touchEditCell","touchCell","clearInterval","calculatePPSTimer","touchDeadZone","touchingCell","editCell","touchstart","changedTouches","startingCell","disposeContextMenu","touchContextTimeout","touchStartEvent","zoomAltered","touchStart1","touchScrollStart","contextmenuEvent","touchContextMenuTimeMs","setInterval","touchEndEvents","touchmove","passive","touchend","touchcancel","touchSelect","handleType","touchSelecting","bounds","rw","rScrollZone","lScrollZone","bScrollZone","tScrollZone","t1","t2","touchZoomSensitivity","touchZoomMin","touchZoomMax","selectionScrollZone","touchScroll","touchMove","dz","touchReleaseAcceleration","scrollAnimationPPSThreshold","zIndexTop","hoverScrollTimeout","autoCompleteContext","applyContextItemStyle","contextItemContainer","createInlineStyle","createContextMenu","parentContextMenu","container","upArrow","downArrow","children","selectedIndex","isArray","checkArrowVisibility","removeChild","startHoverScroll","contextHoverScrollAmount","contextHoverScrollRateMs","endHoverScroll","loc","scrollOffset","contextMenuZIndex","childMenuArrow","removeChildContext","relatedTarget","contains","dispose","setAttribute","contextAddCallback","getAttribute","cPos","childContextMenuMarginLeft","childContextMenuMarginTop","createChildContext","addContent","content","childContextMenuArrowHTML","addItem","position","contextMenuArrowColor","el","zIndex","inputDropdown","maxHeight","innerHeight","autocompleteBottomMargin","minWidth","contextMenuArrowUpHTML","contextMenuArrowDownHTML","contextMenuWindowMargin","innerWidth","clickIndex","Event","set","isFinite","createFilterContextMenuItems","iRect","filterContainer","filterLabel","filterAutoCompleteButton","filterInput","checkRegExpErrorState","background","contextFilterInputBackground","contextFilterInputColor","invalidFilterRegEx","contextFilterInvalidRegExpBackground","contextFilterInvalidRegExpColor","createAutoCompleteContext","autoCompleteItems","count","blanksItem","cellValue","String","trim","blankValues","blanksText","maxAutoCompleteItems","disposeAutocomplete","fillAutoComplete","onclick","setFilter","filterOptionText","contextFilterButtonHTML","cf","getHeaderByName","removeFilterOptionText","contextPosition","isNormalCell","isBackground","isScrollBar","showFilter","showCopy","copyText","execCommand","showPaste","clipBoardData","pasteText","showColumnSelector","columnSelectorText","toggleColumnVisibility","columnSelectorHiddenText","columnSelectorVisibleText","hideColumnText","showClearSettingsOption","clearSettingsOptionText","createColumnOrders","storedSettings","columnWidth","allowSorting","showOrderByOption","showOrderByOptionTextAsc","showOrderByOptionTextDesc","addDefaultContextMenuItem","contextMenuMarginLeft","contextMenuMarginTop","mobileContextMenuMargin","createDiposeEvent","getClippingRect","ele","boundingRect","eleRect","clipRect","parentRect","Infinity","clipElement","scrollingElement","borderWidth","getVisibleCellByIndex","mobileEditInputHeight","cellPaddingLeft","ignoreScrollOffset","abort","oldValue","changes","aborted","addRow","createNewRowData","inEnterMode","enumItems","enu","valueInEnum","multiLine","editCellZIndex","fontSize","editCellFontSize","cellValueIsEmpty","shouldClearCellValue","nx","ny","altKey","nextRowIndex","className","css","verticalAlign","marginLeft","padding","border","contextFilterInputBorder","borderRadius","contextFilterInputBorderRadius","fontWeight","fontFamily","contextFilterInputFontFamily","contextFilterInputFontSize","contextMenuBackground","contextMenuColor","contextFilterButtonBorder","contextFilterButtonBorderRadius","contextMenuFilterButtonFontFamily","contextMenuFilterButtonFontSize","cssFloat","childContextMenuArrowColor","contextMenuChildArrowFontSize","contextMenuFontFamily","contextMenuFontSize","contextMenuBorder","contextMenuPadding","contextMenuBorderRadius","opacity","contextMenuOpacity","overflow","contextMenuHoverBackground","contextMenuHoverColor","display","boxSizing","outline","margin","mobileEditFontFamily","mobileEditFontSize","editCellBorder","editCellColor","editCellBackgroundColor","appearance","webkitAppearance","mozAppearance","editCellPaddingLeft","editCellFontFamily","boxShadow","editCellBoxShadow","contextMenuItemMargin","contextMenuItemBorderRadius","contextMenuLabelMargin","contextMenuLabelDisplay","contextMenuLabelMinWidth","maxWidth","contextMenuLabelMaxWidth","contextMenuCursor","contextMenuFilterInvalidExpresion","appendTo","setDom","eventParent","onblur","blur","parentIsCanvas","getContext","textBaseline","integerToAlpha","ordA","charCodeAt","len","fromCharCode","insertColumn","validateColumn","applyDefaultValue","deleteColumn","addColumn","deleteRow","insertRow","setRowHeight","setColumnWidth","resetColumnWidths","resetRowHeights","findRowScrollTop","RangeError","findColumnScrollLeft","gotoCell","offsetX","offsetY","targetX","targetY","sbh","gotoRow","isColumnSelected","colIsSelected","expandToRow","col","shift","supressEvent","addCol","st","de","ri","dragObject","collapseTree","childGrid","expandTree","trArgs","treeGridAttributes","treeGridHeight","findColumnMaxTextLength","isCellVisible","sortFunction","dontSetStorageData","sorter","sorters","orderings","add","sel","xi","visibleSchema","selectionLength","maxRowLength","minXi","yi","lastSourceIndex","cidx","isColumnVisible","isRowVisible","useTouchScrollZones","getBorder","entitiy","borderResizeZone","moveBorder","tsz","touchScrollZone","moveMode","borderDragBehavior","xBorderBehavior","cursorGrab","yBorderBehavior","isVerticalScrollBar","isHorizontalScrollBar","allowColumnResize","allowColumnResizeFromCell","allowRowHeaderResize","allowRowResize","allowRowResizeFromCell","rowGrabZoneSize","maxCol","minCol","getSchemaFromData","getBestGuessDataType","visibility","clearChangeLog","rowHeaderCellFont","autosizePadding","autosizeHeaderCellPadding","rowHeaderCellPaddingRight","rowHeaderCellPaddingLeft","formatter","columnHeaderCellFont","headerCellPaddingRight","headerCellPaddingLeft","cellFont","cellPaddingRight","cellAutoResizePadding","total","getRowHeight","headerCell","int","asc","localeCompare","date","Date","getTime","ctor","storageName","invalidSearchExpClass","localStyleLibraryStorageKey","sort","filters","currentFilter","parsers","schemaHashes","componentL1Events","eventNames","viewDataLength","orderedIndex","boundRowIndexMap","has","localStorage","setItem","tempSchema","getSchemaNameHash","getFilteredAndSortedViewData","newViewData","originalRowIndex","headerName","filterText","currentFilterFunction","entries","allowArrayLike","it","iterator","unsupportedIterableToArray","F","done","_e","TypeError","err","normalCompletion","didErr","next","_e2","sortFn","rowA","rowB","drawChildGrids","gridKey","setTimer","setDefaults","obj1","obj2","setAttributes","setStyle","contextmenu","observer","disconnect","tryLoadStoredSettings","reloadStoredValues","getDomRoot","host","getFontName","fontStyle","getFontHeight","parseFloat","parseStyleValue","initProp","propName","getStyleProperty","styleKeys","supressDrawAndEvent","isDim","getItem","message","initialized","publicStyleKeyIntf","initScrollBox","ie","navigator","userAgent","edge","webKit","moz","cursorGrabing","cursorGrabbing","assertPxColor","clearPxColorAssertions","addStyleKeyIfNoneExists","DOMStyles","valueObject","filterFor","filterRegExp","pattern","exec","flags","flagLength","RegExp","toLocaleUpperCase","innerText","textContent","currentCursor","find","eventName","getTypes","parseInnerHtml","callback","etl","autoGenerateSchema","autoResizeColumns","sHeight","sWidth","setScrollTop","preventScrollEvent","setScrollLeft","supressDrawEvent"],"mappings":"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","file":"static/js/3.0902f7cd.chunk.js","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nexport default function useControlledState(defaultStateValue, option) {\n  var _ref = option || {},\n      defaultValue = _ref.defaultValue,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      postState = _ref.postState;\n\n  var _React$useState = React.useState(function () {\n    if (value !== undefined) {\n      return value;\n    }\n\n    if (defaultValue !== undefined) {\n      return typeof defaultValue === 'function' ? defaultValue() : defaultValue;\n    }\n\n    return typeof defaultStateValue === 'function' ? defaultStateValue() : defaultStateValue;\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      innerValue = _React$useState2[0],\n      setInnerValue = _React$useState2[1];\n\n  var mergedValue = value !== undefined ? value : innerValue;\n\n  if (postState) {\n    mergedValue = postState(mergedValue);\n  }\n\n  function triggerChange(newValue) {\n    setInnerValue(newValue);\n\n    if (mergedValue !== newValue && onChange) {\n      onChange(newValue, mergedValue);\n    }\n  } // Effect of reset value to `undefined`\n\n\n  var firstRenderRef = React.useRef(true);\n  React.useEffect(function () {\n    if (firstRenderRef.current) {\n      firstRenderRef.current = false;\n      return;\n    }\n\n    if (value === undefined) {\n      setInnerValue(value);\n    }\n  }, [value]);\n  return [mergedValue, triggerChange];\n}","/*jslint browser: true, unparam: true, todo: true, evil: true*/\n/*globals Reflect: false, HTMLElement: true, define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nimport component from './component';\nimport defaults from './defaults';\nimport draw from './draw';\nimport events from './events';\nimport touch from './touch';\nimport intf from './intf';\nimport contextMenu from './contextMenu';\nimport dom from './dom';\nimport publicMethods from './publicMethods';\n\nvar webComponent = component();\n\nvar modules = [\n  defaults,\n  draw,\n  events,\n  touch,\n  intf,\n  contextMenu,\n  dom,\n  publicMethods,\n];\n\nfunction Grid(args) {\n  args = args || {};\n  var self = {};\n  self.isComponent = args.component === undefined;\n  self.isChildGrid =\n    args.parentNode &&\n    /canvas-datagrid-(cell|tree)/.test(args.parentNode.nodeType);\n  if (self.isChildGrid) {\n    self.intf = {};\n  } else {\n    self.intf = self.isComponent\n      ? eval('Reflect.construct(HTMLElement, [], new.target)')\n      : document.createElement('canvas');\n  }\n  self.args = args;\n  self.intf.args = args;\n  self.applyComponentStyle = webComponent.applyComponentStyle;\n  self.hyphenateProperty = webComponent.hyphenateProperty;\n  self.dehyphenateProperty = webComponent.dehyphenateProperty;\n  self.createGrid = function grid(args) {\n    args.component = false;\n    return new Grid(args);\n  };\n\n  modules.forEach(function (module) {\n    module(self);\n  });\n\n  if (self.isChildGrid) {\n    self.shadowRoot = args.parentNode.shadowRoot;\n    self.parentNode = args.parentNode;\n  } else {\n    self.shadowRoot = self.intf.attachShadow({ mode: 'open' });\n    self.parentNode = self.shadowRoot;\n  }\n  self.init();\n  self.intf.self = self;\n  return self.intf;\n}\nif (window.HTMLElement) {\n  Grid.prototype = Object.create(window.HTMLElement.prototype);\n}\n// export web component\nif (window.customElements) {\n  Grid.observedAttributes = webComponent.getObservableAttributes();\n  Grid.prototype.disconnectedCallback = webComponent.disconnectedCallback;\n  Grid.prototype.attributeChangedCallback =\n    webComponent.attributeChangedCallback;\n  Grid.prototype.connectedCallback = webComponent.connectedCallback;\n  Grid.prototype.adoptedCallback = webComponent.adoptedCallback;\n  window.customElements.define('canvas-datagrid', Grid);\n}\n\n// export global\nif (\n  window &&\n  !window.canvasDatagrid &&\n  !window.require &&\n  // Present to exclude global declarations from ES Module bundles\n  !window.EXCLUDE_GLOBAL\n) {\n  window.canvasDatagrid = function (args) {\n    return new Grid(args);\n  };\n}\n\n// export amd loader\nexport default function canvasDatagrid(args) {\n  args = args || {};\n  var i,\n    tKeys = [\n      'style',\n      'formatters',\n      'sorters',\n      'filters',\n      'treeGridAttributes',\n      'cellGridAttributes',\n      'data',\n      'schema',\n    ];\n  if (window.customElements) {\n    i = document.createElement('canvas-datagrid');\n    Object.keys(args).forEach(function (argKey) {\n      // set data and parentNode after everything else\n      if (argKey === 'data') {\n        return;\n      }\n      if (argKey === 'parentNode') {\n        return;\n      }\n      // top level keys in args\n      if (tKeys.indexOf(argKey) !== -1) {\n        tKeys.forEach(function (tKey) {\n          if (args[tKey] === undefined || tKey !== argKey) {\n            return;\n          }\n          if (['formatters', 'sorters', 'filters'].indexOf(argKey) !== -1) {\n            if (typeof args[tKey] === 'object' && args[tKey] !== null) {\n              Object.keys(args[tKey]).forEach(function (sKey) {\n                i[tKey][sKey] = args[tKey][sKey];\n              });\n            }\n          } else {\n            i[tKey] = args[tKey];\n          }\n        });\n        return;\n      }\n      // all others are attribute level keys\n      i.attributes[argKey] = args[argKey];\n    });\n    if (args.data) {\n      i.data = args.data;\n    }\n    // add to the dom very last to avoid redraws\n    if (args.parentNode) {\n      args.parentNode.appendChild(i);\n    }\n    return i;\n  }\n  args.component = false;\n  i = new Grid(args);\n  if (args.parentNode && args.parentNode.appendChild) {\n    args.parentNode.appendChild(i);\n  }\n  return i;\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n\n'use strict';\nexport default function (self) {\n  self.defaults = {\n    attributes: [\n      ['allowColumnReordering', true],\n      ['allowColumnResize', true],\n      ['allowColumnResizeFromCell', false],\n      ['allowFreezingRows', false],\n      ['allowFreezingColumns', false],\n      ['allowMovingSelection', true],\n      ['allowRowHeaderResize', true],\n      ['allowRowReordering', false],\n      ['allowRowResize', true],\n      ['allowRowResizeFromCell', false],\n      ['allowSorting', true],\n      ['autoGenerateSchema', false],\n      ['autoResizeColumns', false],\n      ['autoResizeRows', false],\n      ['blanksText', '(Blanks)'],\n      ['borderDragBehavior', 'none'],\n      ['borderResizeZone', 10],\n      ['clearSettingsOptionText', 'Clear saved settings'],\n      ['columnHeaderClickBehavior', 'sort'],\n      ['columnSelectorHiddenText', '&nbsp;&nbsp;&nbsp;'],\n      ['columnSelectorText', 'Add/Remove columns'],\n      ['columnSelectorVisibleText', '\\u2713'],\n      ['contextHoverScrollAmount', 2],\n      ['contextHoverScrollRateMs', 5],\n      ['copyHeadersOnSelectAll', true],\n      ['copyText', 'Copy'],\n      ['debug', false],\n      ['editable', true],\n      ['ellipsisText', '...'],\n      ['filterOptionText', 'Filter %s'],\n      ['filterTextPrefix', '(filtered) '],\n      ['globalRowResize', false],\n      ['hideColumnText', 'Hide %s'],\n      ['maxAutoCompleteItems', 200],\n      ['multiLine', false],\n      ['name', ''],\n      ['pageUpDownOverlap', 1],\n      ['pasteText', 'Paste'],\n      ['persistantSelectionMode', false],\n      ['removeFilterOptionText', 'Remove filter on %s'],\n      ['reorderDeadZone', 3],\n      ['resizeScrollZone', 20],\n      ['rowGrabZoneSize', 5],\n      ['saveAppearance', true],\n      ['scrollAnimationPPSThreshold', 0.75],\n      ['scrollPointerLock', false],\n      ['scrollRepeatRate', 75],\n      ['selectionFollowsActiveCell', false],\n      ['selectionHandleBehavior', 'none'],\n      ['selectionMode', 'cell'],\n      ['selectionScrollIncrement', 20],\n      ['selectionScrollZone', 20],\n      ['showClearSettingsOption', true],\n      ['showColumnHeaders', true],\n      ['showColumnSelector', true],\n      ['showCopy', false],\n      ['showFilter', true],\n      ['showNewRow', false],\n      ['showOrderByOption', true],\n      ['showOrderByOptionTextAsc', 'Order by %s ascending'],\n      ['showOrderByOptionTextDesc', 'Order by %s descending'],\n      ['showPaste', false],\n      ['showPerformance', false],\n      ['showRowHeaders', true],\n      ['showRowNumbers', true],\n      ['singleSelectionMode', false],\n      ['snapToRow', false],\n      ['touchContextMenuTimeMs', 800],\n      ['touchDeadZone', 3],\n      ['touchEasingMethod', 'easeOutQuad'],\n      ['touchReleaseAcceleration', 1000],\n      ['touchReleaseAnimationDurationMs', 2000],\n      ['touchScrollZone', 20],\n      ['touchSelectHandleZone', 20],\n      ['touchZoomSensitivity', 0.005],\n      ['touchZoomMin', 0.5],\n      ['touchZoomMax', 1.75],\n      ['maxPixelRatio', 2],\n      ['tree', false],\n      ['treeHorizontalScroll', false],\n    ],\n    styles: [\n      ['activeCellBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['activeCellBorderColor', 'rgba(110, 168, 255, 1)'],\n      ['activeCellBorderWidth', 1],\n      ['activeCellColor', 'rgba(0, 0, 0, 1)'],\n      ['activeCellFont', '16px sans-serif'],\n      ['activeCellHoverBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['activeCellHorizontalAlignment', 'left'],\n      ['activeCellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['activeCellOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['activeCellOverlayBorderWidth', 1],\n      ['activeCellPaddingBottom', 5],\n      ['activeCellPaddingLeft', 5],\n      ['activeCellPaddingRight', 5],\n      ['activeCellPaddingTop', 5],\n      ['activeCellSelectedBackgroundColor', 'rgba(236, 243, 255, 1)'],\n      ['activeCellSelectedColor', 'rgba(0, 0, 0, 1)'],\n      ['activeCellVerticalAlignment', 'center'],\n      ['activeColumnHeaderCellBackgroundColor', 'rgba(225, 225, 225, 1)'],\n      ['activeColumnHeaderCellColor', 'rgba(0, 0, 0, 1)'],\n      ['activeRowHeaderCellBackgroundColor', 'rgba(225, 225, 225, 1)'],\n      ['activeRowHeaderCellColor', 'rgba(0, 0, 0, 1)'],\n      ['autocompleteBottomMargin', 60],\n      ['autosizeHeaderCellPadding', 8],\n      ['autosizePadding', 5],\n      ['cellAutoResizePadding', 13],\n      ['cellBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['cellBorderColor', 'rgba(195, 199, 202, 1)'],\n      ['cellBorderWidth', 1],\n      ['cellColor', 'rgba(0, 0, 0, 1)'],\n      ['cellFont', '16px sans-serif'],\n      ['cellGridHeight', 250],\n      ['cellHeight', 24],\n      ['cellHeightWithChildGrid', 150],\n      ['cellHorizontalAlignment', 'left'],\n      ['cellHoverBackgroundColor', 'rgba(255, 255, 255, 1)'],\n      ['cellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['cellPaddingBottom', 5],\n      ['cellPaddingLeft', 5],\n      ['cellPaddingRight', 5],\n      ['cellPaddingTop', 5],\n      ['cellSelectedBackgroundColor', 'rgba(236, 243, 255, 1)'],\n      ['cellSelectedColor', 'rgba(0, 0, 0, 1)'],\n      ['cellVerticalAlignment', 'center'],\n      ['cellWidth', 250],\n      ['cellWidthWithChildGrid', 250],\n      ['cellWhiteSpace', 'nowrap'],\n      ['cellLineHeight', 1],\n      ['cellLineSpacing', 3],\n      ['childContextMenuArrowColor', 'rgba(43, 48, 43, 1)'],\n      ['childContextMenuArrowHTML', '&#x25BA;'],\n      ['childContextMenuMarginLeft', -11],\n      ['childContextMenuMarginTop', -6],\n      ['columnHeaderCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['columnHeaderCellBorderColor', 'rgba(172, 172, 172, 1)'],\n      ['columnHeaderCellBorderWidth', 1],\n      ['columnHeaderCellCapBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['columnHeaderCellCapBorderColor', 'rgba(172, 172, 172, 1)'],\n      ['columnHeaderCellCapBorderWidth', 1],\n      ['columnHeaderCellColor', 'rgba(50, 50, 50, 1)'],\n      ['columnHeaderCellFont', '16px sans-serif'],\n      ['columnHeaderCellHeight', 25],\n      ['columnHeaderCellHorizontalAlignment', 'left'],\n      ['columnHeaderCellHoverBackgroundColor', 'rgba(235, 235, 235, 1)'],\n      ['columnHeaderCellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['columnHeaderCellPaddingBottom', 5],\n      ['columnHeaderCellPaddingLeft', 5],\n      ['columnHeaderCellPaddingRight', 5],\n      ['columnHeaderCellPaddingTop', 5],\n      ['columnHeaderCellVerticalAlignment', 'center'],\n      ['columnHeaderOrderByArrowBorderColor', 'rgba(195, 199, 202, 1)'],\n      ['columnHeaderOrderByArrowBorderWidth', 1],\n      ['columnHeaderOrderByArrowColor', 'rgba(155, 155, 155, 1)'],\n      ['columnHeaderOrderByArrowHeight', 8],\n      ['columnHeaderOrderByArrowMarginLeft', 0],\n      ['columnHeaderOrderByArrowMarginRight', 5],\n      ['columnHeaderOrderByArrowMarginTop', 6],\n      ['columnHeaderOrderByArrowWidth', 13],\n      ['contextFilterButtonBorder', 'solid 1px rgba(158, 163, 169, 1)'],\n      ['contextFilterButtonBorderRadius', '3px'],\n      ['contextFilterButtonHTML', '&#x25BC;'],\n      ['contextFilterInputBackground', 'rgba(255,255,255,1)'],\n      ['contextFilterInputBorder', 'solid 1px rgba(158, 163, 169, 1)'],\n      ['contextFilterInputBorderRadius', '0'],\n      ['contextFilterInputColor', 'rgba(0,0,0,1)'],\n      ['contextFilterInputFontFamily', 'sans-serif'],\n      ['contextFilterInputFontSize', '14px'],\n      ['contextFilterInvalidRegExpBackground', 'rgba(180, 6, 1, 1)'],\n      ['contextFilterInvalidRegExpColor', 'rgba(255, 255, 255, 1)'],\n      ['contextMenuArrowColor', 'rgba(43, 48, 43, 1)'],\n      ['contextMenuArrowDownHTML', '&#x25BC;'],\n      ['contextMenuArrowUpHTML', '&#x25B2;'],\n      ['contextMenuBackground', 'rgba(240, 240, 240, 1)'],\n      ['contextMenuBorder', 'solid 1px rgba(158, 163, 169, 1)'],\n      ['contextMenuBorderRadius', '3px'],\n      ['contextMenuChildArrowFontSize', '12px'],\n      ['contextMenuColor', 'rgba(43, 48, 43, 1)'],\n      ['contextMenuCursor', 'default'],\n      ['contextMenuFilterButtonFontFamily', 'sans-serif'],\n      ['contextMenuFilterButtonFontSize', '10px'],\n      ['contextMenuFilterInvalidExpresion', 'rgba(237, 155, 156, 1)'],\n      ['contextMenuFontFamily', 'sans-serif'],\n      ['contextMenuFontSize', '16px'],\n      ['contextMenuHoverBackground', 'rgba(182, 205, 250, 1)'],\n      ['contextMenuHoverColor', 'rgba(43, 48, 153, 1)'],\n      ['contextMenuItemBorderRadius', '3px'],\n      ['contextMenuItemMargin', '2px'],\n      ['contextMenuLabelDisplay', 'inline-block'],\n      ['contextMenuLabelMargin', '0 3px 0 0'],\n      ['contextMenuLabelMaxWidth', '700px'],\n      ['contextMenuLabelMinWidth', '75px'],\n      ['contextMenuMarginLeft', 3],\n      ['contextMenuMarginTop', -3],\n      ['contextMenuOpacity', '0.98'],\n      ['contextMenuPadding', '2px'],\n      ['contextMenuWindowMargin', 30],\n      ['contextMenuZIndex', 10000],\n      ['cornerCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['cornerCellBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['debugBackgroundColor', 'rgba(0, 0, 0, .0)'],\n      ['debugColor', 'rgba(255, 15, 24, 1)'],\n      ['debugEntitiesColor', 'rgba(76, 231, 239, 1.00)'],\n      ['debugFont', '11px sans-serif'],\n      ['debugPerfChartBackground', 'rgba(29, 25, 26, 1.00)'],\n      ['debugPerfChartTextColor', 'rgba(255, 255, 255, 0.8)'],\n      ['debugPerformanceColor', 'rgba(252, 255, 37, 1.00)'],\n      ['debugScrollHeightColor', 'rgba(248, 33, 103, 1.00)'],\n      ['debugScrollWidthColor', 'rgba(66, 255, 27, 1.00)'],\n      ['debugTouchPPSXColor', 'rgba(246, 102, 24, 1.00)'],\n      ['debugTouchPPSYColor', 'rgba(186, 0, 255, 1.00)'],\n      ['display', 'inline-block'],\n      ['editCellBackgroundColor', 'white'],\n      ['editCellBorder', 'solid 1px rgba(110, 168, 255, 1)'],\n      ['editCellBoxShadow', '0 2px 5px rgba(0,0,0,0.4)'],\n      ['editCellColor', 'black'],\n      ['editCellFontFamily', 'sans-serif'],\n      ['editCellFontSize', '16px'],\n      ['editCellPaddingLeft', 4],\n      ['editCellZIndex', 10000],\n      ['frozenMarkerHoverColor', 'rgba(236, 243, 255, 1)'],\n      ['frozenMarkerHoverBorderColor', 'rgba(110, 168, 255, 1)'],\n      ['frozenMarkerActiveColor', 'rgba(236, 243, 255, 1)'],\n      ['frozenMarkerActiveBorderColor', 'rgba(110, 168, 255, 1)'],\n      ['frozenMarkerColor', 'rgba(222, 222, 222, 1)'],\n      ['frozenMarkerBorderColor', 'rgba(168, 168, 168, 1)'],\n      ['frozenMarkerBorderWidth', 1],\n      ['frozenMarkerWidth', 2],\n      ['gridBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['gridBorderCollapse', 'collapse'],\n      ['gridBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['gridBorderWidth', 1],\n      ['height', 'auto'],\n      ['maxHeight', 'inherit'],\n      ['maxWidth', 'inherit'],\n      ['minColumnWidth', 45],\n      ['minHeight', 'inherit'],\n      ['minRowHeight', 24],\n      ['minWidth', 'inherit'],\n      ['mobileContextMenuMargin', 10],\n      ['mobileEditInputHeight', 30],\n      ['mobileEditFontFamily', 'sans-serif'],\n      ['mobileEditFontSize', '16px'],\n      ['moveOverlayBorderWidth', 1],\n      ['moveOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['moveOverlayBorderSegments', '12, 7'],\n      ['name', 'default'],\n      ['overflowY', 'auto'],\n      ['overflowX', 'auto'],\n      ['reorderMarkerBackgroundColor', 'rgba(0, 0, 0, 0.1)'],\n      ['reorderMarkerBorderColor', 'rgba(0, 0, 0, 0.2)'],\n      ['reorderMarkerBorderWidth', 1.25],\n      ['reorderMarkerIndexBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['reorderMarkerIndexBorderWidth', 2.75],\n      ['rowHeaderCellBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['rowHeaderCellBorderColor', 'rgba(200, 200, 200, 1)'],\n      ['rowHeaderCellBorderWidth', 1],\n      ['rowHeaderCellColor', 'rgba(50, 50, 50, 1)'],\n      ['rowHeaderCellFont', '16px sans-serif'],\n      ['rowHeaderCellHeight', 25],\n      ['rowHeaderCellHorizontalAlignment', 'left'],\n      ['rowHeaderCellHoverBackgroundColor', 'rgba(235, 235, 235, 1)'],\n      ['rowHeaderCellHoverColor', 'rgba(0, 0, 0, 1)'],\n      ['rowHeaderCellPaddingBottom', 5],\n      ['rowHeaderCellPaddingLeft', 5],\n      ['rowHeaderCellPaddingRight', 5],\n      ['rowHeaderCellPaddingTop', 5],\n      ['rowHeaderCellSelectedBackgroundColor', 'rgba(217, 217, 217, 1)'],\n      ['rowHeaderCellSelectedColor', 'rgba(50, 50, 50, 1)'],\n      ['rowHeaderCellVerticalAlignment', 'center'],\n      ['rowHeaderCellWidth', 57],\n      ['scrollBarActiveColor', 'rgba(125, 125, 125, 1)'],\n      ['scrollBarBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['scrollBarBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['scrollBarBorderWidth', 0.5],\n      ['scrollBarBoxBorderRadius', 4.125],\n      ['scrollBarBoxColor', 'rgba(192, 192, 192, 1)'],\n      ['scrollBarBoxMargin', 2],\n      ['scrollBarBoxMinSize', 15],\n      ['scrollBarBoxWidth', 8],\n      ['scrollBarCornerBackgroundColor', 'rgba(240, 240, 240, 1)'],\n      ['scrollBarCornerBorderColor', 'rgba(202, 202, 202, 1)'],\n      ['scrollBarWidth', 11],\n      ['selectionHandleBorderColor', 'rgba(255, 255, 255, 1)'],\n      ['selectionHandleBorderWidth', 1.5],\n      ['selectionHandleColor', 'rgba(66, 133, 244, 1)'],\n      ['selectionHandleSize', 8],\n      ['selectionHandleType', 'square'],\n      ['selectionOverlayBorderColor', 'rgba(66, 133, 244, 1)'],\n      ['selectionOverlayBorderWidth', 1],\n      ['treeArrowBorderColor', 'rgba(195, 199, 202, 1)'],\n      ['treeArrowBorderWidth', 1],\n      ['treeArrowClickRadius', 5],\n      ['treeArrowColor', 'rgba(155, 155, 155, 1)'],\n      ['treeArrowHeight', 8],\n      ['treeArrowMarginLeft', 0],\n      ['treeArrowMarginRight', 5],\n      ['treeArrowMarginTop', 6],\n      ['treeArrowWidth', 13],\n      ['treeGridHeight', 250],\n      ['width', 'auto'],\n    ],\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nimport defaults from './defaults';\n\nexport default function () {\n  var typeMap,\n    component = {};\n  component.dehyphenateProperty = function hyphenateProperty(prop) {\n    prop = prop.replace('--cdg-', '');\n    var p = '',\n      nextLetterCap;\n    Array.prototype.forEach.call(prop, function (char) {\n      if (nextLetterCap) {\n        nextLetterCap = false;\n        p += char.toUpperCase();\n        return;\n      }\n      if (char === '-') {\n        nextLetterCap = true;\n        return;\n      }\n      p += char;\n    });\n    return p;\n  };\n  component.hyphenateProperty = function hyphenateProperty(prop, cust) {\n    var p = '';\n    Array.prototype.forEach.call(prop, function (char) {\n      if (char === char.toUpperCase()) {\n        p += '-' + char.toLowerCase();\n        return;\n      }\n      p += char;\n    });\n    return (cust ? '--cdg-' : '') + p;\n  };\n  function getDefaultItem(base, item) {\n    var i = {},\n      r;\n    defaults(i);\n    r = i.defaults[base].filter(function (i) {\n      return (\n        i[0].toLowerCase() === item.toLowerCase() ||\n        component.hyphenateProperty(i[0]) === item.toLowerCase() ||\n        component.hyphenateProperty(i[0], true) === item.toLowerCase()\n      );\n    })[0];\n    return r;\n  }\n  component.applyComponentStyle = function (supressChangeAndDrawEvents, intf) {\n    if (!intf.isComponent) {\n      return;\n    }\n    var cStyle = window.getComputedStyle(\n        intf.tagName === 'CANVAS-DATAGRID' ? intf : intf.canvas,\n        null,\n      ),\n      defs = {};\n    intf.computedStyle = cStyle;\n    defaults(defs);\n    defs = defs.defaults.styles;\n    defs.forEach(function (def) {\n      var val;\n      val = cStyle.getPropertyValue(component.hyphenateProperty(def[0], true));\n      if (val === '') {\n        val = cStyle.getPropertyValue(\n          component.hyphenateProperty(def[0], false),\n        );\n      }\n      if (val !== '' && typeof val === 'string') {\n        intf.setStyleProperty(\n          def[0],\n          typeMap[typeof def[1]](\n            val.replace(/^\\s+/, '').replace(/\\s+$/, ''),\n            def[1],\n          ),\n          true,\n        );\n      }\n    });\n    if (!supressChangeAndDrawEvents && intf.dispatchEvent) {\n      requestAnimationFrame(function () {\n        intf.resize(true);\n      });\n      intf.dispatchEvent('stylechanged', intf.style);\n    }\n  };\n  typeMap = {\n    data: function (strData) {\n      try {\n        return JSON.parse(strData);\n      } catch (e) {\n        throw new Error('Cannot read JSON data in canvas-datagrid data.');\n      }\n    },\n    schema: function (strSchema) {\n      try {\n        return JSON.parse(strSchema);\n      } catch (e) {\n        throw new Error(\n          'Cannot read JSON data in canvas-datagrid schema attribute.',\n        );\n      }\n    },\n    number: function (strNum, def) {\n      var n = parseInt(strNum, 10);\n      return isNaN(n) ? def : n;\n    },\n    boolean: function (strBool) {\n      return /true/i.test(strBool);\n    },\n    string: function (str) {\n      return str;\n    },\n  };\n  component.getObservableAttributes = function () {\n    var i = {},\n      attrs = ['data', 'schema', 'style', 'className', 'name'];\n    defaults(i);\n    i.defaults.attributes.forEach(function (attr) {\n      attrs.push(attr[0].toLowerCase());\n    });\n    return attrs;\n  };\n  component.disconnectedCallback = function () {\n    this.connected = false;\n  };\n  component.connectedCallback = function () {\n    var intf = this;\n    intf.parentDOMNode.innerHTML = '';\n    intf.parentDOMNode.appendChild(intf.canvas);\n    intf.connected = true;\n    component.observe(intf);\n    component.applyComponentStyle(true, intf);\n    intf.resize(true);\n  };\n  component.adoptedCallback = function () {\n    this.resize();\n  };\n  component.attributeChangedCallback = function (attrName, oldVal, newVal) {\n    var tfn,\n      intf = this,\n      def;\n    if (attrName === 'style') {\n      component.applyComponentStyle(false, intf);\n      return;\n    }\n    if (attrName === 'data') {\n      if (intf.dataType === 'application/x-canvas-datagrid') {\n        intf.dataType = 'application/json+x-canvas-datagrid';\n      }\n      intf.data = newVal;\n      return;\n    }\n    if (attrName === 'schema') {\n      intf.schema = typeMap.schema(newVal);\n      return;\n    }\n    if (attrName === 'name') {\n      intf.name = newVal;\n      return;\n    }\n    if (attrName === 'class' || attrName === 'className') {\n      return;\n    }\n    def = getDefaultItem('attributes', attrName);\n    if (def) {\n      tfn = typeMap[typeof def[1]];\n      intf.attributes[def[0]] = tfn(newVal);\n      return;\n    }\n    if (/^on/.test(attrName)) {\n      intf.addEventListener('on' + attrName, Function('e', newVal));\n    }\n    return;\n  };\n  component.observe = function (intf) {\n    var observer;\n    if (!window.MutationObserver) {\n      return;\n    }\n    intf.applyComponentStyle = function () {\n      component.applyComponentStyle(false, intf);\n      intf.resize();\n    };\n    /**\n     * Applies the computed css styles to the grid.  In some browsers, changing directives in attached style sheets does not automatically update the styles in this component.  It is necessary to call this method to update in these cases.\n     * @memberof canvasDatagrid\n     * @name applyComponentStyle\n     * @method\n     */\n    observer = new window.MutationObserver(function (mutations) {\n      var checkInnerHTML, checkStyle;\n      Array.prototype.forEach.call(mutations, function (mutation) {\n        if (\n          mutation.attributeName === 'class' ||\n          mutation.attributeName === 'style'\n        ) {\n          checkStyle = true;\n          return;\n        }\n        if (mutation.target.nodeName === 'STYLE') {\n          checkStyle = true;\n          return;\n        }\n        if (\n          mutation.target.parentNode &&\n          mutation.target.parentNode.nodeName === 'STYLE'\n        ) {\n          checkStyle = true;\n          return;\n        }\n        if (\n          mutation.target === intf &&\n          (mutation.addedNodes.length > 0 || mutation.type === 'characterData')\n        ) {\n          checkInnerHTML = true;\n        }\n      });\n      if (checkStyle) {\n        intf.applyComponentStyle(false, intf);\n      }\n      if (checkInnerHTML) {\n        if (intf.dataType === 'application/x-canvas-datagrid') {\n          intf.dataType = 'application/json+x-canvas-datagrid';\n        }\n        intf.data = intf.innerHTML;\n      }\n    });\n    observer.observe(intf, {\n      characterData: true,\n      childList: true,\n      attributes: true,\n      subtree: true,\n    });\n  };\n  return component;\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals XMLSerializer: false, define: true, Blob: false, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  var perfCounters = [],\n    cachedImagesDrawn = false,\n    drawCount = 0,\n    perfWindowSize = 300,\n    entityCount = [],\n    hiddenFrozenColumnCount = 0,\n    scrollDebugCounters = [],\n    touchPPSCounters = [];\n  self.htmlImageCache = {};\n  // more heavyweight version than fillArray defined in intf.js\n  function fillArray(low, high, step, def) {\n    step = step || 1;\n    var i = [],\n      x;\n    for (x = low; x <= high; x += step) {\n      i[x] = def === undefined ? x : typeof def === 'function' ? def(x) : def;\n    }\n    return i;\n  }\n  function drawPerfLine(w, h, x, y, perfArr, arrIndex, max, color, useAbs) {\n    var i = w / perfArr.length,\n      r = h / max;\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.beginPath();\n    self.ctx.moveTo(x, y + h);\n    perfArr.forEach(function (n) {\n      var val = arrIndex === undefined ? n : n[arrIndex],\n        cx,\n        cy;\n      if (useAbs) {\n        val = Math.abs(val);\n      }\n      cx = x + i;\n      cy = y + h - val * r;\n      self.ctx.lineTo(cx, cy);\n      x += i;\n    });\n    self.ctx.moveTo(x + w, y + h);\n    self.ctx.strokeStyle = color;\n    self.ctx.stroke();\n  }\n  function drawOnAllImagesLoaded() {\n    var loaded = true;\n    Object.keys(self.htmlImageCache).forEach(function (html) {\n      if (!self.htmlImageCache[html].img.complete) {\n        loaded = false;\n      }\n    });\n    if (loaded && !cachedImagesDrawn) {\n      cachedImagesDrawn = true;\n      self.draw();\n    }\n  }\n  function drawHtml(cell) {\n    var img,\n      v = cell.innerHTML || cell.formattedValue,\n      cacheKey =\n        v.toString() + cell.rowIndex.toString() + cell.columnIndex.toString(),\n      x = Math.round(cell.x + self.canvasOffsetLeft),\n      y = Math.round(cell.y + self.canvasOffsetTop);\n    if (self.htmlImageCache[cacheKey]) {\n      img = self.htmlImageCache[cacheKey].img;\n      if (\n        self.htmlImageCache[cacheKey].height !== cell.height ||\n        self.htmlImageCache[cacheKey].width !== cell.width\n      ) {\n        // height and width of the cell has changed, invalidate cache\n        self.htmlImageCache[cacheKey] = undefined;\n      } else {\n        if (!img.complete) {\n          return;\n        }\n        return self.ctx.drawImage(img, x, y);\n      }\n    } else {\n      cachedImagesDrawn = false;\n    }\n    img = new Image(cell.width, cell.height);\n    self.htmlImageCache[cacheKey] = {\n      img,\n      width: cell.width,\n      height: cell.height,\n    };\n    img.onload = function () {\n      self.ctx.drawImage(img, x, y);\n      drawOnAllImagesLoaded();\n    };\n    img.src =\n      'data:image/svg+xml;base64,' +\n      btoa(\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' +\n          cell.width +\n          '\" height=\"' +\n          cell.height +\n          '\">\\n' +\n          '<foreignObject class=\"node\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">\\n' +\n          '<body xmlns=\"http://www.w3.org/1999/xhtml\" style=\"margin:0;padding:0;\">\\n' +\n          v +\n          '\\n' +\n          '</body>' +\n          '</foreignObject>\\n' +\n          '</svg>\\n',\n      );\n  }\n  function drawOrderByArrow(x, y) {\n    var mt = self.style.columnHeaderOrderByArrowMarginTop * self.scale,\n      ml = self.style.columnHeaderOrderByArrowMarginLeft * self.scale,\n      mr = self.style.columnHeaderOrderByArrowMarginRight * self.scale,\n      aw = self.style.columnHeaderOrderByArrowWidth * self.scale,\n      ah = self.style.columnHeaderOrderByArrowHeight * self.scale;\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillStyle = self.style.columnHeaderOrderByArrowColor;\n    self.ctx.strokeStyle = self.style.columnHeaderOrderByArrowBorderColor;\n    self.ctx.beginPath();\n    x = x + ml;\n    y = y + mt;\n    if (self.orderDirection === 'asc') {\n      self.ctx.moveTo(x, y);\n      self.ctx.lineTo(x + aw, y);\n      self.ctx.lineTo(x + aw * 0.5, y + ah);\n      self.ctx.moveTo(x, y);\n    } else {\n      self.ctx.lineTo(x, y + ah);\n      self.ctx.lineTo(x + aw, y + ah);\n      self.ctx.lineTo(x + aw * 0.5, y);\n      self.ctx.lineTo(x, y + ah);\n    }\n    self.ctx.stroke();\n    self.ctx.fill();\n    return ml + aw + mr;\n  }\n  function drawTreeArrow(cell, x, y) {\n    var mt = self.style.treeArrowMarginTop * self.scale,\n      mr = self.style.treeArrowMarginRight * self.scale,\n      ml = self.style.treeArrowMarginLeft * self.scale,\n      aw = self.style.treeArrowWidth * self.scale,\n      ah = self.style.treeArrowHeight * self.scale;\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillStyle = self.style.treeArrowColor;\n    self.ctx.strokeStyle = self.style.treeArrowBorderColor;\n    self.ctx.beginPath();\n    x = x + ml;\n    y = y + mt;\n    if (self.openChildren[cell.rowIndex]) {\n      self.ctx.moveTo(x, y);\n      self.ctx.lineTo(x + aw, y);\n      self.ctx.lineTo(x + aw * 0.5, y + ah);\n      self.ctx.moveTo(x, y);\n    } else {\n      self.ctx.lineTo(x, y);\n      self.ctx.lineTo(x + ah, y + aw * 0.5);\n      self.ctx.lineTo(x, y + aw);\n      self.ctx.lineTo(x, y);\n    }\n    self.ctx.stroke();\n    self.ctx.fill();\n    return ml + aw + mr;\n  }\n  function radiusRect(x, y, w, h, radius) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    var r = x + w,\n      b = y + h;\n    self.ctx.beginPath();\n    self.ctx.moveTo(x + radius, y);\n    self.ctx.lineTo(r - radius, y);\n    self.ctx.quadraticCurveTo(r, y, r, y + radius);\n    self.ctx.lineTo(r, y + h - radius);\n    self.ctx.quadraticCurveTo(r, b, r - radius, b);\n    self.ctx.lineTo(x + radius, b);\n    self.ctx.quadraticCurveTo(x, b, x, b - radius);\n    self.ctx.lineTo(x, y + radius);\n    self.ctx.quadraticCurveTo(x, y, x + radius, y);\n  }\n  function fillRect(x, y, w, h) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillRect(x, y, w, h);\n  }\n  function strokeRect(x, y, w, h) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.strokeRect(x, y, w, h);\n  }\n  function fillText(text, x, y) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.fillText(text, x, y);\n  }\n  function fillCircle(x, y, r) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.beginPath();\n    self.ctx.arc(x, y, r, 0, 2 * Math.PI);\n    self.ctx.fill();\n  }\n  function strokeCircle(x, y, r) {\n    x += self.canvasOffsetLeft;\n    y += self.canvasOffsetTop;\n    self.ctx.beginPath();\n    self.ctx.arc(x, y, r, 0, 2 * Math.PI);\n    self.ctx.stroke();\n  }\n  function clipFrozenArea(mode) {\n    // 0 both, 1 rows, 2 cols\n    // self.lastFrozenColumnPixel;\n    // self.lastFrozenRowPixel;\n    self.ctx.beginPath();\n    if (mode === 0) {\n      self.ctx.moveTo(self.lastFrozenColumnPixel, self.lastFrozenRowPixel);\n      self.ctx.lineTo(self.lastFrozenColumnPixel, self.height);\n      self.ctx.lineTo(self.width, self.height);\n      self.ctx.lineTo(self.width, self.lastFrozenRowPixel);\n    }\n    if (mode === 1) {\n      self.ctx.moveTo(0, self.lastFrozenRowPixel);\n      self.ctx.lineTo(0, self.height);\n      self.ctx.lineTo(self.width, self.height);\n      self.ctx.lineTo(self.width, self.lastFrozenRowPixel);\n    }\n    if (mode === 2) {\n      self.ctx.moveTo(self.lastFrozenColumnPixel, 0);\n      self.ctx.lineTo(self.width, 0);\n      self.ctx.lineTo(self.width, self.height);\n      self.ctx.lineTo(self.lastFrozenColumnPixel, self.height);\n    }\n    self.ctx.clip();\n  }\n  function fillHandle(x, y, r) {\n    if (self.style.selectionHandleType === 'circle') {\n      return fillCircle(x, y, r * 0.5);\n    }\n    fillRect(x - r * 0.5, y - r * 0.5, r, r);\n  }\n  function strokeHandle(x, y, r) {\n    if (self.style.selectionHandleType === 'circle') {\n      return strokeCircle(x, y, r * 0.5);\n    }\n    strokeRect(x - r * 0.5, y - r * 0.5, r, r);\n  }\n  function addselectionHandle(c, pos) {\n    var hw = self.style.selectionHandleSize,\n      p = {\n        tr: function () {\n          fillHandle(c.x + c.width, c.y, hw);\n          strokeHandle(c.x + c.width, c.y, hw);\n        },\n        br: function () {\n          fillHandle(c.x + c.width, c.y + c.height, hw);\n          strokeHandle(c.x + c.width, c.y + c.height, hw);\n        },\n        tl: function () {\n          fillHandle(c.x, c.y, hw);\n          strokeHandle(c.x, c.y, hw);\n        },\n        bl: function () {\n          fillHandle(c.x, c.y + c.height, hw);\n          strokeHandle(c.x, c.y + c.height, hw);\n        },\n      };\n    p[pos]();\n  }\n  function addBorderLine(c, pos) {\n    self.ctx.beginPath();\n    var p = {\n      t: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop,\n        );\n      },\n      r: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n      },\n      b: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft + c.width,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n      },\n      l: function () {\n        self.ctx.moveTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop,\n        );\n        self.ctx.lineTo(\n          c.x + self.canvasOffsetLeft,\n          c.y + self.canvasOffsetTop + c.height,\n        );\n      },\n    };\n    p[pos]();\n    self.ctx.stroke();\n  }\n  function addEllipsis(text, width) {\n    var c,\n      w = 0;\n    if (self.ellipsisCache[text] && self.ellipsisCache[text][width]) {\n      return self.ellipsisCache[text][width];\n    }\n    //TODO Add ellipsis back when there is a fast way to do it\n    w = self.ctx.measureText(text).width;\n    self.ellipsisCache[text] = self.ellipsisCache[text] || {};\n    c = { value: text, width: w };\n    self.ellipsisCache[text][width] = c;\n    return c;\n  }\n  function wrapText(cell, splitChar) {\n    if (!cell.formattedValue) {\n      return {\n        lines: [{ width: 0, value: '' }],\n        width: 0,\n        height: cell.calculatedLineHeight,\n      };\n    }\n    var max = 0,\n      n = '\\n',\n      x,\n      word,\n      words = cell.formattedValue.split(splitChar),\n      textHeight = cell.calculatedLineHeight,\n      lines = [],\n      out = [],\n      wrap = self.style.cellWhiteSpace !== 'nowrap',\n      autoResize = self.attributes.autoResizeRows && wrap,\n      elWidth,\n      et = self.attributes.ellipsisText,\n      elClipLength,\n      plWidth,\n      clippedVal,\n      ogWordWidth,\n      previousLine,\n      line = {\n        width: 0,\n        value: '',\n      },\n      cHeight = wrap ? cell.paddedHeight : cell.calculatedLineHeight;\n    lines.push(line);\n    elWidth = self.ctx.measureText(' ' + et).width;\n    for (x = 0; x < words.length; x += 1) {\n      word = words[x];\n      var measure = self.ctx.measureText(word + splitChar);\n      if (line.width + measure.width + elWidth < cell.paddedWidth) {\n        line.value += word + splitChar;\n        line.width += measure.width;\n        continue;\n      }\n      // if there is a hyphenated word that is too long\n      // split it and add the split set to the array\n      // then back up and re-read new split set\n      // this behavior seems right, it might not be\n      if (/\\w-\\w/.test(word) && cell.paddedWidth < measure.width) {\n        words.splice(x, 1, word.split('-')[0] + '-', word.split('-')[1]);\n        x -= 1;\n        continue;\n      }\n      line = {\n        width: measure.width,\n        value: word + splitChar,\n      };\n      if (x === 0) {\n        lines = [];\n        lines.push(line);\n      }\n      textHeight += cell.calculatedLineHeight;\n      if (textHeight > cHeight && !autoResize) {\n        if (lines.length === 0) {\n          break;\n        }\n        elClipLength = 1;\n        previousLine = lines[lines.length - 1];\n        if (previousLine.width < cell.paddedWidth && words.length === 1) {\n          break;\n        }\n        clippedVal = previousLine.value + word;\n        plWidth = self.ctx.measureText(clippedVal + et).width;\n        var originText = clippedVal;\n        if (plWidth > cell.paddedWidth) {\n          var stepLength = parseInt(clippedVal.length / 2);\n          var direction = -1;\n          while (stepLength > 0) {\n            clippedVal = originText.substr(\n              0,\n              stepLength * direction + clippedVal.length,\n            );\n            plWidth = self.ctx.measureText(clippedVal + et).width;\n            direction = plWidth > cell.paddedWidth ? -1 : 1;\n            stepLength = parseInt(stepLength / 2);\n          }\n        }\n        clippedVal =\n          clippedVal + (originText.length != clippedVal.length ? et : '');\n        previousLine.value = clippedVal;\n        previousLine.width = plWidth;\n        break;\n      }\n      if (x > 0) {\n        lines.push(line);\n      }\n    }\n    return {\n      lines: lines,\n      width: max,\n      height: cell.calculatedLineHeight * lines.length,\n    };\n  }\n  function drawText(cell) {\n    var ll = cell.text.lines.length,\n      h = cell.fontHeight * cell.lineHeight,\n      x,\n      line,\n      wrap = self.style.cellWhiteSpace !== 'nowrap',\n      textHeight = 0;\n    for (x = 0; x < cell.text.lines.length; x += 1) {\n      line = cell.text.lines[x];\n      var vPos =\n          Math.max(\n            (cell.height -\n              (wrap ? cell.text.height : cell.calculatedLineHeight)) *\n              0.5,\n            0,\n          ) + h,\n        hPos = cell.paddingLeft + cell.treeArrowWidth + cell.orderByArrowWidth;\n      if (cell.horizontalAlignment === 'right') {\n        hPos = cell.paddingLeft + cell.paddedWidth - line.width;\n      } else if (cell.horizontalAlignment === 'center') {\n        hPos =\n          cell.paddingLeft +\n          (cell.paddedWidth + cell.paddingRight) / 2 -\n          line.width / 2;\n      }\n      if (cell.verticalAlignment === 'top') {\n        vPos = cell.calculatedLineHeight;\n      } else if (cell.verticalAlignment === 'bottom') {\n        vPos = cell.height - cell.paddingBottom - cell.text.height;\n      }\n      line.height = h + cell.lineSpacing;\n      line.offsetLeft = hPos;\n      line.offsetTop = vPos;\n      line.x = cell.x + hPos;\n      line.y = cell.y + textHeight + vPos;\n      textHeight += line.height;\n      fillText(line.value, line.x, line.y);\n    }\n    if (self.attributes.debug && cell.active) {\n      requestAnimationFrame(function () {\n        self.ctx.font = self.style.debugFont;\n        self.ctx.fillStyle = self.style.debugColor;\n        fillText(\n          JSON.stringify(\n            {\n              x: cell.x,\n              y: cell.y,\n              h: cell.height,\n              w: cell.width,\n              pw: cell.paddedWidth,\n              idx: cell.columnIndex,\n              idx_ord: cell.sortColumnIndex,\n            },\n            null,\n            '\\t',\n          ),\n          cell.x + 14,\n          cell.y + 14,\n        );\n        fillText(\n          JSON.stringify(\n            cell.text.lines.map(function (l) {\n              return { w: l.width, v: l.value.length };\n            }),\n            null,\n            '\\t',\n          ),\n          cell.x + 14,\n          cell.y + 30,\n        );\n      });\n    }\n  }\n  function getFrozenColumnsWidth() {\n    var w = 0,\n      s = self.getSchema(),\n      x = 0,\n      n = Math.min(self.frozenColumn, s.length),\n      column;\n    hiddenFrozenColumnCount = 0;\n    while (x < n) {\n      column = s[x];\n      if (column.hidden) {\n        hiddenFrozenColumnCount += 1;\n      } else {\n        w += self.getColummnWidth(x);\n      }\n      x += 1;\n    }\n    return w;\n  }\n  /**\n   * Redraws the grid. No matter what the change, this is the only method required to refresh everything.\n   * @memberof canvasDatagrid\n   * @name draw\n   * @method\n   */\n  // r = literal row index\n  // rd = row data array\n  // i = user order index\n  // o = literal data index\n  // y = y drawing cursor\n  // x = x drawing cursor\n  // s = visible schema array\n  // cx = current x drawing cursor sub calculation var\n  // cy = current y drawing cursor sub calculation var\n  // a = static cell (like corner cell)\n  // p = perf counter\n  // l = data length\n  // u = current cell\n  // h = current height\n  // w = current width\n  self.draw = function (internal) {\n    if (self.dispatchEvent('beforedraw', {})) {\n      return;\n    }\n    if (!self.isChildGrid && (!self.height || !self.width)) {\n      return;\n    }\n    if (self.isChildGrid && internal) {\n      requestAnimationFrame(self.parentGrid.draw);\n      return;\n    }\n    if (self.intf.visible === false) {\n      return;\n    }\n    // initial values\n    var checkScrollHeight,\n      rowHeaderCell,\n      p,\n      cx,\n      cy,\n      treeGrid,\n      rowOpen,\n      rowHeight,\n      cornerCell,\n      y,\n      x,\n      c,\n      h,\n      w,\n      schema,\n      rowIndex,\n      rowData,\n      aCell,\n      viewData = self.viewData || [],\n      bc = self.style.gridBorderCollapse === 'collapse',\n      selectionBorders = [],\n      moveBorders = [],\n      selectionHandles = [],\n      rowHeaders = [],\n      l = viewData.length,\n      u = self.currentCell || {},\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\n      cellHeight = self.style.cellHeight;\n    drawCount += 1;\n    p = performance.now();\n    self.visibleRowHeights = [];\n    // if data length has changed, there is no way to know\n    if (viewData.length > self.orders.rows.length) {\n      self.createRowOrders();\n    }\n    function drawScrollBars() {\n      var drawCorner,\n        en = self.scrollBox.entities,\n        m = self.style.scrollBarBoxMargin * 2;\n      self.ctx.strokeStyle = self.style.scrollBarBorderColor;\n      self.ctx.lineWidth = self.style.scrollBarBorderWidth;\n      en.horizontalBox.x =\n        rowHeaderCellWidth +\n        self.style.scrollBarBoxMargin +\n        (en.horizontalBar.width - self.scrollBox.scrollBoxWidth) *\n          (self.scrollBox.scrollLeft / self.scrollBox.scrollWidth);\n      en.verticalBox.y =\n        columnHeaderCellHeight +\n        self.style.scrollBarBoxMargin +\n        (en.verticalBar.height - self.scrollBox.scrollBoxHeight) *\n          (self.scrollBox.scrollTop / self.scrollBox.scrollHeight);\n      if (self.scrollBox.horizontalBarVisible) {\n        self.ctx.fillStyle = self.style.scrollBarBackgroundColor;\n        fillRect(\n          en.horizontalBar.x,\n          en.horizontalBar.y,\n          en.horizontalBar.width + m,\n          en.horizontalBar.height,\n        );\n        strokeRect(\n          en.horizontalBar.x,\n          en.horizontalBar.y,\n          en.horizontalBar.width + m,\n          en.horizontalBar.height,\n        );\n        self.ctx.fillStyle = self.style.scrollBarBoxColor;\n        if (self.scrollBox.horizontalBoxVisible) {\n          if (/horizontal/.test(u.context)) {\n            self.ctx.fillStyle = self.style.scrollBarActiveColor;\n          }\n          radiusRect(\n            en.horizontalBox.x,\n            en.horizontalBox.y,\n            en.horizontalBox.width,\n            en.horizontalBox.height,\n            self.style.scrollBarBoxBorderRadius,\n          );\n          self.ctx.stroke();\n          self.ctx.fill();\n        }\n        drawCorner = true;\n        self.visibleCells.unshift(en.horizontalBar);\n        self.visibleCells.unshift(en.horizontalBox);\n      }\n      if (self.scrollBox.verticalBarVisible) {\n        self.ctx.fillStyle = self.style.scrollBarBackgroundColor;\n        fillRect(\n          en.verticalBar.x,\n          en.verticalBar.y,\n          en.verticalBar.width,\n          en.verticalBar.height + m,\n        );\n        strokeRect(\n          en.verticalBar.x,\n          en.verticalBar.y,\n          en.verticalBar.width,\n          en.verticalBar.height + m,\n        );\n        if (self.scrollBox.verticalBoxVisible) {\n          self.ctx.fillStyle = self.style.scrollBarBoxColor;\n          if (/vertical/.test(u.context)) {\n            self.ctx.fillStyle = self.style.scrollBarActiveColor;\n          }\n          radiusRect(\n            en.verticalBox.x,\n            en.verticalBox.y,\n            en.verticalBox.width,\n            en.verticalBox.height,\n            self.style.scrollBarBoxBorderRadius,\n          );\n          self.ctx.stroke();\n          self.ctx.fill();\n        }\n        drawCorner = true;\n        self.visibleCells.unshift(en.verticalBar);\n        self.visibleCells.unshift(en.verticalBox);\n      }\n      if (drawCorner) {\n        //corner\n        self.ctx.strokeStyle = self.style.scrollBarCornerBorderColor;\n        self.ctx.fillStyle = self.style.scrollBarCornerBackgroundColor;\n        radiusRect(\n          en.corner.x,\n          en.corner.y,\n          en.corner.width,\n          en.corner.height,\n          0,\n        );\n        self.ctx.stroke();\n        self.ctx.fill();\n        self.visibleCells.unshift(en.corner);\n      }\n    }\n    function createHandlesOverlayArray(cell) {\n      if (self.attributes.allowMovingSelection || self.mobile) {\n        if (\n          cell.selectionBorderTop &&\n          cell.selectionBorderRight &&\n          self.mobile\n        ) {\n          selectionHandles.push([cell, 'tr']);\n          cell.selectionHandle = 'tr';\n        }\n        if (\n          cell.selectionBorderTop &&\n          cell.selectionBorderLeft &&\n          self.mobile\n        ) {\n          selectionHandles.push([cell, 'tl']);\n          cell.selectionHandle = 'tl';\n        }\n        if (\n          cell.selectionBorderBottom &&\n          cell.selectionBorderLeft &&\n          self.mobile\n        ) {\n          selectionHandles.push([cell, 'bl']);\n          cell.selectionHandle = 'bl';\n        }\n        if (\n          cell.selectionBorderBottom &&\n          cell.selectionBorderRight &&\n          (self.attributes.selectionHandleBehavior !== 'none' || self.mobile)\n        ) {\n          selectionHandles.push([cell, 'br']);\n          cell.selectionHandle = 'br';\n        }\n      }\n    }\n    function createBorderOverlayArray(\n      cell,\n      drawArray,\n      propPrefix,\n      offsetPoint,\n    ) {\n      offsetPoint = offsetPoint || { x: 0, y: 0 };\n      cell.selectionBorder = '';\n      if (\n        !cell.isRowHeader &&\n        self.selections[cell.rowIndex + -offsetPoint.y] &&\n        self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\n          cell.columnIndex + -offsetPoint.x,\n        ) !== -1\n      ) {\n        if (\n          (!self.selections[cell.rowIndex - 1 + -offsetPoint.y] ||\n            self.selections[cell.rowIndex - 1 + -offsetPoint.y].indexOf(\n              cell.columnIndex + -offsetPoint.x,\n            ) === -1 ||\n            cell.rowIndex === 0) &&\n          !cell.isHeader\n        ) {\n          drawArray.push([cell, 't']);\n          cell[propPrefix + 'BorderTop'] = true;\n          cell[propPrefix + 'Border'] += 't';\n        }\n        if (\n          !self.selections[cell.rowIndex + 1 + -offsetPoint.y] ||\n          self.selections[cell.rowIndex + 1 + -offsetPoint.y].indexOf(\n            cell.columnIndex + -offsetPoint.x,\n          ) === -1\n        ) {\n          drawArray.push([cell, 'b']);\n          cell[propPrefix + 'BorderBottom'] = true;\n          cell[propPrefix + 'Border'] += 'b';\n        }\n        if (\n          !self.selections[cell.rowIndex + -offsetPoint.y] ||\n          cell.columnIndex === 0 ||\n          self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\n            cell.columnIndex - 1 + -offsetPoint.x,\n          ) === -1\n        ) {\n          drawArray.push([cell, 'l']);\n          cell[propPrefix + 'BorderLeft'] = true;\n          cell[propPrefix + 'Border'] += 'l';\n        }\n        if (\n          !self.selections[cell.rowIndex + -offsetPoint.y] ||\n          cell.columnIndex === schema.length ||\n          self.selections[cell.rowIndex + -offsetPoint.y].indexOf(\n            cell.columnIndex + 1 + -offsetPoint.x,\n          ) === -1\n        ) {\n          drawArray.push([cell, 'r']);\n          cell[propPrefix + 'BorderRight'] = true;\n          cell[propPrefix + 'Border'] += 'r';\n        }\n      }\n    }\n    function drawCell(rowData, rowOrderIndex, rowIndex) {\n      return function drawEach(header, headerIndex, columnOrderIndex) {\n        if (header.hidden) {\n          return 0;\n        }\n        var cellStyle = header.style || 'cell',\n          cellGridAttributes,\n          cell,\n          isHeader = /HeaderCell/.test(cellStyle),\n          isCorner = /cornerCell/.test(cellStyle),\n          isRowHeader = 'rowHeaderCell' === cellStyle,\n          isColumnHeader = 'columnHeaderCell' === cellStyle,\n          wrap = self.style.cellWhiteSpace !== 'nowrap',\n          selected =\n            self.selections[rowOrderIndex] &&\n            self.selections[rowOrderIndex].indexOf(columnOrderIndex) !== -1,\n          hovered =\n            self.hovers.rowIndex === rowOrderIndex &&\n            self.hovers.columnIndex === columnOrderIndex,\n          active =\n            self.activeCell.rowIndex === rowOrderIndex &&\n            self.activeCell.columnIndex === columnOrderIndex,\n          isColumnHeaderCellCap = cellStyle === 'columnHeaderCellCap',\n          rawValue = rowData ? rowData[header.name] : undefined,\n          isGrid = header.type === 'canvas-datagrid',\n          activeHeader =\n            (self.orders.rows[self.activeCell.rowIndex] === rowOrderIndex ||\n              self.orders.columns[self.activeCell.columnIndex] ===\n                headerIndex) &&\n            (columnOrderIndex === -1 || rowOrderIndex === -1)\n              ? isRowHeader\n                ? 'activeRowHeaderCell'\n                : 'activeColumnHeaderCell'\n              : false,\n          val,\n          f = self.formatters[header.type || 'string'],\n          orderByArrowSize = 0,\n          treeArrowSize = 0,\n          cellWidth = self.sizes.columns[headerIndex] || header.width,\n          ev = {\n            value: rawValue,\n            row: rowData,\n            header: header,\n          };\n        if (isColumnHeaderCellCap) {\n          cellWidth = w - x;\n        }\n        // if no data or schema are defined, a width is provided to the stub column\n        if (cellWidth === undefined) {\n          cellWidth = self.style.cellWidth;\n        }\n        cellWidth = cellWidth * self.scale;\n        if (x + cellWidth + self.style.cellBorderWidth < 0) {\n          x += cellWidth + self.style.cellBorderWidth;\n        }\n        if (active && cellStyle !== 'cornerCell') {\n          cellStyle = 'activeCell';\n        }\n        if (self.visibleRows.indexOf(rowIndex) === -1 && !isHeader) {\n          self.visibleRows.push(rowIndex);\n        }\n        val = self.dispatchEvent('formatcellvalue', ev);\n        cx = x;\n        cy = y;\n        if (cellStyle === 'cornerCell') {\n          cx = 0;\n          cy = 0;\n        } else if (isRowHeader) {\n          cx = 0;\n        } else if (isHeader) {\n          cy = 0;\n        }\n        cell = {\n          type: isGrid ? 'canvas-datagrid-cell' : header.type,\n          style: cellStyle,\n          nodeType: 'canvas-datagrid-cell',\n          x: cx,\n          y: cy,\n          fontHeight: (self.style[cellStyle + 'FontHeight'] || 0) * self.scale,\n          horizontalAlignment: self.style[cellStyle + 'HorizontalAlignment'],\n          verticalAlignment: self.style[cellStyle + 'VerticalAlignment'],\n          paddingLeft:\n            (self.style[cellStyle + 'PaddingLeft'] || 0) * self.scale,\n          paddingTop: (self.style[cellStyle + 'PaddingTop'] || 0) * self.scale,\n          paddingRight:\n            (self.style[cellStyle + 'PaddingRight'] || 0) * self.scale,\n          paddingBottom:\n            (self.style[cellStyle + 'PaddingBottom'] || 0) * self.scale,\n          whiteSpace: self.style.cellWhiteSpace,\n          lineHeight: self.style.cellLineHeight,\n          lineSpacing: self.style.cellLineSpacing,\n          offsetTop: self.canvasOffsetTop + cy,\n          offsetLeft: self.canvasOffsetLeft + cx,\n          scrollTop: self.scrollBox.scrollTop,\n          scrollLeft: self.scrollBox.scrollLeft,\n          active: active || activeHeader,\n          hovered: hovered,\n          selected: selected,\n          width: cellWidth,\n          height: cellHeight,\n          offsetWidth: cellWidth,\n          offsetHeight: cellHeight,\n          parentNode: self.intf.parentNode,\n          offsetParent: self.intf.parentNode,\n          data: rowData,\n          isCorner: isCorner,\n          isHeader: isHeader,\n          isColumnHeader: isColumnHeader,\n          isColumnHeaderCellCap: isColumnHeaderCellCap,\n          isRowHeader: isRowHeader,\n          rowOpen: rowOpen,\n          header: header,\n\n          columnIndex: columnOrderIndex,\n          rowIndex: rowOrderIndex,\n\n          viewRowIndex: rowOrderIndex,\n          viewColumnIndex: columnOrderIndex,\n\n          boundRowIndex: self.getBoundRowIndexFromViewRowIndex(rowOrderIndex),\n          boundColumnIndex: columnOrderIndex,\n\n          sortColumnIndex: headerIndex,\n          sortRowIndex: rowIndex,\n\n          isGrid: isGrid,\n          isNormal: !isGrid && !isCorner && !isHeader,\n          gridId: (self.attributes.name || '') + rowIndex + ':' + headerIndex,\n          parentGrid: self.intf,\n          innerHTML: '',\n          activeHeader: activeHeader,\n          value:\n            isHeader && !isRowHeader ? header.title || header.name : rawValue,\n        };\n        cell.calculatedLineHeight =\n          cell.fontHeight * cell.lineHeight + cell.lineSpacing;\n        cell.paddedWidth = cell.width - cell.paddingRight - cell.paddingLeft;\n        cell.paddedHeight = cell.height - cell.paddingTop - cell.paddingBottom;\n        ev.cell = cell;\n        cell.userHeight = cell.isHeader ? self.sizes.rows[-1] : rowHeight;\n        cell.userWidth = cell.isHeader\n          ? self.sizes.columns.cornerCell\n          : self.sizes.columns[headerIndex];\n        self.visibleCells.unshift(cell);\n        if (self.dispatchEvent('beforerendercell', ev)) {\n          return;\n        }\n        self.ctx.fillStyle = self.style[cellStyle + 'BackgroundColor'];\n        self.ctx.strokeStyle = self.style[cellStyle + 'BorderColor'];\n        self.ctx.lineWidth = self.style[cellStyle + 'BorderWidth'];\n        if (hovered) {\n          self.ctx.fillStyle = self.style[cellStyle + 'HoverBackgroundColor'];\n          self.ctx.strokeStyle = self.style[cellStyle + 'HoverBorderColor'];\n        }\n        if (selected) {\n          self.ctx.fillStyle =\n            self.style[cellStyle + 'SelectedBackgroundColor'];\n          self.ctx.strokeStyle = self.style[cellStyle + 'SelectedBorderColor'];\n        }\n        if (activeHeader) {\n          self.ctx.fillStyle = self.style[activeHeader + 'BackgroundColor'];\n        }\n        self.dispatchEvent('rendercell', ev);\n        if (cell.isGrid) {\n          if (cell.height !== rowHeight) {\n            cell.height = rowHeight || self.style.cellHeightWithChildGrid;\n            checkScrollHeight = true;\n          }\n          cell.width =\n            self.sizes.columns[headerIndex] ||\n            self.style.cellWidthWithChildGrid;\n        }\n        if (rowOpen && !cell.isRowHeader) {\n          cell.height = self.sizes.rows[rowIndex] || self.style.cellHeight;\n        }\n        if (!cell.isGrid) {\n          fillRect(cx, cy, cell.width, cell.height);\n          strokeRect(cx, cy, cell.width, cell.height);\n        }\n        self.ctx.save();\n        radiusRect(cell.x, cell.y, cell.width, cell.height, 0);\n        self.ctx.clip();\n        self.dispatchEvent('afterrendercell', ev);\n        if (cell.height !== cellHeight && !(rowOpen && !cell.isRowHeader)) {\n          self.sizes.rows[isHeader ? -1 : rowIndex] = cell.height;\n          checkScrollHeight = true;\n        }\n        if (cell.width !== cellWidth) {\n          self.sizes.columns[headerIndex] = cell.width;\n          checkScrollHeight = true;\n        }\n        if (isRowHeader && self.attributes.tree) {\n          if (!self.dispatchEvent('rendertreearrow', ev)) {\n            treeArrowSize = drawTreeArrow(\n              cell,\n              self.style[cellStyle + 'PaddingLeft'],\n              cy,\n              0,\n            );\n          }\n        }\n        if ((self.attributes.showRowNumbers && isRowHeader) || !isRowHeader) {\n          if (cell.isGrid && !self.dispatchEvent('beforerendercellgrid', ev)) {\n            if (!self.childGrids[cell.gridId]) {\n              // HACK: this only allows setting of the child grids styles if data is set _after_\n              // this is less than desirable.  An interface needs to be made to effect the\n              // style of all cell grids.  One for individual grids already exists.\n              cellGridAttributes = self.cellGridAttributes;\n              cellGridAttributes.name = self.attributes.saveAppearance\n                ? cell.gridId\n                : undefined;\n              cellGridAttributes.component = false;\n              cellGridAttributes.parentNode = cell;\n              cellGridAttributes.data = rawValue;\n              ev.cellGridAttributes = cellGridAttributes;\n              if (self.dispatchEvent('beforecreatecellgrid', ev)) {\n                return;\n              }\n              self.childGrids[cell.gridId] = self.createGrid(\n                cellGridAttributes,\n              );\n              self.sizes.rows[rowIndex] =\n                self.sizes.rows[rowIndex] || self.style.cellGridHeight;\n              checkScrollHeight = true;\n            }\n            cell.grid = self.childGrids[cell.gridId];\n            cell.grid.parentNode = cell;\n            cell.grid.visible = true;\n            cell.grid.draw();\n            self.dispatchEvent('rendercellgrid', ev);\n          } else if (!cell.isGrid) {\n            if (self.childGrids[cell.gridId]) {\n              self.childGrids[cell.gridId].parentNode.offsetHeight = 0;\n            }\n            if (isHeader && self.orderBy === header.name) {\n              if (!self.dispatchEvent('renderorderbyarrow', ev)) {\n                orderByArrowSize = drawOrderByArrow(\n                  cx + self.style[cellStyle + 'PaddingLeft'],\n                  0,\n                );\n              }\n            }\n            self.ctx.fillStyle = self.style[cellStyle + 'Color'];\n            if (hovered) {\n              self.ctx.fillStyle = self.style[cellStyle + 'HoverColor'];\n            }\n            if (selected) {\n              self.ctx.fillStyle = self.style[cellStyle + 'SelectedColor'];\n            }\n            if (activeHeader) {\n              self.ctx.fillStyle = self.style[activeHeader + 'Color'];\n            }\n            cell.treeArrowWidth = treeArrowSize;\n            cell.orderByArrowWidth = orderByArrowSize;\n            // create text ref to see if height needs to expand\n            val = val !== undefined ? val : f ? f(ev) : '';\n            if (val === undefined && !f) {\n              val = '';\n              console.warn(\n                'canvas-datagrid: Unknown format ' +\n                  header.type +\n                  ' add a cellFormater',\n              );\n            }\n            cell.formattedValue = (val !== undefined && val !== null\n              ? val\n              : ''\n            ).toString();\n            if (\n              self.columnFilters &&\n              self.columnFilters[val] !== undefined &&\n              isHeader\n            ) {\n              cell.formattedValue = self.attributes.filterTextPrefix + val;\n            }\n            self.ctx.font =\n              self.style[cellStyle + 'FontHeight'] * self.scale +\n              'px ' +\n              self.style[cellStyle + 'FontName'];\n            if (!self.dispatchEvent('formattext', ev)) {\n              cell.text = wrapText(cell, ' ');\n            }\n            if (!self.dispatchEvent('rendertext', ev)) {\n              if (cell.innerHTML || header.type === 'html') {\n                drawHtml(cell);\n              } else {\n                drawText(cell);\n              }\n\n              if (wrap && cell.text && cell.text.height > rowHeight) {\n                self.sizes.rows[isHeader ? -1 : rowIndex] = cell.text.height;\n                checkScrollHeight = true;\n              }\n            }\n          }\n        }\n        if (active) {\n          aCell = cell;\n        }\n        createBorderOverlayArray(cell, selectionBorders, 'selection');\n        // createBorderOverlayArray calculates data for createHandlesOverlayArray so it must go 2nd\n        createHandlesOverlayArray(cell);\n        if (self.movingSelection) {\n          createBorderOverlayArray(cell, moveBorders, 'move', self.moveOffset);\n        }\n        self.ctx.restore();\n        x += cell.width + (bc ? 0 : self.style.cellBorderWidth);\n        return cell.width;\n      };\n    }\n    function drawRowHeader(rowData, rowIndex, rowOrderIndex) {\n      if (self.attributes.showRowHeaders) {\n        x = 0;\n\n        // When filtering we'd like to display the actual row numbers,\n        // as it is in the unfiltered data, instead of simply the viewed\n        // row index + 1:\n        const filteredRowNumber =\n          self.getBoundRowIndexFromViewRowIndex(rowIndex) + 1;\n\n        const rowHeaderValue = self.hasActiveFilters()\n          ? filteredRowNumber\n          : rowIndex + 1;\n\n        const rowHeaderCell = { rowHeaderCell: rowHeaderValue };\n        const headerDescription = {\n          name: 'rowHeaderCell',\n          width: self.sizes.columns[-1] || self.style.rowHeaderCellWidth,\n          style: 'rowHeaderCell',\n          type: 'string',\n          data: rowHeaderValue,\n          index: -1,\n        };\n        rowOpen = self.openChildren[rowIndex];\n        drawCell(rowHeaderCell, rowOrderIndex, rowIndex)(\n          headerDescription,\n          -1,\n          -1,\n        );\n      }\n    }\n    function drawHeaders() {\n      var d,\n        g = schema.length,\n        i,\n        o,\n        columnHeaderCell,\n        header,\n        nonFrozenHeaderWidth;\n      function drawHeaderColumnRange(start, end) {\n        end = Math.min(end, g);\n        for (o = start; o < end; o += 1) {\n          i = self.orders.columns[o];\n          header = schema[i];\n          if (!header.hidden) {\n            d = {\n              title: header.title,\n              name: header.name,\n              width: header.width || self.style.cellWidth,\n              style: 'columnHeaderCell',\n              type: 'string',\n              index: o,\n              order: i,\n            };\n            columnHeaderCell = {\n              columnHeaderCell: header.title || header.name,\n            };\n            x += drawCell(columnHeaderCell, -1, -1)(d, i, o);\n            if (x > self.width + self.scrollBox.scrollLeft) {\n              break;\n            }\n          }\n        }\n      }\n      rowHeaders.forEach(function (rArgs, rhIndex) {\n        y = rArgs[3];\n        cellHeight = rArgs[4];\n        if (rhIndex === self.frozenRow) {\n          self.ctx.save();\n          radiusRect(\n            0,\n            self.lastFrozenRowPixel,\n            self.width,\n            self.height - self.lastFrozenRowPixel,\n            0,\n          );\n          self.ctx.clip();\n        }\n        drawRowHeader(rArgs[0], rArgs[1], rArgs[2]);\n      });\n      self.ctx.restore();\n      if (self.attributes.showColumnHeaders) {\n        x =\n          -self.scrollBox.scrollLeft +\n          self.scrollPixelLeft +\n          self.style.columnHeaderCellBorderWidth;\n        if (self.attributes.showRowHeaders) {\n          x += rowHeaderCellWidth;\n        }\n        y = 0;\n        // cell height might have changed during drawing\n        cellHeight = self.getColumnHeaderCellHeight();\n        drawHeaderColumnRange(self.scrollIndexLeft, g);\n        nonFrozenHeaderWidth = x;\n        x = self.style.columnHeaderCellBorderWidth;\n        if (self.attributes.showRowHeaders) {\n          x += rowHeaderCellWidth;\n        }\n        drawHeaderColumnRange(0, self.frozenColumn);\n        // fill in the space right of the headers\n        x = nonFrozenHeaderWidth;\n        if (x < w) {\n          c = {\n            name: '',\n            width: self.style.scrollBarWidth,\n            style: 'columnHeaderCellCap',\n            isColumnHeaderCell: true,\n            isColumnHeaderCellCap: true,\n            type: 'string',\n            index: schema.length,\n          };\n          drawCell({ endCap: '' }, -1, -1)(c, -1, -1);\n        }\n        // fill in the space right of the headers\n        if (self.attributes.showRowHeaders) {\n          cornerCell = { cornerCell: '' };\n          x = 0;\n          c = {\n            name: 'cornerCell',\n            width: self.style.rowHeaderCellWidth,\n            style: 'cornerCell',\n            type: 'string',\n            index: -1,\n          };\n          drawCell(cornerCell, -1, -1)(c, -1, -1);\n        }\n      }\n    }\n    function drawRow(rowOrderIndex, rowIndex) {\n      var headerIndex,\n        treeHeight,\n        rowSansTreeHeight,\n        columnOrderIndex,\n        g = schema.length;\n      if (y - cellHeight * 2 > h) {\n        return false;\n      }\n      rowData = viewData[rowOrderIndex];\n      rowOpen = self.openChildren[rowOrderIndex];\n      rowSansTreeHeight =\n        (self.sizes.rows[rowOrderIndex] || self.style.cellHeight) * self.scale;\n      treeHeight = (rowOpen ? self.sizes.trees[rowOrderIndex] : 0) * self.scale;\n      rowHeight = rowSansTreeHeight + treeHeight;\n      if (y < -rowHeight) {\n        return false;\n      }\n      if (self.attributes.showRowHeaders) {\n        x += rowHeaderCellWidth;\n      }\n      cellHeight = rowHeight;\n      //draw normal columns\n      for (\n        columnOrderIndex = self.scrollIndexLeft;\n        columnOrderIndex < g;\n        columnOrderIndex += 1\n      ) {\n        headerIndex = self.orders.columns[columnOrderIndex];\n        x += drawCell(rowData, rowOrderIndex, rowIndex)(\n          schema[headerIndex],\n          headerIndex,\n          columnOrderIndex,\n        );\n        if (x > self.width) {\n          self.scrollIndexRight = columnOrderIndex;\n          self.scrollPixelRight = x;\n          break;\n        }\n      }\n      //draw frozen columns\n      x = 0;\n      if (self.attributes.showRowHeaders) {\n        x += rowHeaderCellWidth;\n      }\n      for (\n        columnOrderIndex = 0;\n        columnOrderIndex < self.frozenColumn;\n        columnOrderIndex += 1\n      ) {\n        headerIndex = self.orders.columns[columnOrderIndex];\n        x += drawCell(rowData, rowOrderIndex, rowIndex)(\n          schema[headerIndex],\n          headerIndex,\n          columnOrderIndex,\n        );\n        if (x > self.width) {\n          break;\n        }\n      }\n      self.lastFrozenColumnPixel = x;\n      // cell height might have changed during drawing\n      cellHeight = rowHeight;\n      x =\n        -self.scrollBox.scrollLeft +\n        self.scrollPixelLeft +\n        self.style.cellBorderWidth;\n      // don't draw a tree for the new row\n      treeGrid = self.childGrids[rowOrderIndex];\n      if (rowOrderIndex !== viewData.length && rowOpen) {\n        treeGrid.visible = true;\n        treeGrid.parentNode = {\n          offsetTop: y + rowSansTreeHeight + self.canvasOffsetTop,\n          offsetLeft: rowHeaderCellWidth - 1 + self.canvasOffsetLeft,\n          offsetHeight: treeHeight,\n          offsetWidth:\n            self.width - rowHeaderCellWidth - self.style.scrollBarWidth - 1,\n          offsetParent: self.intf.parentNode,\n          parentNode: self.intf.parentNode,\n          style: self.style,\n          nodeType: 'canvas-datagrid-tree',\n          scrollTop: self.scrollBox.scrollTop,\n          scrollLeft: self.scrollBox.scrollLeft,\n          rowIndex: rowOrderIndex,\n        };\n        self.visibleCells.unshift({\n          rowIndex: rowOrderIndex,\n          columnIndex: 0,\n          y: treeGrid.parentNode.offsetTop,\n          x: treeGrid.parentNode.offsetLeft,\n          height: treeGrid.height,\n          width: treeGrid.width,\n          style: 'tree-grid',\n          type: treeGrid.parentNode.nodeType,\n        });\n        treeGrid.draw();\n      } else if (treeGrid) {\n        treeGrid.parentNode.offsetHeight = 0;\n        delete self.sizes.trees[rowOrderIndex];\n      }\n      rowHeaders.push([rowData, rowOrderIndex, rowIndex, y, rowHeight]);\n      self.visibleRowHeights[rowOrderIndex] = rowHeight;\n      y += cellHeight + (bc ? 0 : self.style.cellBorderWidth);\n      return true;\n    }\n    function initDraw() {\n      self.visibleRows = [];\n      schema = self.getSchema();\n      self.visibleCells = [];\n      self.canvasOffsetTop = self.isChildGrid ? self.parentNode.offsetTop : 0.5;\n      self.canvasOffsetLeft = self.isChildGrid\n        ? self.parentNode.offsetLeft\n        : -0.5;\n      h = self.height;\n      w = self.width;\n    }\n    function drawBackground() {\n      radiusRect(0, 0, w, h, 0);\n      self.ctx.clip();\n      self.ctx.fillStyle = self.style.gridBackgroundColor;\n      fillRect(0, 0, w, h);\n    }\n    function drawFrozenRows() {\n      var rowOrderIndex,\n        ln = Math.min(viewData.length, self.frozenRow);\n      x =\n        -self.scrollBox.scrollLeft +\n        self.scrollPixelLeft +\n        self.style.cellBorderWidth;\n      y = columnHeaderCellHeight;\n      for (rowIndex = 0; rowIndex < ln; rowIndex += 1) {\n        rowOrderIndex = self.orders.rows[rowIndex];\n        if (!drawRow(rowOrderIndex, rowIndex)) {\n          break;\n        }\n      }\n      if (self.attributes.allowFreezingRows) {\n        // HACK great, another stupid magic number.\n        // Background will appear as a 0.5px artifact behind the row freeze bar without this hack\n        y +=\n          self.style.frozenMarkerBorderWidth +\n          self.style.frozenMarkerWidth -\n          0.4999999999;\n      }\n      self.lastFrozenRowPixel = y;\n    }\n    function drawRows() {\n      self.ctx.save();\n      if (self.frozenRow > 0) {\n        radiusRect(\n          0,\n          self.lastFrozenRowPixel,\n          self.width,\n          self.height - self.lastFrozenRowPixel,\n          0,\n        );\n        self.ctx.clip();\n      }\n      var columnOrderIndex,\n        rowOrderIndex,\n        headerIndex,\n        g = schema.length;\n      x =\n        -self.scrollBox.scrollLeft +\n        self.scrollPixelLeft +\n        self.style.cellBorderWidth;\n      if (!self.attributes.snapToRow) {\n        y +=\n          -self.scrollBox.scrollTop +\n          self.scrollPixelTop +\n          self.style.cellBorderWidth;\n      }\n      for (\n        rowIndex = self.frozenRow + self.scrollIndexTop;\n        rowIndex < l;\n        rowIndex += 1\n      ) {\n        rowOrderIndex = self.orders.rows[rowIndex];\n        self.scrollIndexBottom = rowIndex;\n        self.scrollPixelBottom = y;\n        if (!drawRow(rowOrderIndex, rowIndex)) {\n          break;\n        }\n      }\n      if (self.attributes.showNewRow) {\n        if (self.attributes.showRowHeaders) {\n          x += rowHeaderCellWidth;\n        }\n        rowHeight = cellHeight = self.style.cellHeight;\n        rowOpen = false;\n        for (\n          columnOrderIndex = self.scrollIndexLeft;\n          columnOrderIndex < g;\n          columnOrderIndex += 1\n        ) {\n          headerIndex = self.orders.columns[columnOrderIndex];\n          x += drawCell(self.newRow, viewData.length, viewData.length)(\n            schema[headerIndex],\n            headerIndex,\n            columnOrderIndex,\n          );\n          if (x > self.width + self.scrollBox.scrollLeft) {\n            break;\n          }\n        }\n        rowHeaders.push([\n          self.newRow,\n          viewData.length,\n          viewData.length,\n          y,\n          rowHeight,\n        ]);\n      }\n      self.ctx.restore();\n    }\n    function drawMoveMarkers() {\n      if (!self.movingSelection) {\n        return;\n      }\n      self.ctx.lineWidth = self.style.moveOverlayBorderWidth;\n      self.ctx.strokeStyle = self.style.moveOverlayBorderColor;\n      self.ctx.setLineDash(self.style.moveOverlayBorderSegments);\n      moveBorders.forEach(function (c) {\n        addBorderLine(c[0], c[1]);\n      });\n      self.ctx.setLineDash([]);\n    }\n    function drawReorderMarkers() {\n      if (!self.reorderObject) {\n        return;\n      }\n      var b = {\n          height: self.reorderObject.height,\n          width: self.reorderObject.width,\n          x: self.reorderObject.x + self.reorderObject.dragOffset.x,\n          y: self.reorderObject.y + self.reorderObject.dragOffset.y,\n        },\n        m = {\n          width: w,\n          height: h,\n          x: 0,\n          y: 0,\n        };\n      self.ctx.fillStyle = self.style.reorderMarkerBackgroundColor;\n      self.ctx.lineWidth = self.style.reorderMarkerBorderWidth;\n      self.ctx.strokeStyle = self.style.reorderMarkerBorderColor;\n      if (self.dragMode === 'row-reorder') {\n        b.width = w;\n        b.x = 0;\n        m.width = w;\n        m.height = self.currentCell.height;\n        m.y = self.currentCell.y;\n        fillRect(b.x, b.y, b.width, b.height);\n        strokeRect(b.x, b.y, b.width, b.height);\n        self.ctx.lineWidth = self.style.reorderMarkerIndexBorderWidth;\n        self.ctx.strokeStyle = self.style.reorderMarkerIndexBorderColor;\n        if (\n          self.currentCell.rowIndex !== self.reorderObject.rowIndex &&\n          self.currentCell.rowIndex > -1 &&\n          self.currentCell.rowIndex < l\n        ) {\n          addBorderLine(\n            m,\n            self.reorderTarget.sortRowIndex > self.reorderObject.sortRowIndex\n              ? 'b'\n              : 't',\n          );\n        }\n      } else if (self.dragMode === 'column-reorder' && self.reorderObject) {\n        b.height = h;\n        b.y = 0;\n        m.height = h;\n        m.width = self.currentCell.width;\n        m.y = 0;\n        m.x = self.currentCell.x;\n        fillRect(b.x, b.y, b.width, b.height);\n        strokeRect(b.x, b.y, b.width, b.height);\n        self.ctx.lineWidth = self.style.reorderMarkerIndexBorderWidth;\n        self.ctx.strokeStyle = self.style.reorderMarkerIndexBorderColor;\n        if (\n          self.currentCell.sortColumnIndex !==\n            self.reorderObject.sortColumnIndex &&\n          self.currentCell.sortColumnIndex > -1 &&\n          self.currentCell.sortColumnIndex < schema.length\n        ) {\n          addBorderLine(\n            m,\n            self.reorderTarget.columnIndex > self.reorderObject.columnIndex\n              ? 'r'\n              : 'l',\n          );\n        }\n      }\n    }\n    function drawBorder() {\n      self.ctx.lineWidth = self.style.gridBorderWidth;\n      self.ctx.strokeStyle = self.style.gridBorderColor;\n      strokeRect(0, 0, self.width, self.height);\n    }\n    function drawSelectionBorders() {\n      self.ctx.lineWidth = self.style.selectionOverlayBorderWidth;\n      self.ctx.strokeStyle = self.style.selectionOverlayBorderColor;\n      function dsb(c) {\n        addBorderLine(c[0], c[1]);\n      }\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex < self.frozenRow &&\n            c[0].columnIndex < self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.save();\n      clipFrozenArea(0);\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex >= self.frozenRow &&\n            c[0].columnIndex >= self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.restore();\n      self.ctx.save();\n      clipFrozenArea(1);\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex >= self.frozenRow &&\n            c[0].columnIndex < self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.restore();\n      self.ctx.save();\n      clipFrozenArea(2);\n      selectionBorders\n        .filter(function (c) {\n          return (\n            c[0].rowIndex < self.frozenRow &&\n            c[0].columnIndex >= self.frozenColumn\n          );\n        })\n        .forEach(dsb);\n      self.ctx.restore();\n    }\n    function drawSelectionHandles() {\n      if (self.mobile || self.attributes.allowMovingSelection) {\n        self.ctx.lineWidth = self.style.selectionHandleBorderWidth;\n        self.ctx.strokeStyle = self.style.selectionHandleBorderColor;\n        self.ctx.fillStyle = self.style.selectionHandleColor;\n        selectionHandles.forEach(function (c) {\n          addselectionHandle(c[0], c[1]);\n          var az = self.attributes.touchSelectHandleZone / 2,\n            ax =\n              c[0].x + (c[1] === 'tl' || c[1] === 'bl' ? 0 : c[0].width) - az,\n            ay =\n              c[0].y + (c[1] === 'bl' || c[1] === 'br' ? c[0].height : 0) - az;\n          self.visibleCells.unshift({\n            x: ax,\n            y: ay,\n            height: self.style.selectionHandleSize + az,\n            width: self.style.selectionHandleSize + az,\n            style: 'selection-handle-' + c[1],\n          });\n        });\n      }\n    }\n    function drawActiveCell() {\n      if (!aCell) {\n        return;\n      }\n      self.ctx.save();\n      var cl =\n          self.activeCell.columnIndex + 1 > self.frozenColumn ||\n          self.activeCell.rowIndex + 1 > self.frozenRow,\n        acx = cl ? self.lastFrozenColumnPixel : 0,\n        acy = cl ? self.lastFrozenRowPixel : 0,\n        acw = cl ? self.width - self.lastFrozenColumnPixel : self.width,\n        ach = cl ? self.height - self.lastFrozenRowPixel : self.height;\n      radiusRect(acx, acy, acw, ach, 0);\n      self.ctx.clip();\n      if (self.attributes.selectionMode === 'row') {\n        if (self.activeCell && self.activeCell.rowIndex === aCell.rowIndex) {\n          self.ctx.lineWidth = self.style.activeCellOverlayBorderWidth;\n          self.ctx.strokeStyle = self.style.activeCellOverlayBorderColor;\n          strokeRect(\n            1,\n            aCell.y,\n            self.getHeaderWidth() + rowHeaderCellWidth,\n            self.visibleRowHeights[aCell.rowIndex],\n          );\n        }\n      } else {\n        self.ctx.lineWidth = self.style.activeCellOverlayBorderWidth;\n        self.ctx.strokeStyle = self.style.activeCellOverlayBorderColor;\n        strokeRect(aCell.x, aCell.y, aCell.width, aCell.height);\n      }\n      self.ctx.restore();\n    }\n    function drawFrozenMarkers() {\n      var my = self.lastFrozenRowPixel - self.style.frozenMarkerWidth,\n        mx = self.lastFrozenColumnPixel - self.style.frozenMarkerBorderWidth,\n        xHover =\n          self.currentCell && self.currentCell.style === 'frozen-row-marker',\n        yHover =\n          self.currentCell && self.currentCell.style === 'frozen-column-marker';\n      self.ctx.lineWidth = self.style.frozenMarkerBorderWidth;\n      if (self.attributes.allowFreezingColumns) {\n        self.ctx.fillStyle = yHover\n          ? self.style.frozenMarkerHoverColor\n          : self.style.frozenMarkerColor;\n        self.ctx.strokeStyle = yHover\n          ? self.style.frozenMarkerHoverBorderColor\n          : self.style.frozenMarkerBorderColor;\n        fillRect(mx, 0, self.style.frozenMarkerWidth, self.height);\n        strokeRect(mx, 0, self.style.frozenMarkerWidth, self.height);\n        self.visibleCells.unshift({\n          x: mx,\n          y: 0,\n          height: self.height,\n          width:\n            self.style.frozenMarkerWidth + self.style.frozenMarkerBorderWidth,\n          style: 'frozen-column-marker',\n        });\n      }\n      if (self.attributes.allowFreezingRows) {\n        self.ctx.fillStyle = xHover\n          ? self.style.frozenMarkerHoverColor\n          : self.style.frozenMarkerColor;\n        self.ctx.strokeStyle = xHover\n          ? self.style.frozenMarkerHoverBorderColor\n          : self.style.frozenMarkerBorderColor;\n        fillRect(0, my, self.width, self.style.frozenMarkerWidth);\n        strokeRect(0, my, self.width, self.style.frozenMarkerWidth);\n        self.visibleCells.unshift({\n          x: 0,\n          y: my,\n          height:\n            self.style.frozenMarkerWidth + self.style.frozenMarkerBorderWidth,\n          width: self.width,\n          style: 'frozen-row-marker',\n        });\n      }\n      if (self.freezeMarkerPosition) {\n        self.ctx.fillStyle = self.style.frozenMarkerActiveColor;\n        self.ctx.strokeStyle = self.style.frozenMarkerActiveBorderColor;\n        if (self.dragMode === 'frozen-column-marker') {\n          fillRect(\n            self.freezeMarkerPosition.x,\n            0,\n            self.style.frozenMarkerWidth,\n            self.height,\n          );\n          strokeRect(\n            self.freezeMarkerPosition.x,\n            0,\n            self.style.frozenMarkerWidth,\n            self.height,\n          );\n        } else {\n          fillRect(\n            0,\n            self.freezeMarkerPosition.y,\n            self.width,\n            self.style.frozenMarkerWidth,\n          );\n          strokeRect(\n            0,\n            self.freezeMarkerPosition.y,\n            self.width,\n            self.style.frozenMarkerWidth,\n          );\n        }\n      }\n    }\n    function drawPerfLines() {\n      if (!self.attributes.showPerformance) {\n        return;\n      }\n      var pw = 250,\n        px =\n          self.width -\n          pw -\n          self.style.scrollBarWidth -\n          self.style.scrollBarBorderWidth * 2,\n        py = columnHeaderCellHeight,\n        ph = 100;\n      if (scrollDebugCounters.length === 0) {\n        scrollDebugCounters = fillArray(0, perfWindowSize, 1, function () {\n          return [0, 0];\n        });\n      }\n      if (touchPPSCounters.length === 0) {\n        touchPPSCounters = fillArray(0, perfWindowSize, 1, function () {\n          return [0, 0];\n        });\n      }\n      if (entityCount.length === 0) {\n        entityCount = fillArray(0, perfWindowSize, 1, 0);\n      }\n      self.ctx.lineWidth = 0.5;\n      function dpl(name, perfArr, arrIndex, max, color, useAbs, rowIndex) {\n        var v;\n        drawPerfLine(pw, ph, px, py, perfArr, arrIndex, max, color, useAbs);\n        self.ctx.fillStyle = color;\n        fillRect(3 + px, py + 9 + rowIndex * 11, 8, 8);\n        self.ctx.fillStyle = self.style.debugPerfChartTextColor;\n        v = arrIndex !== undefined ? perfArr[0][arrIndex] : perfArr[0];\n        fillText(\n          name + ' ' + (isNaN(v) ? 0 : v).toFixed(3),\n          14 + px,\n          py + 16 + rowIndex * 11,\n        );\n      }\n      self.ctx.textAlign = 'left';\n      self.ctx.font = self.style.debugFont;\n      self.ctx.fillStyle = self.style.debugPerfChartBackground;\n      fillRect(px, py, pw, ph);\n      [\n        [\n          'Scroll Height',\n          scrollDebugCounters,\n          0,\n          self.scrollBox.scrollHeight,\n          self.style.debugScrollHeightColor,\n          false,\n        ],\n        [\n          'Scroll Width',\n          scrollDebugCounters,\n          1,\n          self.scrollBox.scrollWidth,\n          self.style.debugScrollWidthColor,\n          false,\n        ],\n        [\n          'Performance',\n          perfCounters,\n          undefined,\n          200,\n          self.style.debugPerformanceColor,\n          false,\n        ],\n        [\n          'Entities',\n          entityCount,\n          undefined,\n          1500,\n          self.style.debugEntitiesColor,\n          false,\n        ],\n        [\n          'TouchPPSX',\n          touchPPSCounters,\n          0,\n          1000,\n          self.style.debugTouchPPSXColor,\n          true,\n        ],\n        [\n          'TouchPPSY',\n          touchPPSCounters,\n          1,\n          1000,\n          self.style.debugTouchPPSYColor,\n          true,\n        ],\n      ].forEach(function (i, index) {\n        i.push(index);\n        dpl.apply(null, i);\n      });\n      self.ctx.fillStyle = self.style.debugPerfChartBackground;\n      entityCount.pop();\n      entityCount.unshift(self.visibleCells.length);\n      scrollDebugCounters.pop();\n      scrollDebugCounters.unshift([\n        self.scrollBox.scrollTop,\n        self.scrollBox.scrollLeft,\n      ]);\n      touchPPSCounters.pop();\n      touchPPSCounters.unshift([self.yPPS, self.xPPS]);\n    }\n    function drawDebug() {\n      self.ctx.save();\n      var d;\n      if (self.attributes.showPerformance || self.attributes.debug) {\n        if (perfCounters.length === 0) {\n          perfCounters = fillArray(0, perfWindowSize, 1, 0);\n        }\n        perfCounters.pop();\n        perfCounters.unshift(performance.now() - p);\n      }\n      if (!self.attributes.debug) {\n        self.ctx.restore();\n        return;\n      }\n      self.ctx.font = self.style.debugFont;\n      d = {};\n      d.perf = (\n        perfCounters.reduce(function (a, b) {\n          return a + b;\n        }, 0) / Math.min(drawCount, perfCounters.length)\n      ).toFixed(1);\n      d.perfDelta = perfCounters[0].toFixed(1);\n      d.frozenColumnsWidth = getFrozenColumnsWidth();\n      d.htmlImages = Object.keys(self.htmlImageCache).length;\n      d.reorderObject =\n        'x: ' +\n        (self.reorderObject || { columnIndex: 0 }).columnIndex +\n        ', y: ' +\n        (self.reorderObject || { rowIndex: 0 }).rowIndex;\n      d.reorderTarget =\n        'x: ' +\n        (self.reorderTarget || { columnIndex: 0 }).columnIndex +\n        ', y: ' +\n        (self.reorderTarget || { rowIndex: 0 }).rowIndex;\n      d.scale = self.scale;\n      d.startScale = self.startScale;\n      d.scaleDelta = self.scaleDelta;\n      d.zoomDeltaStart = self.zoomDeltaStart;\n      d.touchLength = self.touchLength;\n      d.touches =\n        'y0: ' +\n        (self.touchPosition || { y: 0 }).y +\n        ' y1: ' +\n        (self.touchPosition1 || { y: 0 }).y;\n      d.scrollBox = self.scrollBox.toString();\n      d.scrollIndex =\n        'x: ' + self.scrollIndexLeft + ', y: ' + self.scrollIndexTop;\n      d.scrollPixel =\n        'x: ' + self.scrollPixelLeft + ', y: ' + self.scrollPixelTop;\n      d.canvasOffset =\n        'x: ' + self.canvasOffsetLeft + ', y: ' + self.canvasOffsetTop;\n      d.touchDelta = 'x: ' + self.touchDelta.x + ', y: ' + self.touchDelta.y;\n      d.touchAnimateTo =\n        'x: ' + self.touchAnimateTo.x + ', y: ' + self.touchAnimateTo.y;\n      d.scrollAnimation =\n        'x: ' + self.scrollAnimation.x + ', y: ' + self.scrollAnimation.y;\n      d.touchPPS = 'x: ' + self.xPPS + ', y: ' + self.yPPS;\n      d.touchPPST = 'x: ' + self.xPPST + ', y: ' + self.yPPST;\n      d.touchDuration = self.touchDuration;\n      d.pointerLockPosition = self.pointerLockPosition\n        ? self.pointerLockPosition.x + ', ' + self.pointerLockPosition.y\n        : '';\n      d.size = 'w: ' + self.width + ', h: ' + self.height;\n      d.mouse = 'x: ' + self.mouse.x + ', y: ' + self.mouse.y;\n      d.touch = !self.touchStart\n        ? ''\n        : 'x: ' + self.touchStart.x + ', y: ' + self.touchStart.y;\n      d.entities = self.visibleCells.length;\n      d.hasFocus = self.hasFocus;\n      d.dragMode = self.dragMode;\n      if (self.currentCell) {\n        d.columnIndex = self.currentCell.columnIndex;\n        d.rowIndex = self.currentCell.rowIndex;\n        d.sortColumnIndex = self.currentCell.sortColumnIndex;\n        d.sortRowIndex = self.currentCell.sortRowIndex;\n        d.context = self.currentCell.context;\n        d.dragContext = self.currentCell.dragContext;\n        d.style = self.currentCell.style;\n        d.type = self.currentCell.type;\n      }\n      self.ctx.textAlign = 'right';\n      self.ctx.fillStyle = self.style.debugBackgroundColor;\n      fillRect(0, 0, self.width, self.height);\n      Object.keys(d).forEach(function (key, index) {\n        var m = key + ': ' + d[key],\n          lh = 14;\n        self.ctx.fillStyle = self.style.debugColor;\n        fillText(\n          m,\n          w - 20,\n          (self.attributes.showPerformance ? 140 : 24) + index * lh,\n        );\n      });\n      self.ctx.restore();\n    }\n    self.ctx.save();\n    initDraw();\n    drawBackground();\n    drawFrozenRows();\n    drawRows();\n    drawActiveCell();\n    drawHeaders();\n    drawFrozenMarkers();\n    drawSelectionHandles();\n    drawReorderMarkers();\n    drawMoveMarkers();\n    drawBorder();\n    drawSelectionBorders();\n    drawScrollBars();\n    if (checkScrollHeight) {\n      self.resize(true);\n    }\n    drawDebug();\n    drawPerfLines();\n    if (self.dispatchEvent('afterdraw', {})) {\n      return;\n    }\n    self.ctx.restore();\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true, plusplus: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nimport isPrintableKeyEvent from 'is-printable-key-event';\n\nexport default function (self) {\n  var wheeling;\n  self.stopPropagation = function (e) {\n    e.stopPropagation();\n  };\n  /**\n   * Adds an event listener to the given event.\n   * @memberof canvasDatagrid\n   * @name addEventListener\n   * @method\n   * @param {string} ev The name of the event to subscribe to.\n   * @param {function} fn The event procedure to execute when the event is raised.\n   */\n  self.addEventListener = function (ev, fn) {\n    self.events[ev] = self.events[ev] || [];\n    self.events[ev].unshift(fn);\n  };\n  /**\n   * Removes the given listener function from the given event.  Must be an actual reference to the function that was bound.\n   * @memberof canvasDatagrid\n   * @name removeEventListener\n   * @method\n   * @param {string} ev The name of the event to unsubscribe from.\n   * @param {function} fn The event procedure to execute when the event is raised.\n   */\n  self.removeEventListener = function (ev, fn) {\n    (self.events[ev] || []).forEach(function removeEachListener(sfn, idx) {\n      if (fn === sfn) {\n        self.events[ev].splice(idx, 1);\n      }\n    });\n  };\n  /**\n   * Fires the given event, passing an event object to the event subscribers.\n   * @memberof canvasDatagrid\n   * @name dispatchEvent\n   * @method\n   * @param {number} ev The name of the event to dispatch.\n   * @param {number} e The event object.\n   */\n  self.dispatchEvent = function (ev, e) {\n    e = ev.type ? ev : e || {};\n    ev = ev.type || ev;\n    var defaultPrevented;\n    function preventDefault() {\n      defaultPrevented = true;\n    }\n    if (!self.events[ev]) {\n      return;\n    }\n    self.events[ev].forEach(function dispatchEachEvent(fn) {\n      e.ctx = self.ctx;\n      e.preventDefault = preventDefault;\n      fn.apply(self.intf, [e]);\n    });\n    return defaultPrevented;\n  };\n  self.getRatio = function () {\n    return Math.min(\n      self.attributes.maxPixelRatio,\n      (window.devicePixelRatio || 1) /\n        (self.ctx.webkitBackingStorePixelRatio ||\n          self.ctx.mozBackingStorePixelRatio ||\n          self.ctx.msBackingStorePixelRatio ||\n          self.ctx.oBackingStorePixelRatio ||\n          self.ctx.backingStorePixelRatio ||\n          1),\n    );\n  };\n  self.resize = function (drawAfterResize) {\n    if (!self.canvas) {\n      return;\n    }\n    var x,\n      v = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'vertical-scroll-bar',\n      },\n      n = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'horizontal-scroll-bar',\n      },\n      vb = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'vertical-scroll-box',\n      },\n      nb = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        style: 'horizontal-scroll-box',\n      },\n      co = {\n        x: 0,\n        y: 0,\n        height: 0,\n        width: 0,\n        isCorner: true,\n        isScrollBoxCorner: true,\n        style: 'scroll-box-corner',\n      },\n      m = self.style.scrollBarBoxMargin * 2,\n      b = self.style.scrollBarBorderWidth * 2,\n      d = self.style.scrollBarBoxMargin * 0.5,\n      sbw = self.style.scrollBarWidth + self.style.scrollBarBorderWidth * 2,\n      ratio = self.getRatio(),\n      bm = self.style.gridBorderCollapse === 'collapse' ? 1 : 2,\n      cellBorder = self.style.cellBorderWidth * bm,\n      columnHeaderCellBorder = self.style.columnHeaderCellBorderWidth * bm,\n      dataHeight = 0,\n      dataWidth = 0,\n      dims,\n      l = (self.viewData || []).length,\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\n      ch = self.style.cellHeight,\n      s = self.getSchema();\n    // sets actual DOM canvas element\n    function checkScrollBoxVisibility() {\n      self.scrollBox.horizontalBarVisible =\n        (self.style.width !== 'auto' &&\n          dataWidth > self.scrollBox.width &&\n          self.style.overflowX !== 'hidden') ||\n        self.style.overflowX === 'scroll';\n      self.scrollBox.horizontalBoxVisible = dataWidth > self.scrollBox.width;\n      self.scrollBox.verticalBarVisible =\n        (self.style.height !== 'auto' &&\n          dataHeight > self.scrollBox.height &&\n          self.style.overflowY !== 'hidden') ||\n        self.style.overflowY === 'scroll';\n      self.scrollBox.verticalBoxVisible = dataHeight > self.scrollBox.height;\n    }\n    function setScrollBoxSize() {\n      self.scrollBox.width = self.width - rowHeaderCellWidth;\n      self.scrollBox.height = self.height - columnHeaderCellHeight;\n    }\n    function setCanvasSize() {\n      if (self.isChildGrid) {\n        return;\n      }\n      dims = {\n        // HACK +1 ? maybe it's a magic cell border?  Required to line up properly in auto height mode.\n        height: columnHeaderCellHeight + dataHeight + cellBorder + 1,\n        width: dataWidth + rowHeaderCellWidth + cellBorder,\n      };\n      ['width', 'height'].forEach(function (dim) {\n        //TODO: support inherit\n        if (\n          ['auto', undefined].indexOf(self.style[dim]) !== -1 &&\n          ['auto', undefined].indexOf(self.appliedInlineStyles[dim]) !== -1\n        ) {\n          self.parentNodeStyle[dim] = dims[dim] + 'px';\n        } else if (\n          ['auto', undefined].indexOf(self.style[dim]) == -1 &&\n          ['auto', undefined].indexOf(self.appliedInlineStyles[dim]) == -1\n        ) {\n          self.parentNodeStyle[dim] = self.style[dim];\n          if (self.isComponent) {\n            self.canvas.style[dim] = self.style[dim];\n          }\n        }\n      });\n    }\n    self.scrollCache.x = [];\n    self.scrollCache.y = [];\n    for (x = 0; x < l; x += 1) {\n      self.scrollCache.y[x] = dataHeight;\n      dataHeight +=\n        ((self.sizes.rows[x] || ch) + (self.sizes.trees[x] || 0)) * self.scale +\n        // HACK? if an expanded tree row is frozen it is necessary to add the tree row's height a second time.\n        (self.frozenRow > x ? self.sizes.trees[x] || 0 : 0);\n    }\n    if (l > 1) {\n      self.scrollCache.y[x] = dataHeight;\n    }\n    dataWidth =\n      s.reduce(function reduceSchema(accumulator, column, columnIndex) {\n        // intentional redefintion of column.  This causes scrollCache to be in the correct order\n        column = s[self.orders.columns[columnIndex]];\n        if (column.hidden) {\n          self.scrollCache.x[columnIndex] = accumulator;\n          return accumulator;\n        }\n        var va =\n          accumulator + self.getColummnWidth(self.orders.columns[columnIndex]);\n        self.scrollCache.x[columnIndex] = va;\n        return va;\n      }, 0) || 0;\n    if (self.attributes.showNewRow) {\n      dataHeight += ch;\n    }\n    if (self.attributes.snapToRow) {\n      dataHeight += self.style.cellHeight;\n    }\n    setCanvasSize();\n    if (self.isChildGrid) {\n      self.width = self.parentNode.offsetWidth;\n      self.height = self.parentNode.offsetHeight;\n    } else if (\n      self.height !== self.canvas.offsetHeight ||\n      self.width !== self.canvas.offsetWidth\n    ) {\n      self.height = self.canvas.offsetHeight;\n      self.width = self.canvas.offsetWidth;\n      self.canvasOffsetLeft = self.args.canvasOffsetLeft || 0;\n      self.canvasOffsetTop = self.args.canvasOffsetTop || 0;\n    }\n    /// calculate scroll bar dimensions\n    // non-controversial\n    self.scrollBox.top = columnHeaderCellHeight + columnHeaderCellBorder;\n    self.scrollBox.left = rowHeaderCellWidth;\n    // width and height of scroll box\n    setScrollBoxSize();\n    // is the data larger than the scroll box\n    checkScrollBoxVisibility();\n    // if the scroll box is visible, make room for it by expanding the size of the element\n    // if the other dimension is set to auto\n    if (self.scrollBox.horizontalBarVisible) {\n      if (self.style.height === 'auto' && !self.isChildGrid) {\n        self.height += sbw;\n      }\n      dataHeight += sbw;\n      setCanvasSize();\n      setScrollBoxSize();\n      checkScrollBoxVisibility();\n    }\n    if (self.scrollBox.verticalBarVisible) {\n      if (self.style.width === 'auto' && !self.isChildGrid) {\n        self.width += sbw;\n      }\n      dataWidth += sbw;\n      setCanvasSize();\n      setScrollBoxSize();\n      checkScrollBoxVisibility();\n    }\n    // set again after bar visibility checks\n    setScrollBoxSize();\n    self.scrollBox.scrollWidth = dataWidth - self.scrollBox.width;\n    self.scrollBox.scrollHeight = dataHeight - self.scrollBox.height;\n    self.scrollBox.widthBoxRatio = self.scrollBox.width / dataWidth;\n    self.scrollBox.scrollBoxWidth =\n      self.scrollBox.width * self.scrollBox.widthBoxRatio -\n      self.style.scrollBarWidth -\n      b -\n      d;\n    // TODO: This heightBoxRatio number is terribly wrong.\n    // They should be a result of the size of the grid/canvas?\n    // it being off causes the scroll bar to \"slide\" under\n    // the dragged mouse.\n    // https://github.com/TonyGermaneri/canvas-datagrid/issues/97\n    self.scrollBox.heightBoxRatio =\n      (self.scrollBox.height - columnHeaderCellHeight) / dataHeight;\n    self.scrollBox.scrollBoxHeight =\n      self.scrollBox.height * self.scrollBox.heightBoxRatio -\n      self.style.scrollBarWidth -\n      b -\n      d;\n    self.scrollBox.scrollBoxWidth = Math.max(\n      self.scrollBox.scrollBoxWidth,\n      self.style.scrollBarBoxMinSize,\n    );\n    self.scrollBox.scrollBoxHeight = Math.max(\n      self.scrollBox.scrollBoxHeight,\n      self.style.scrollBarBoxMinSize,\n    );\n    // horizontal\n    n.x += rowHeaderCellWidth;\n    n.y += self.height - self.style.scrollBarWidth - d;\n    n.width =\n      self.width - self.style.scrollBarWidth - rowHeaderCellWidth - d - m;\n    n.height = self.style.scrollBarWidth + self.style.scrollBarBorderWidth + d;\n    // horizontal box\n    nb.y = n.y + self.style.scrollBarBoxMargin;\n    nb.width = self.scrollBox.scrollBoxWidth;\n    nb.height = self.style.scrollBarBoxWidth;\n    // vertical\n    v.x +=\n      self.width -\n      self.style.scrollBarWidth -\n      self.style.scrollBarBorderWidth -\n      d;\n    v.y += columnHeaderCellHeight;\n    v.width = self.style.scrollBarWidth + self.style.scrollBarBorderWidth + d;\n    v.height =\n      self.height - columnHeaderCellHeight - self.style.scrollBarWidth - d - m;\n    // vertical box\n    vb.x = v.x + self.style.scrollBarBoxMargin;\n    vb.width = self.style.scrollBarBoxWidth;\n    vb.height = self.scrollBox.scrollBoxHeight;\n    // corner\n    co.x = n.x + n.width + m;\n    co.y = v.y + v.height + m;\n    co.width = self.style.scrollBarWidth + self.style.scrollBarBorderWidth;\n    co.height = self.style.scrollBarWidth + self.style.scrollBarBorderWidth;\n    self.scrollBox.entities = {\n      horizontalBar: n,\n      horizontalBox: nb,\n      verticalBar: v,\n      verticalBox: vb,\n      corner: co,\n    };\n    self.scrollBox.bar = {\n      v: v,\n      h: n,\n    };\n    self.scrollBox.box = {\n      v: vb,\n      h: nb,\n    };\n    /// calculate page and dom elements\n    self.page = Math.max(\n      1,\n      self.visibleRows.length - 3 - self.attributes.pageUpDownOverlap,\n    );\n    // set canvas drawing related items\n    if (!self.isChildGrid) {\n      self.canvas.width = self.width * ratio;\n      self.canvas.height = self.height * ratio;\n      self.ctx.scale(ratio, ratio);\n    }\n    // resize any open dom elements (input/textarea)\n    self.resizeEditInput();\n    self.scroll(true);\n    if (drawAfterResize) {\n      self.draw(true);\n    }\n    self.dispatchEvent('resize', {});\n    return true;\n  };\n  self.scroll = function (dontDraw) {\n    var s = self.getSchema(),\n      l = (self.viewData || []).length,\n      ch = self.style.cellHeight;\n    // go too far in leaps, then get focused\n    self.scrollIndexTop = Math.floor(\n      l * (self.scrollBox.scrollTop / self.scrollBox.scrollHeight) - 100,\n    );\n    self.scrollIndexTop = Math.max(self.scrollIndexTop, 0);\n    self.scrollPixelTop = self.scrollCache.y[self.scrollIndexTop];\n    // sometimes the grid is rendered but the height is zero\n    if (self.scrollBox.scrollHeight === 0) {\n      self.scrollIndexTop = 0;\n    }\n    self.scrollPixelTop = 0;\n    self.scrollIndexLeft = self.frozenColumn;\n    self.scrollPixelLeft = 0;\n    while (\n      self.scrollPixelTop < self.scrollBox.scrollTop &&\n      self.scrollIndexTop < self.viewData.length\n    ) {\n      // start on index +1 since index 0 was used in \"go too far\" section above\n      self.scrollIndexTop += 1;\n      self.scrollPixelTop = self.scrollCache.y[self.scrollIndexTop];\n    }\n    while (\n      self.scrollPixelLeft < self.scrollBox.scrollLeft + 1 &&\n      self.scrollIndexLeft < s.length\n    ) {\n      self.scrollPixelLeft = self.scrollCache.x[self.scrollIndexLeft];\n      self.scrollIndexLeft += 1;\n    }\n    if (s.length > 0) {\n      self.scrollIndexLeft = Math.max(self.scrollIndexLeft - 1, 0);\n      self.scrollPixelLeft -= self.getColummnWidth(\n        self.orders.columns[self.scrollIndexLeft],\n      );\n    }\n    if ((self.viewData || []).length > 0) {\n      self.scrollIndexTop = Math.max(self.scrollIndexTop - 1, 0);\n      self.scrollPixelTop = Math.max(\n        self.scrollPixelTop -\n          (self.viewData[self.scrollIndexTop]\n            ? (self.sizes.rows[self.scrollIndexTop] || ch) +\n              (self.sizes.trees[self.scrollIndexTop] || 0)\n            : ch) *\n            self.scale,\n        0,\n      );\n    }\n    self.ellipsisCache = {};\n    if (!dontDraw) {\n      self.draw(true);\n    }\n    //TODO: figure out why this has to be delayed for child grids\n    //BUG: wheeling event on 3rd level hierarchy fails to move input box\n    requestAnimationFrame(self.resizeEditInput);\n    self.dispatchEvent('scroll', {\n      top: self.scrollBox.scrollTop,\n      left: self.scrollBox.scrollLeft,\n    });\n  };\n  self.mousemove = function (e, overridePos) {\n    if (self.contextMenu || self.input) {\n      return;\n    }\n    self.mouse = overridePos || self.getLayerPos(e);\n    var ctrl =\n        (e.ctrlKey || e.metaKey || self.attributes.persistantSelectionMode) &&\n        !self.attributes.singleSelectionMode,\n      i,\n      s = self.getSchema(),\n      dragBounds,\n      sBounds,\n      x = self.mouse.x,\n      y = self.mouse.y,\n      o = self.getCellAt(x, y),\n      delta,\n      ev = { NativeEvent: e, cell: o, x: x, y: y },\n      previousCell = self.currentCell;\n    clearTimeout(self.scrollTimer);\n    if (!self.isInGrid({ x: x, y: y })) {\n      self.hasFocus = false;\n    }\n    if (self.dispatchEvent('mousemove', ev)) {\n      return;\n    }\n    if (o && self.currentCell) {\n      self.rowBoundaryCrossed = self.currentCell.rowIndex !== o.rowIndex;\n      self.columnBoundaryCrossed =\n        self.currentCell.columnIndex !== o.columnIndex;\n      self.cellBoundaryCrossed =\n        self.rowBoundaryCrossed || self.columnBoundaryCrossed;\n      ['row', 'column', 'cell'].forEach(function (prefix) {\n        if (self[prefix + 'BoundaryCrossed']) {\n          ev.cell = previousCell;\n          self.dispatchEvent(prefix + 'mouseout', ev);\n          ev.cell = o;\n          self.dispatchEvent(prefix + 'mouseover', ev);\n        }\n      });\n    }\n    self.currentCell = o;\n    if (!self.hasFocus) {\n      return;\n    }\n    self.hovers = {};\n    if (!self.draggingItem && o && self.scrollModes.indexOf(o.context) === -1) {\n      self.dragItem = o;\n      self.dragMode = o.dragContext;\n      self.cursor = o.context;\n      if (o.context === 'cell') {\n        self.cursor = 'default';\n        self.hovers = { rowIndex: o.rowIndex, columnIndex: o.columnIndex };\n      }\n      if ((self.selecting || self.reorderObject) && o.context === 'cell') {\n        delta = {\n          x: Math.abs(self.dragStart.x - x),\n          y: Math.abs(self.dragStart.y - y),\n        };\n        if (self.dragStartObject.columnIndex !== -1 && e.shiftKey) {\n          self.dragStartObject = {\n            rowIndex: self.activeCell.rowIndex,\n            columnIndex: self.activeCell.columnIndex,\n          };\n        }\n        dragBounds = {\n          top: Math.min(self.dragStartObject.rowIndex, o.rowIndex),\n          left: Math.min(self.dragStartObject.columnIndex, o.columnIndex),\n          bottom: Math.max(self.dragStartObject.rowIndex, o.rowIndex),\n          right: Math.max(self.dragStartObject.columnIndex, o.columnIndex),\n        };\n        if (self.dragStartObject.columnIndex === -1) {\n          sBounds = self.getSelectionBounds();\n          dragBounds.left = -1;\n          dragBounds.right = s.length - 1;\n          dragBounds.top = Math.min(sBounds.top, o.rowIndex);\n          dragBounds.bottom = Math.max(sBounds.bottom, o.rowIndex);\n        }\n        if (\n          self.dragStartObject.rowIndex !== o.rowIndex ||\n          self.dragStartObject.columnIndex !== o.columnIndex\n        ) {\n          self.ignoreNextClick = true;\n        }\n        if (\n          self.cellBoundaryCrossed ||\n          (delta.x === 0 && delta.y === 0) ||\n          self.attributes.selectionMode === 'row'\n        ) {\n          if (\n            (self.attributes.selectionMode === 'row' ||\n              self.dragStartObject.columnIndex === -1) &&\n            self.rowBoundaryCrossed\n          ) {\n            self.selectRow(o.rowIndex, ctrl, null, true);\n          } else if (self.attributes.selectionMode !== 'row') {\n            if (!self.dragAddToSelection && o.rowIndex !== undefined) {\n              if (\n                self.selections[o.rowIndex] &&\n                self.selections[o.rowIndex].indexOf(o.columnIndex) !== -1\n              ) {\n                self.selections[o.rowIndex].splice(\n                  self.selections[o.rowIndex].indexOf(o.columnIndex),\n                  1,\n                );\n              }\n            } else {\n              self.selections[o.rowIndex] = self.selections[o.rowIndex] || [];\n              if (self.selections[o.rowIndex].indexOf(o.columnIndex) === -1) {\n                self.selections[o.rowIndex].push(o.columnIndex);\n              }\n            }\n          }\n        }\n        if (\n          (!self.selectionBounds ||\n            dragBounds.top !== self.selectionBounds.top ||\n            dragBounds.left !== self.selectionBounds.left ||\n            dragBounds.bottom !== self.selectionBounds.bottom ||\n            dragBounds.right !== self.selectionBounds.right) &&\n          !ctrl\n        ) {\n          self.selections = [];\n          sBounds = dragBounds;\n          if (self.attributes.selectionMode === 'row') {\n            for (i = sBounds.top; i <= sBounds.bottom; i += 1) {\n              self.selectRow(i, true, null, true);\n            }\n          } else if (dragBounds.top !== -1) {\n            self.selectArea(sBounds, true);\n          }\n        }\n        self.autoScrollZone(e, x, y, ctrl);\n      }\n    }\n    self.cellBoundaryCrossed = false;\n    self.rowBoundaryCrossed = false;\n    self.columnBoundaryCrossed = false;\n    self.draw(true);\n  };\n  self.click = function (e, overridePos) {\n    var i,\n      startingBounds = JSON.stringify(self.getSelectionBounds()),\n      ctrl =\n        (e.ctrlKey || e.metaKey || self.attributes.persistantSelectionMode) &&\n        !self.attributes.singleSelectionMode,\n      pos = overridePos || self.getLayerPos(e);\n    self.currentCell = self.getCellAt(pos.x, pos.y);\n    if (self.currentCell.grid !== undefined) {\n      return;\n    }\n    function checkSelectionChange() {\n      var ev,\n        sb = self.getSelectionBounds();\n      if (startingBounds === JSON.stringify(sb)) {\n        return;\n      }\n      ev = {\n        selections: self.selections,\n        selectionBounds: self.getSelectionBounds(),\n      };\n      Object.defineProperty(ev, 'selectedData', {\n        get: function () {\n          return self.getSelectedData();\n        },\n      });\n      self.dispatchEvent('selectionchanged', ev);\n    }\n    if (self.input) {\n      self.endEdit();\n    }\n    if (self.ignoreNextClick) {\n      self.ignoreNextClick = false;\n      return;\n    }\n    i = self.currentCell;\n    if (\n      self.dispatchEvent('click', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n    if (\n      ['rowHeaderCell', 'columnHeaderCell'].indexOf(self.currentCell.style) ===\n        -1 &&\n      !ctrl\n    ) {\n      self.setActiveCell(i.columnIndex, i.rowIndex);\n    }\n    if (self.currentCell.context === 'cell') {\n      if (self.currentCell.style === 'cornerCell') {\n        self.selectAll();\n        self.draw();\n        checkSelectionChange();\n        return;\n      }\n      if (self.currentCell.style === 'columnHeaderCell') {\n        if (self.attributes.columnHeaderClickBehavior === 'sort') {\n          if (self.orderBy === i.header.name) {\n            self.orderDirection =\n              self.orderDirection === 'asc' ? 'desc' : 'asc';\n          } else {\n            self.orderDirection = 'asc';\n          }\n          self.order(i.header.name, self.orderDirection);\n          checkSelectionChange();\n          return;\n        }\n        if (self.attributes.columnHeaderClickBehavior === 'select') {\n          self.selectColumn(i.header.index, ctrl, e.shiftKey);\n          self.draw();\n          return;\n        }\n      }\n      self.selections[i.rowIndex] = self.selections[i.rowIndex] || [];\n      if (\n        self.attributes.selectionMode === 'row' ||\n        self.currentCell.style === 'rowHeaderCell'\n      ) {\n        if (\n          self.currentCell.style === 'rowHeaderCell' &&\n          self.attributes.tree &&\n          pos.x > 0 &&\n          pos.x - self.currentCell.x <\n            self.style.treeArrowWidth +\n              self.style.treeArrowMarginLeft +\n              self.style.treeArrowMarginRight +\n              self.style.treeArrowClickRadius &&\n          pos.y - self.currentCell.y <\n            self.style.treeArrowHeight +\n              self.style.treeArrowMarginTop +\n              self.style.treeArrowClickRadius &&\n          pos.y > 0\n        ) {\n          self.toggleTree(i.rowIndex);\n          return;\n        }\n      }\n      if (e.shiftKey && !ctrl) {\n        self.selectionBounds = self.getSelectionBounds();\n        self.selectArea(undefined, false);\n      }\n    }\n    checkSelectionChange();\n    self.draw(true);\n  };\n  self.dragResizeColumn = function (e) {\n    var pos, x, y;\n    pos = self.getLayerPos(e);\n    x = self.resizingStartingWidth + pos.x - self.dragStart.x;\n    y = self.resizingStartingHeight + pos.y - self.dragStart.y;\n    if (x < self.style.minColumnWidth) {\n      x = self.style.minColumnWidth;\n    }\n    if (y < self.style.minRowHeight) {\n      y = self.style.minRowHeight;\n    }\n    if (\n      self.dispatchEvent('resizecolumn', {\n        x: x,\n        y: y,\n        draggingItem: self.draggingItem,\n      })\n    ) {\n      return false;\n    }\n    if (\n      self.scrollBox.scrollLeft >\n        self.scrollBox.scrollWidth - self.attributes.resizeScrollZone &&\n      self.dragMode === 'ew-resize'\n    ) {\n      self.resize(true);\n      self.scrollBox.scrollLeft += x;\n    }\n    if (self.dragMode === 'ew-resize') {\n      self.sizes.columns[\n        self.draggingItem.header.style === 'rowHeaderCell'\n          ? 'cornerCell'\n          : self.draggingItem.sortColumnIndex\n      ] = x;\n      if (\n        ['rowHeaderCell', 'cornerCell'].indexOf(\n          self.draggingItem.header.style,\n        ) !== -1\n      ) {\n        self.resize(true);\n      }\n      self.resizeChildGrids();\n      return;\n    }\n    if (self.dragMode === 'ns-resize') {\n      if (self.draggingItem.rowOpen) {\n        self.sizes.trees[self.draggingItem.rowIndex] = y;\n      } else if (self.attributes.globalRowResize) {\n        self.style.cellHeight = y;\n      } else {\n        self.sizes.rows[self.draggingItem.rowIndex] = y;\n      }\n      self.dispatchEvent('resizerow', { row: y });\n      self.resizeChildGrids();\n      return;\n    }\n    self.ellipsisCache = {};\n  };\n  self.stopDragResize = function () {\n    self.resize();\n    document.body.removeEventListener(\n      'mousemove',\n      self.dragResizeColumn,\n      false,\n    );\n    document.body.removeEventListener('mouseup', self.stopDragResize, false);\n    self.setStorageData();\n    self.draw(true);\n    self.ignoreNextClick = true;\n  };\n  self.scrollGrid = function (e) {\n    var pos = self.getLayerPos(e);\n    if (\n      self.attributes.scrollPointerLock &&\n      self.pointerLockPosition &&\n      ['horizontal-scroll-box', 'vertical-scroll-box'].indexOf(\n        self.scrollStartMode,\n      ) !== -1\n    ) {\n      self.pointerLockPosition.x += e.movementX;\n      self.pointerLockPosition.y += e.movementY;\n      self.pointerLockPosition.x = Math.min(\n        self.width - self.style.scrollBarWidth,\n        Math.max(0, self.pointerLockPosition.x),\n      );\n      self.pointerLockPosition.y = Math.min(\n        self.height - self.style.scrollBarWidth,\n        Math.max(0, self.pointerLockPosition.y),\n      );\n      pos = self.pointerLockPosition;\n    }\n    self.scrollMode = self.getCellAt(pos.x, pos.y).context;\n    if (\n      self.scrollMode === 'horizontal-scroll-box' &&\n      self.scrollStartMode !== 'horizontal-scroll-box'\n    ) {\n      self.scrollStartMode = 'horizontal-scroll-box';\n      self.dragStart = pos;\n      self.scrollStart.left = self.scrollBox.scrollLeft;\n      clearTimeout(self.scrollTimer);\n      return;\n    }\n    if (\n      self.scrollMode === 'vertical-scroll-box' &&\n      self.scrollStartMode !== 'vertical-scroll-box'\n    ) {\n      self.scrollStartMode = 'vertical-scroll-box';\n      self.dragStart = pos;\n      self.scrollStart.top = self.scrollBox.scrollTop;\n      clearTimeout(self.scrollTimer);\n      return;\n    }\n    if (\n      self.scrollStartMode === 'vertical-scroll-box' &&\n      self.scrollMode !== 'vertical-scroll-box'\n    ) {\n      self.scrollMode = 'vertical-scroll-box';\n    }\n    if (\n      self.scrollStartMode === 'horizontal-scroll-box' &&\n      self.scrollMode !== 'horizontal-scroll-box'\n    ) {\n      self.scrollMode = 'horizontal-scroll-box';\n    }\n    clearTimeout(self.scrollTimer);\n    if (self.scrollModes.indexOf(self.scrollMode) === -1) {\n      return;\n    }\n    if (self.scrollMode === 'vertical-scroll-box') {\n      self.scrollBox.scrollTop =\n        self.scrollStart.top +\n        (pos.y - self.dragStart.y) / self.scrollBox.heightBoxRatio;\n    } else if (self.scrollMode === 'vertical-scroll-top') {\n      self.scrollBox.scrollTop -= self.page * self.style.cellHeight;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    } else if (self.scrollMode === 'vertical-scroll-bottom') {\n      self.scrollBox.scrollTop += self.page * self.style.cellHeight;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    }\n    if (self.scrollMode === 'horizontal-scroll-box') {\n      self.scrollBox.scrollLeft =\n        self.scrollStart.left +\n        (pos.x - self.dragStart.x) / self.scrollBox.widthBoxRatio;\n    } else if (self.scrollMode === 'horizontal-scroll-right') {\n      self.scrollBox.scrollLeft += self.attributes.selectionScrollIncrement;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    } else if (self.scrollMode === 'horizontal-scroll-left') {\n      self.scrollBox.scrollLeft -= self.attributes.selectionScrollIncrement;\n      self.scrollTimer = setTimeout(\n        self.scrollGrid,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    }\n  };\n  self.stopScrollGrid = function () {\n    clearTimeout(self.scrollTimer);\n    if (document.exitPointerLock) {\n      document.exitPointerLock();\n    }\n    document.removeEventListener('mousemove', self.scrollGrid, false);\n  };\n  self.dragReorder = function (e) {\n    var pos,\n      x,\n      y,\n      columReorder = self.dragMode === 'column-reorder',\n      rowReorder = self.dragMode === 'row-reorder';\n    pos = self.getLayerPos(e);\n    x = pos.x - self.dragStart.x;\n    y = pos.y - self.dragStart.y;\n    if (!self.attributes.allowColumnReordering && columReorder) {\n      return;\n    }\n    if (!self.attributes.allowRowReordering && rowReorder) {\n      return;\n    }\n    if (\n      self.dispatchEvent('reordering', {\n        NativeEvent: e,\n        source: self.dragStartObject,\n        target: self.currentCell,\n        dragMode: self.dragMode,\n      })\n    ) {\n      return;\n    }\n    if (\n      Math.abs(x) > self.attributes.reorderDeadZone ||\n      Math.abs(y) > self.attributes.reorderDeadZone\n    ) {\n      self.reorderObject = self.draggingItem;\n      self.reorderTarget = self.currentCell;\n      self.reorderObject.dragOffset = {\n        x: x,\n        y: y,\n      };\n      self.autoScrollZone(\n        e,\n        columReorder ? pos.x : -1,\n        rowReorder ? pos.y : -1,\n        false,\n      );\n    }\n  };\n  self.stopDragReorder = function (e) {\n    var oIndex,\n      tIndex,\n      cr = {\n        'row-reorder': self.orders.rows,\n        'column-reorder': self.orders.columns,\n      },\n      i = {\n        'row-reorder': 'rowIndex',\n        'column-reorder': 'sortColumnIndex',\n      }[self.dragMode];\n    document.body.removeEventListener('mousemove', self.dragReorder, false);\n    document.body.removeEventListener('mouseup', self.stopDragReorder, false);\n    if (\n      self.reorderObject &&\n      self.reorderTarget &&\n      ((self.dragMode === 'column-reorder' &&\n        self.reorderTarget.sortColumnIndex > -1 &&\n        self.reorderTarget.sortColumnIndex < self.getSchema().length) ||\n        (self.dragMode === 'row-reorder' &&\n          self.reorderTarget.rowIndex > -1 &&\n          self.reorderTarget.rowIndex < self.viewData.length)) &&\n      self.reorderObject[i] !== self.reorderTarget[i] &&\n      !self.dispatchEvent('reorder', {\n        NativeEvent: e,\n        source: self.reorderObject,\n        target: self.reorderTarget,\n        dragMode: self.dragMode,\n      })\n    ) {\n      self.ignoreNextClick = true;\n      oIndex = cr[self.dragMode].indexOf(self.reorderObject[i]);\n      tIndex = cr[self.dragMode].indexOf(self.reorderTarget[i]);\n      cr[self.dragMode].splice(oIndex, 1);\n      cr[self.dragMode].splice(tIndex, 0, self.reorderObject[i]);\n      if (self.dragMode === 'column-reorder') {\n        self.orders.columns = cr[self.dragMode];\n      } else {\n        self.orders.rows = cr[self.dragMode];\n      }\n      self.resize();\n      self.setStorageData();\n    }\n    self.reorderObject = undefined;\n    self.reorderTarget = undefined;\n    self.draw(true);\n  };\n  self.dragMove = function (e) {\n    if (\n      self.dispatchEvent('moving', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    var pos = self.getLayerPos(e);\n    self.moveOffset = {\n      x: self.currentCell.columnIndex - self.dragStartObject.columnIndex,\n      y: self.currentCell.rowIndex - self.dragStartObject.rowIndex,\n    };\n    if (\n      Math.abs(pos.x) > self.attributes.reorderDeadZone ||\n      Math.abs(pos.y) > self.attributes.reorderDeadZone\n    ) {\n      setTimeout(function () {\n        self.autoScrollZone(e, pos.x, pos.y, false);\n      }, 1);\n    }\n  };\n  self.stopDragMove = function (e) {\n    document.body.removeEventListener('mousemove', self.dragMove, false);\n    document.body.removeEventListener('mouseup', self.stopDragMove, false);\n    var b = self.getSelectionBounds();\n    if (\n      self.dispatchEvent('endmove', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      self.movingSelection = undefined;\n      self.moveOffset = undefined;\n      self.draw(true);\n      return;\n    }\n    if (self.moveOffset) {\n      self.moveTo(\n        self.movingSelection,\n        b.left + self.moveOffset.x,\n        b.top + self.moveOffset.y,\n      );\n      self.moveSelection(self.moveOffset.x, self.moveOffset.y);\n    }\n    self.movingSelection = undefined;\n    self.moveOffset = undefined;\n    self.draw(true);\n  };\n  self.freezeMove = function (e) {\n    if (\n      self.dispatchEvent('freezemoving', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      return;\n    }\n    var pos = self.getLayerPos(e);\n    self.ignoreNextClick = true;\n    self.freezeMarkerPosition = pos;\n    if (\n      self.currentCell &&\n      self.currentCell.rowIndex !== undefined &&\n      self.dragMode === 'frozen-row-marker'\n    ) {\n      self.scrollBox.scrollTop = 0;\n      self.frozenRow = self.currentCell.rowIndex + 1;\n    }\n    if (\n      self.currentCell &&\n      self.currentCell.columnIndex !== undefined &&\n      self.dragMode === 'frozen-column-marker'\n    ) {\n      self.scrollBox.scrollLeft = 0;\n      self.frozenColumn = self.currentCell.columnIndex + 1;\n    }\n    if (\n      Math.abs(pos.x) > self.attributes.reorderDeadZone ||\n      Math.abs(pos.y) > self.attributes.reorderDeadZone\n    ) {\n      setTimeout(function () {\n        self.autoScrollZone(e, pos.x, pos.y, false);\n      }, 1);\n    }\n  };\n  self.stopFreezeMove = function (e) {\n    document.body.removeEventListener('mousemove', self.freezeMove, false);\n    document.body.removeEventListener('mouseup', self.stopFreezeMove, false);\n    self.freezeMarkerPosition = undefined;\n    if (\n      self.dispatchEvent('endfreezemove', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      self.frozenRow = self.startFreezeMove.x;\n      self.frozenColumn = self.startFreezeMove.y;\n      self.draw(true);\n      return;\n    }\n    self.draw(true);\n  };\n  self.mousedown = function (e, overridePos) {\n    self.lastMouseDownTarget = e.target;\n    if (\n      self.dispatchEvent('mousedown', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n    if (e.button === 2 || self.input) {\n      return;\n    }\n    var ctrl = e.ctrlKey || e.metaKey,\n      move = /-move/.test(self.dragMode),\n      freeze = /frozen-row-marker|frozen-column-marker/.test(self.dragMode),\n      resize = /-resize/.test(self.dragMode);\n    self.dragStart = overridePos || self.getLayerPos(e);\n    self.scrollStart = {\n      left: self.scrollBox.scrollLeft,\n      top: self.scrollBox.scrollTop,\n    };\n    self.dragStartObject = self.getCellAt(self.dragStart.x, self.dragStart.y);\n    self.dragAddToSelection = !self.dragStartObject.selected;\n    if (\n      !ctrl &&\n      !e.shiftKey &&\n      !/(vertical|horizontal)-scroll-(bar|box)/.test(\n        self.dragStartObject.context,\n      ) &&\n      self.currentCell &&\n      !self.currentCell.isColumnHeader &&\n      !move &&\n      !freeze &&\n      !resize\n    ) {\n      self.selections = [];\n    }\n    if (self.dragStartObject.isGrid) {\n      return;\n    }\n    if (self.scrollModes.indexOf(self.dragStartObject.context) !== -1) {\n      self.scrollMode = self.dragStartObject.context;\n      self.scrollStartMode = self.dragStartObject.context;\n      self.scrollGrid(e);\n      if (\n        self.attributes.scrollPointerLock &&\n        ['horizontal-scroll-box', 'vertical-scroll-box'].indexOf(\n          self.scrollStartMode,\n        ) !== -1\n      ) {\n        self.pointerLockPosition = {\n          x: self.dragStart.x,\n          y: self.dragStart.y,\n        };\n        self.canvas.requestPointerLock();\n      }\n      document.addEventListener('mousemove', self.scrollGrid, false);\n      document.addEventListener('mouseup', self.stopScrollGrid, false);\n      self.ignoreNextClick = true;\n      return;\n    }\n    if (self.dragMode === 'cell') {\n      self.selecting = true;\n      if (\n        (self.attributes.selectionMode === 'row' ||\n          self.dragStartObject.columnIndex === -1) &&\n        self.dragStartObject.rowIndex > -1\n      ) {\n        self.selectRow(self.dragStartObject.rowIndex, ctrl, null);\n      } else if (self.attributes.selectionMode !== 'row') {\n        self.mousemove(e);\n      }\n      return;\n    }\n    if (move) {\n      self.draggingItem = self.dragItem;\n      self.movingSelection = self.selections.concat([]);\n      self.dragging = self.dragStartObject;\n      if (\n        self.dispatchEvent('beginmove', {\n          NativeEvent: e,\n          cell: self.currentCell,\n        })\n      ) {\n        return;\n      }\n      document.body.addEventListener('mousemove', self.dragMove, false);\n      document.body.addEventListener('mouseup', self.stopDragMove, false);\n      return self.mousemove(e);\n    }\n    if (freeze) {\n      self.draggingItem = self.dragItem;\n      self.startFreezeMove = {\n        x: self.frozenRow,\n        y: self.frozenColumn,\n      };\n      if (self.dispatchEvent('beginfreezemove', { NativeEvent: e })) {\n        return;\n      }\n      document.body.addEventListener('mousemove', self.freezeMove, false);\n      document.body.addEventListener('mouseup', self.stopFreezeMove, false);\n      return self.mousemove(e);\n    }\n    if (resize) {\n      self.draggingItem = self.dragItem;\n      if (self.draggingItem.rowOpen) {\n        self.resizingStartingHeight =\n          self.sizes.trees[self.draggingItem.rowIndex];\n      } else {\n        self.resizingStartingHeight =\n          self.sizes.rows[self.draggingItem.rowIndex] || self.style.cellHeight;\n      }\n      self.resizingStartingWidth =\n        self.sizes.columns[\n          self.draggingItem.header.style === 'rowHeaderCell'\n            ? 'cornerCell'\n            : self.draggingItem.sortColumnIndex\n        ] || self.draggingItem.width;\n      document.body.addEventListener('mousemove', self.dragResizeColumn, false);\n      document.body.addEventListener('mouseup', self.stopDragResize, false);\n      return;\n    }\n    if (['row-reorder', 'column-reorder'].indexOf(self.dragMode) !== -1) {\n      self.draggingItem = self.dragStartObject;\n      document.body.addEventListener('mousemove', self.dragReorder, false);\n      document.body.addEventListener('mouseup', self.stopDragReorder, false);\n      return;\n    }\n  };\n  self.mouseup = function (e) {\n    clearTimeout(self.scrollTimer);\n    self.cellBoundaryCrossed = true;\n    self.rowBoundaryCrossed = true;\n    self.columnBoundaryCrossed = true;\n    self.selecting = undefined;\n    self.draggingItem = undefined;\n    self.dragStartObject = undefined;\n    if (\n      self.dispatchEvent('mouseup', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus && e.target !== self.canvas) {\n      return;\n    }\n    if (self.currentCell && self.currentCell.grid !== undefined) {\n      return;\n    }\n    if (self.contextMenu || self.input) {\n      return;\n    }\n    if (self.dragStart && self.isInGrid(self.dragStart)) {\n      self.controlInput.focus();\n    }\n    e.preventDefault();\n  };\n  // gets the horizontal adjacent cells as well as first/last based on column visibility\n  self.getAdjacentCells = function () {\n    var x,\n      i,\n      s = self.getSchema(),\n      o = {};\n    for (x = 0; x < s.length; x += 1) {\n      i = self.orders.columns[x];\n      if (!s[i].hidden) {\n        if (o.first === undefined) {\n          o.first = x;\n          o.left = x;\n        }\n        o.last = x;\n        if (x > self.activeCell.columnIndex && o.right === undefined) {\n          o.right = x;\n        }\n        if (x < self.activeCell.columnIndex) {\n          o.left = x;\n        }\n      }\n    }\n    if (o.right === undefined) {\n      o.right = o.last;\n    }\n    return o;\n  };\n  self.keydown = function (e) {\n    var i,\n      ev,\n      adjacentCells = self.getAdjacentCells(),\n      x = self.activeCell.columnIndex,\n      y = self.activeCell.rowIndex,\n      ctrl = e.ctrlKey || e.metaKey,\n      last = self.viewData.length - 1,\n      s = self.getSchema(),\n      cols = s.length - 1;\n\n    var defaultPrevented = self.dispatchEvent('keydown', {\n      NativeEvent: e,\n      cell: self.currentCell,\n    });\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    if (!self.hasFocus) {\n      return;\n    }\n\n    // If a user starts typing content, switch to \"Enter\" mode\n    if (isPrintableKeyEvent(e) && !ctrl) {\n      return self.beginEditAt(x, y, e, true);\n    }\n\n    if (self.attributes.showNewRow) {\n      last += 1;\n    }\n\n    if (e.key === 'Tab') {\n      e.preventDefault();\n    }\n\n    if (e.key === 'Escape') {\n      self.selectNone();\n    } else if (ctrl && e.key === 'a') {\n      self.selectAll();\n    } else if (e.key === 'ArrowDown') {\n      y += 1;\n    } else if (e.key === 'ArrowUp') {\n      y -= 1;\n    } else if (\n      (e.key === 'ArrowLeft' && !ctrl) ||\n      (e.shiftKey && e.key === 'Tab')\n    ) {\n      x = adjacentCells.left;\n    } else if (\n      (e.key === 'ArrowRight' && !ctrl) ||\n      (!e.shiftKey && e.key === 'Tab')\n    ) {\n      x = adjacentCells.right;\n    } else if (e.key === 'PageUp') {\n      y -= self.page;\n      e.preventDefault();\n    } else if (e.key === 'PageDown') {\n      y += self.page;\n      e.preventDefault();\n    } else if (e.key === 'Home' || (ctrl && e.key === 'ArrowUp')) {\n      y = 0;\n    } else if (e.key === 'End' || (ctrl && e.key === 'ArrowDown')) {\n      y = self.viewData.length - 1;\n    } else if (ctrl && e.key === 'ArrowRight') {\n      x = adjacentCells.last;\n    } else if (ctrl && e.key === 'ArrowLeft') {\n      x = adjacentCells.first;\n    }\n\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      return self.beginEditAt(x, y, e);\n    }\n\n    if (x < 0 || Number.isNaN(x)) {\n      x = adjacentCells.first;\n    }\n    if (y > last) {\n      y = last;\n    }\n    if (y < 0 || Number.isNaN(y)) {\n      y = 0;\n    }\n    if (x > cols) {\n      x = adjacentCells.last;\n    }\n\n    // TODO - most likely some column order related bugs in key based selection\n    // Arrows\n    var isArrowKey = [\n      'ArrowLeft',\n      'ArrowUp',\n      'ArrowRight',\n      'ArrowDown',\n    ].includes(e.key);\n\n    if (e.shiftKey && isArrowKey) {\n      self.selections[Math.max(y, 0)] = self.selections[Math.max(y, 0)] || [];\n      self.selections[Math.max(y, 0)].push(x);\n\n      self.selectionBounds = self.getSelectionBounds();\n      self.selectArea(undefined, ctrl);\n\n      self.draw(true);\n    }\n\n    if (x !== self.activeCell.columnIndex || y !== self.activeCell.rowIndex) {\n      self.scrollIntoView(\n        x !== self.activeCell.columnIndex ? x : undefined,\n        y !== self.activeCell.rowIndex && !Number.isNaN(y) ? y : undefined,\n      );\n\n      self.setActiveCell(x, y);\n      if (!e.shiftKey && self.attributes.selectionFollowsActiveCell) {\n        if (!ctrl) {\n          self.selections = [];\n        }\n        self.selections[y] = self.selections[y] || [];\n        self.selections[y].push(x);\n        ev = {\n          selectedData: self.getSelectedData(),\n          selections: self.selections,\n          selectionBounds: self.getSelectionBounds(),\n        };\n        Object.defineProperty(ev, 'selectedData', {\n          get: function () {\n            return self.getSelectedData();\n          },\n        });\n        self.dispatchEvent('selectionchanged', ev);\n      }\n      self.draw(true);\n    }\n  };\n  self.keyup = function (e) {\n    if (\n      self.dispatchEvent('keyup', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n  };\n  self.keypress = function (e) {\n    if (!self.hasFocus) {\n      return;\n    }\n    if (\n      self.dispatchEvent('keypress', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n  };\n  self.dblclick = function (e) {\n    if (\n      self.dispatchEvent('dblclick', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    if (!self.hasFocus) {\n      return;\n    }\n    if (\n      self.currentCell.context === 'ew-resize' &&\n      self.currentCell.style === 'columnHeaderCell'\n    ) {\n      self.fitColumnToValues(self.currentCell.header.name);\n    } else if (\n      self.currentCell.context === 'ew-resize' &&\n      self.currentCell.style === 'cornerCell'\n    ) {\n      self.autosize();\n    } else if (['cell', 'activeCell'].indexOf(self.currentCell.style) !== -1) {\n      self.beginEditAt(self.currentCell.columnIndex, self.currentCell.rowIndex);\n    }\n  };\n  self.scrollWheel = function (e) {\n    var l,\n      t,\n      ev = e,\n      deltaX = e.deltaX === undefined ? e.NativeEvent.deltaX : e.deltaX,\n      deltaY = e.deltaY === undefined ? e.NativeEvent.deltaY : e.deltaY,\n      deltaMode =\n        e.deltaMode === undefined ? e.NativeEvent.deltaMode : e.deltaMode;\n    var e = e.NativeEvent || e;\n    if (wheeling) {\n      ev.preventDefault(e);\n      return;\n    }\n    if (self.dispatchEvent('wheel', { NativeEvent: e })) {\n      return;\n    }\n    self.touchHaltAnimation = true;\n    l = self.scrollBox.scrollLeft;\n    t = self.scrollBox.scrollTop;\n    if (self.hasFocus) {\n      //BUG Issue 42: https://github.com/TonyGermaneri/canvas-datagrid/issues/42\n      //https://stackoverflow.com/questions/20110224/what-is-the-height-of-a-line-in-a-wheel-event-deltamode-dom-delta-line\n      if (deltaMode === 1) {\n        // line mode = 17 pixels per line\n        deltaY = deltaY * 17;\n      }\n      if (\n        (self.scrollBox.scrollTop < self.scrollBox.scrollHeight &&\n          deltaY > 0) ||\n        (self.scrollBox.scrollLeft < self.scrollBox.scrollWidth &&\n          deltaX > 0) ||\n        (self.scrollBox.scrollTop > 0 && deltaY < 0) ||\n        (self.scrollBox.scrollLeft > 0 && deltaX < 0)\n      ) {\n        ev.preventDefault(e);\n      }\n      wheeling = setTimeout(function () {\n        wheeling = undefined;\n        self.scrollBox.scrollTo(deltaX + l, deltaY + t);\n      }, 1);\n    }\n  };\n\n  self.pasteData = function (\n    pasteValue,\n    mimeType,\n    startRowIndex,\n    startColIndex,\n  ) {\n    var schema = self.getVisibleSchema();\n\n    const isSupportedHtmlTable = (htmlString) =>\n      /(?:^(<meta[^>]+>)?<table>)|(?:<!--StartFragment-->\\s*<table>)/.test(\n        htmlString,\n      );\n\n    // TODO: support pasting tables from Excel\n    if (\n      mimeType === 'text/html' &&\n      isSupportedHtmlTable(pasteValue) === false\n    ) {\n      console.warn(\n        'Unrecognized HTML format. HTML must be a simple table, e.g.: <table><tr><td>data</td></tr></table>.',\n      );\n      console.warn(\n        'Data with the mime type text/html not in this format will not be imported as row data.',\n      );\n\n      return;\n    }\n\n    function parseData(data, mimeType) {\n      // TODO: use DOMParser\n      if (mimeType === 'text/html') {\n        // strip table beginning and ending off, then split at rows\n        var cleanedHtmlData = data\n          .substring(\n            data.indexOf('<table><tr>') + 11,\n            data.indexOf('</tr></table>'),\n          )\n          .split('</tr><tr>')\n          .filter(\n            // ditch any headers on the table\n            (row) => !/^<th>|^<thead>/.test(row),\n          )\n          .map(\n            // split row into individual cells\n            (row) =>\n              row\n                .match(/<td>[^<]+/g)\n                .map((match) => match.replace(/^<td>/, '')),\n          );\n\n        return cleanedHtmlData;\n      }\n\n      // Default data format is string, so split on new line,\n      // and then enclose in an array (a row with one cell):\n      return data.split('\\n').map((value) => [value]);\n    }\n\n    var rows = parseData(pasteValue, mimeType);\n\n    // Special case: if rows.length = 1, we paste this value in each\n    // selected cell. This mimics Excel's paste functionality, and works\n    // as a poor-man's fill-down.\n    if (rows.length === 1) {\n      var cellData = rows[0][0];\n\n      self.forEachSelectedCell(function (data, rowIndex, colName) {\n        data[rowIndex][colName] = cellData;\n      });\n    } else {\n      var selections = [];\n      for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n        // Rows may have been moved by user, so get the actual row index\n        // (instead of the row index at which the row is rendered):\n        var realRowIndex = self.orders.rows[startRowIndex + rowIndex];\n        var cells = rows[rowIndex];\n\n        var existingRowData = self.viewData[realRowIndex];\n        var newRowData = Object.assign({}, existingRowData);\n\n        selections[realRowIndex] = [];\n\n        for (var colIndex = 0; colIndex < cells.length; colIndex++) {\n          var column = schema[startColIndex + colIndex];\n\n          if (!column) {\n            console.warn('Paste data exceeded grid bounds. Skipping.');\n            continue;\n          }\n\n          var columnName = column.name;\n          var cellData = cells[colIndex];\n\n          if (cellData === undefined || cellData === null) {\n            newRowData[columnName] = existingRowData[columnName];\n            continue;\n          }\n\n          selections[realRowIndex].push(startColIndex + colIndex);\n\n          newRowData[columnName] = cellData;\n        }\n\n        self.originalData[realRowIndex] = newRowData;\n      }\n      self.selections = selections;\n    }\n\n    // selections is a sparse array, so we condense:\n    var affectedCells = [];\n\n    self.selections.forEach(function (row, rowIndex) {\n      if (rowIndex === undefined) return;\n\n      row.forEach(function (columnIndex) {\n        affectedCells.push([rowIndex, columnIndex]);\n      });\n    });\n\n    self.dispatchEvent('afterpaste', {\n      cells: affectedCells,\n    });\n\n    // Because originalData has been updated, we must refresh\n    // viewData to ensure the new cell values are rendered\n    self.refresh();\n\n    return rows.length;\n  };\n  self.getNextVisibleColumnIndex = function (visibleColumnIndex) {\n    var x,\n      s = self.getVisibleSchema();\n    for (x = 0; x < s.length; x += 1) {\n      if (s[x].columnIndex === visibleColumnIndex) {\n        return s[x + 1].columnIndex;\n      }\n    }\n    return -1;\n  };\n  self.getVisibleColumnIndexOf = function (columnIndex) {\n    var x,\n      s = self.getVisibleSchema();\n    for (x = 0; x < s.length; x += 1) {\n      if (s[x].columnIndex === columnIndex) {\n        return x;\n      }\n    }\n    return -1;\n  };\n  self.paste = function (event) {\n    if (!self.attributes.editable) {\n      return;\n    }\n\n    var defaultPrevented = self.dispatchEvent('beforepaste', {\n      NativeEvent: event,\n    });\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    var clipboardItems = new Map(\n      Array.from(event.clipboardData.items).map((item) => [item.type, item]),\n    );\n\n    // Supported MIME types, in order of preference:\n    var supportedMimeTypes = ['text/html', 'text/csv', 'text/plain'];\n\n    // The clipboard will often contain the same data in multiple formats,\n    // which can be used depending on the context in which it's pasted. Here\n    // we'll prefere more structured (HTML/CSV) over less structured, when\n    // available, so we try to find those first:\n    var pasteableItems = supportedMimeTypes\n      .map((mimeType) => clipboardItems.get(mimeType))\n      .filter((item) => !!item); // filter out not-found MIME types (= undefined)\n\n    if (pasteableItems.length === 0) {\n      console.warn(\n        'Cannot find supported clipboard data type. Supported types are:',\n        supportedMimeTypes.join(', '),\n      );\n      return;\n    }\n\n    var itemToPaste = pasteableItems[0];\n\n    // itemToPaste is cleared once accessed (getData or getAsString),\n    // so we need to store the type here, before reading its value:\n    var pasteType = itemToPaste.type;\n\n    itemToPaste.getAsString(function (pasteValue) {\n      self.pasteData(\n        pasteValue,\n        pasteType,\n        self.activeCell.rowIndex,\n        self.getVisibleColumnIndexOf(self.activeCell.columnIndex),\n      );\n\n      self.draw();\n    });\n  };\n  self.cut = function (e) {\n    self.copy(e);\n    self.forEachSelectedCell(function (data, index, colName) {\n      data[index][colName] = '';\n    });\n  };\n  self.copy = function (e) {\n    if (self.dispatchEvent('copy', { NativeEvent: e })) {\n      return;\n    }\n    if (!self.hasFocus || !e.clipboardData) {\n      return;\n    }\n    var t,\n      d,\n      tableRows = [],\n      textRows = [],\n      outputHeaders = {},\n      outputHeaderKeys,\n      sData = self.getSelectedData(),\n      s = self.getSchema();\n    function htmlSafe(v) {\n      return v.replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n    function fCopyCell(v) {\n      v = v === null || v === undefined ? '' : v;\n      return '<td>' + (typeof v === 'string' ? htmlSafe(v) : v) + '</td>';\n    }\n    function addHeaders(headers, useHtml) {\n      if (!s.length || headers.length < 2) {\n        return '';\n      }\n      var h = [];\n      if (useHtml) {\n        h.push('<tr>');\n      }\n      s.forEach(function (column, columnIndex) {\n        // intentional redefinition of column\n        column = s[self.orders.columns[columnIndex]];\n        if (!column.hidden && headers.indexOf(column.name) !== -1) {\n          var ev = { NativeEvent: e, column: column };\n          if (self.dispatchEvent('copyonschema', ev)) {\n            column = ev.column;\n          }\n\n          var hVal = column.name || column.title || '';\n          if (useHtml) {\n            h.push('<th>' + htmlSafe(hVal) + '</th>');\n          } else {\n            h.push('\"' + hVal.replace(/\"/g, '\"\"') + '\"');\n          }\n        }\n      });\n      h.push(useHtml ? '</tr>' : '\\n');\n      return h.join(useHtml ? '' : ',');\n    }\n    function addCellValue(val, trRow, textRow, column) {\n      // escape strings\n      if (val !== null && val !== false && val !== undefined && val.replace) {\n        trRow.push(fCopyCell(val));\n        textRow.push('\"' + val.replace(/\"/g, '\"\"') + '\"');\n        return;\n      }\n      if (val !== undefined) {\n        textRow.push(val);\n        trRow.push(fCopyCell(val));\n        return;\n      }\n      // issue #66\n      textRow.push('');\n      trRow.push('<td>&nbsp;</td>');\n    }\n    if (sData.length > 0) {\n      sData.forEach(function (row) {\n        var rowKeys = Object.keys(row);\n        if (row) {\n          var trRow = [],\n            textRow = [],\n            sSorted = [];\n          // HACK: https://github.com/TonyGermaneri/canvas-datagrid/issues/181\n          // I can't use sort here or O(1), so hacks\n          s.forEach(function (column, columnIndex) {\n            sSorted.push(s[self.orders.columns[columnIndex]]);\n          });\n          sSorted.forEach(function (column, columnIndex) {\n            if (rowKeys.indexOf(column.name) !== -1) {\n              outputHeaders[column.name] = true;\n              // escape strings\n              addCellValue(row[column.name], trRow, textRow, column);\n            }\n          });\n          tableRows.push(trRow.join(''));\n          textRows.push(textRow.join(','));\n        }\n      });\n      outputHeaderKeys = Object.keys(outputHeaders);\n      t = addHeaders(outputHeaderKeys) + textRows.join('\\n');\n      d =\n        '<table>' +\n        addHeaders(outputHeaderKeys, true) +\n        '<tr>' +\n        tableRows.join('</tr><tr>') +\n        '</tr></table>';\n      if (outputHeaderKeys.length === 1) {\n        // if there was only one cell selected, remove the quotes from the string\n        t = t.substring(1, t.length - 1);\n      }\n      e.clipboardData.setData('text/html', d);\n      e.clipboardData.setData('text/plain', t);\n      e.clipboardData.setData('text/csv', t);\n      e.clipboardData.setData('application/json', JSON.stringify(sData));\n      e.preventDefault();\n    }\n  };\n  return;\n}\n","module.exports=function(e){var o={};function a(t){if(o[t])return o[t].exports;var r=o[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,a),r.l=!0,r.exports}return a.m=e,a.c=o,a.d=function(e,o,t){a.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:t})},a.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},a.t=function(e,o){if(1&o&&(e=a(e)),8&o)return e;if(4&o&&\"object\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:e}),2&o&&\"string\"!=typeof e)for(var r in e)a.d(t,r,function(o){return e[o]}.bind(null,r));return t},a.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(o,\"a\",o),o},a.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},a.p=\"\",a(a.s=0)}([function(e,o,a){\"use strict\";Object.defineProperty(o,\"__esModule\",{value:!0});var t=a(1),r=Object.keys(t.default).reduce((function(e,o){return e.concat(t.default[o])}),[]);o.default=function(e){return-1===r.indexOf(e.key)}},function(e,o,a){\"use strict\";Object.defineProperty(o,\"__esModule\",{value:!0});o.default={modifier:[\"Alt\",\"AltGraph\",\"CapsLock\",\"Control\",\"Fn\",\"FnLock\",\"Meta\",\"NumLock\",\"ScrollLock\",\"Shift\",\"Symbol\",\"SymbolLock\"],legacyModifier:[\"Hyper\",\"Super\"],whiteSpace:[\"Enter\",\"Tab\"],navigation:[\"ArrowDown\",\"ArrowLeft\",\"ArrowRight\",\"ArrowUp\",\"End\",\"Home\",\"PageDown\",\"PageUp\"],editing:[\"Backspace\",\"Clear\",\"Copy\",\"CrSel\",\"Cut\",\"Delete\",\"EraseEof\",\"ExSel\",\"Insert\",\"Paste\",\"Redo\",\"Undo\"],ui:[\"Accept\",\"Again\",\"Attn\",\"Cancel\",\"ContextMenu\",\"Escape\",\"Execute\",\"Find\",\"Help\",\"Pause\",\"Play\",\"Props\",\"Select\",\"ZoomIn\",\"ZoomOut\"],device:[\"BrightnessDown\",\"BrightnessUp\",\"Eject\",\"LogOff\",\"Power\",\"PowerOff\",\"PrintScreen\",\"Hibernate\",\"Standby\",\"WakeUp\"],imeCompositionKeys:[\"AllCandidates\",\"Alphanumeric\",\"CodeInput\",\"Compose\",\"Convert\",\"Dead\",\"FinalMode\",\"GroupFirst\",\"GroupLast\",\"GroupNext\",\"GroupPrevious\",\"ModeChange\",\"NextCandidate\",\"NonConvert\",\"PreviousCandidate\",\"Process\",\"SingleCandidate\"],koreanSpecific:[\"HangulMode\",\"HanjaMode\",\"JunjaMode\"],japaneseSpecific:[\"Eisu\",\"Hankaku\",\"Hiragana\",\"HiraganaKatakana\",\"KanaMode\",\"KanjiMode\",\"Katakana\",\"Romaji\",\"Zenkaku\",\"ZenkakuHankaku\"],commonFunction:[\"F1\",\"F2\",\"F3\",\"F4\",\"F5\",\"F6\",\"F7\",\"F8\",\"F9\",\"F10\",\"F11\",\"F12\",\"Soft1\",\"Soft2\",\"Soft3\",\"Soft4\"],multimedia:[\"ChannelDown\",\"ChannelUp\",\"Close\",\"MailForward\",\"MailReply\",\"MailSend\",\"MediaClose\",\"MediaFastForward\",\"MediaPause\",\"MediaPlay\",\"MediaPlayPause\",\"MediaRecord\",\"MediaRewind\",\"MediaStop\",\"MediaTrackNext\",\"MediaTrackPrevious\",\"New\",\"Open\",\"Print\",\"Save\",\"SpellCheck\"],multimediaNumpad:[\"Key11\",\"Key12\"],audio:[\"AudioBalanceLeft\",\"AudioBalanceRight\",\"AudioBassBoostDown\",\"AudioBassBoostToggle\",\"AudioBassBoostUp\",\"AudioFaderFront\",\"AudioFaderRear\",\"AudioSurroundModeNext\",\"AudioTrebleDown\",\"AudioTrebleUp\",\"AudioVolumeDown\",\"AudioVolumeUp\",\"AudioVolumeMute\",\"MicrophoneToggle\",\"MicrophoneVolumeDown\",\"MicrophoneVolumeUp\",\"MicrophoneVolumeMute\"],speech:[\"SpeechCorrectionList\",\"SpeechInputToggle\"],application:[\"LaunchApplication1\",\"LaunchApplication2\",\"LaunchCalendar\",\"LaunchContacts\",\"LaunchMail\",\"LaunchMediaPlayer\",\"LaunchMusicPlayer\",\"LaunchPhone\",\"LaunchScreenSaver\",\"LaunchSpreadsheet\",\"LaunchWebBrowser\",\"LaunchWebCam\",\"LaunchWordProcessor\"],browser:[\"BrowserBack\",\"BrowserFavorites\",\"BrowserForward\",\"BrowserHome\",\"BrowserRefresh\",\"BrowserSearch\",\"BrowserStop\"],mobilePhone:[\"AppSwitch\",\"Call\",\"Camera\",\"CameraFocus\",\"EndCall\",\"GoBack\",\"GoHome\",\"HeadsetHook\",\"LastNumberRedial\",\"Notification\",\"MannerMode\",\"VoiceDial\"],tv:[\"TV\",\"TV3DMode\",\"TVAntennaCable\",\"TVAudioDescription\",\"TVAudioDescriptionMixDown\",\"TVAudioDescriptionMixUp\",\"TVContentsMenu\",\"TVDataService\",\"TVInput\",\"TVInputComponent1\",\"TVInputComponent2\",\"TVInputComposite1\",\"TVInputComposite2\",\"TVInputHDMI1\",\"TVInputHDMI2\",\"TVInputHDMI3\",\"TVInputHDMI4\",\"TVInputVGA1\",\"TVMediaContext\",\"TVNetwork\",\"TVNumberEntry\",\"TVPower\",\"TVRadioService\",\"TVSatellite\",\"TVSatelliteBS\",\"TVSatelliteCS\",\"TVSatelliteToggle\",\"TVTerrestrialAnalog\",\"TVTerrestrialDigital\",\"TVTimer\"],mediaControls:[\"AVRInput\",\"AVRPower\",\"ColorF0Red\",\"ColorF1Green\",\"ColorF2Yellow\",\"ColorF3Blue\",\"ColorF4Grey\",\"ColorF5Brown\",\"ClosedCaptionToggle\",\"Dimmer\",\"DisplaySwap\",\"DVR\",\"Exit\",\"FavoriteClear0\",\"FavoriteClear1\",\"FavoriteClear2\",\"FavoriteClear3\",\"FavoriteRecall0\",\"FavoriteRecall1\",\"FavoriteRecall2\",\"FavoriteRecall3\",\"FavoriteStore0\",\"FavoriteStore1\",\"FavoriteStore2\",\"FavoriteStore3\",\"Guide\",\"GuideNextDay\",\"GuidePreviousDay\",\"Info\",\"InstantReplay\",\"Link\",\"ListProgram\",\"LiveContent\",\"Lock\",\"MediaApps\",\"MediaAudioTrack\",\"MediaLast\",\"MediaSkipBackward\",\"MediaSkipForward\",\"MediaStepBackward\",\"MediaStepForward\",\"MediaTopMenu\",\"NavigateIn\",\"NavigateNext\",\"NavigateOut\",\"NavigatePrevious\",\"NextFavoriteChannel\",\"NextUserProfile\",\"OnDemand\",\"Pairing\",\"PinPDown\",\"PinPMove\",\"PinPToggle\",\"PinPUp\",\"PlaySpeedDown\",\"PlaySpeedReset\",\"PlaySpeedUp\",\"RandomToggle\",\"RcLowBattery\",\"RecordSpeedNext\",\"RfBypass\",\"ScanChannelsToggle\",\"ScreenModeNext\",\"Settings\",\"SplitScreenToggle\",\"STBInput\",\"STBPower\",\"Subtitle\",\"Teletext\",\"VideoModeNext\",\"Wink\",\"ZoomToggle\"]}}]).default;","/*jslint browser: true, unparam: true, todo: true, plusplus: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  var touchTimerMs = 50,\n    debounceTouchMove,\n    touchMoving,\n    touchScrollTimeout;\n  self.scrollAnimation = {};\n  self.touchDelta = {};\n  self.touchAnimateTo = {};\n  self.animationFrames = 0;\n  self.getTouchPos = function (e, touchIndex) {\n    var t = touchIndex ? e.touches[touchIndex] : e.touches[0],\n      rect = self.canvas.getBoundingClientRect(),\n      pos;\n    if (!t) {\n      return;\n    }\n    pos = {\n      x: t.clientX - rect.left,\n      y: t.clientY - rect.top,\n    };\n    if (self.isChildGrid) {\n      pos.x -= self.canvasOffsetLeft;\n      pos.y -= self.canvasOffsetTop;\n    }\n    return {\n      x: pos.x,\n      y: pos.y,\n      rect: rect,\n    };\n  };\n  // shamelessly stolen from from https://gist.github.com/gre/1650294\n  self.easingFunctions = {\n    linear: function (t) {\n      return t;\n    },\n    easeInQuad: function (t) {\n      return t * t;\n    },\n    easeOutQuad: function (t) {\n      return t * (2 - t);\n    },\n    easeInOutQuad: function (t) {\n      return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n    },\n    easeInCubic: function (t) {\n      return t * t * t;\n    },\n    easeOutCubic: function (t) {\n      return --t * t * t + 1;\n    },\n    easeInOutCubic: function (t) {\n      return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n    },\n    easeInQuart: function (t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function (t) {\n      return 1 - --t * t * t * t;\n    },\n    easeInOutQuart: function (t) {\n      return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n    },\n    easeInQuint: function (t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function (t) {\n      return 1 + --t * t * t * t * t;\n    },\n    easeInOutQuint: function (t) {\n      return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n    },\n  };\n  self.easing = function (t, b, c, d) {\n    return (\n      c * self.easingFunctions[self.attributes.touchEasingMethod](t / d) + b\n    );\n  };\n  self.calculatePPSTimed = function () {\n    self.xPPST = -(\n      (self.touchDelta.x - self.touchSigmaTimed.x) /\n      (self.touchDelta.t - self.touchSigmaTimed.t)\n    );\n    self.yPPST = -(\n      (self.touchDelta.y - self.touchSigmaTimed.y) /\n      (self.touchDelta.t - self.touchSigmaTimed.t)\n    );\n    self.touchSigmaTimed = {\n      x: self.touchDelta.x,\n      y: self.touchDelta.y,\n      t: performance.now(),\n    };\n  };\n  self.calculatePPS = function () {\n    self.xPPS = -(\n      (self.touchDelta.x - self.touchSigma.x) /\n      (self.touchDelta.t - self.touchSigma.t)\n    );\n    self.yPPS = -(\n      (self.touchDelta.y - self.touchSigma.y) /\n      (self.touchDelta.t - self.touchSigma.t)\n    );\n    self.touchSigma = {\n      x: self.touchDelta.x,\n      y: self.touchDelta.y,\n      t: performance.now(),\n    };\n  };\n  self.touchEndAnimation = function () {\n    if (!self.canvas || !self.scrollBox.scrollTo) {\n      return requestAnimationFrame(self.touchEndAnimation);\n    }\n    var n = performance.now(),\n      d = self.attributes.touchReleaseAnimationDurationMs,\n      t;\n    t = n - self.touchDelta.t;\n    self.animationFrames += 1;\n    self.scrollAnimation.x = self.easing(\n      t,\n      self.touchDelta.scrollLeft,\n      self.touchAnimateTo.x,\n      d,\n    );\n    self.scrollAnimation.y = self.easing(\n      t,\n      self.touchDelta.scrollTop,\n      self.touchAnimateTo.y,\n      d,\n    );\n    if (\n      t > d ||\n      (self.scrollAnimation.y === self.scrollBox.scrollTop &&\n        self.scrollAnimation.x === self.scrollBox.scrollLeft) ||\n      self.stopAnimation\n    ) {\n      return;\n    }\n    self.scrollBox.scrollTo(self.scrollAnimation.x, self.scrollAnimation.y);\n    requestAnimationFrame(self.touchEndAnimation);\n  };\n  self.touchEditCell = function (cell) {\n    self.beginEditAt(cell.columnIndex, cell.rowIndex);\n  };\n  self.touchCell = function (e) {\n    return function () {\n      clearInterval(self.calculatePPSTimer);\n      var i,\n        pos = self.getTouchPos(e);\n      if (\n        Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) <\n        self.attributes.touchDeadZone\n      ) {\n        i = self.getCellAt(pos.x, pos.y);\n        if (!i) {\n          return;\n        }\n        if (\n          self.touchingCell &&\n          self.touchingCell.rowIndex === i.rowIndex &&\n          self.touchingCell.columnIndex === i.columnIndex\n        ) {\n          self.touchEditCell(i);\n          return;\n        }\n        if (self.input && self.input.editCell) {\n          self.endEdit();\n        }\n        self.touchingCell = i;\n        self.selectArea({\n          top: i.rowIndex,\n          bottom: i.rowIndex,\n          left: i.columnIndex,\n          right: i.columnIndex,\n        });\n        self.draw(true);\n      }\n    };\n  };\n  self.touchstart = function (e) {\n    if (e.changedTouches[0]) {\n      self.touchStart = self.getTouchPos(e);\n      self.startingCell = self.getCellAt(\n        self.touchStart.x,\n        self.touchStart.y,\n        true,\n      );\n    }\n    if (\n      self.dispatchEvent('touchstart', {\n        NativeEvent: e,\n        cell: self.startingCell,\n      })\n    ) {\n      return;\n    }\n    self.disposeContextMenu();\n    clearInterval(self.calculatePPSTimer);\n    clearTimeout(self.touchContextTimeout);\n    self.touchStartEvent = e;\n    self.stopAnimation = true;\n    self.animationFrames = 0;\n    self.stopPropagation(e);\n    e.preventDefault();\n    if (e.touches.length === 1 && e.changedTouches[0] && !self.zoomAltered) {\n      self.touchLength = 1;\n      self.touchStart = self.touchStart || self.touchStart1;\n      self.touchScrollStart = {\n        x: self.scrollBox.scrollLeft,\n        y: self.scrollBox.scrollTop,\n        t: performance.now(),\n      };\n      self.touchDelta = {\n        x: 0,\n        y: 0,\n        scrollLeft: self.scrollBox.scrollLeft,\n        scrollTop: self.scrollBox.scrollTop,\n        t: self.touchScrollStart.t,\n      };\n      self.touchSigma = {\n        x: self.touchDelta.x,\n        y: self.touchDelta.y,\n        t: self.touchDelta.t,\n      };\n      self.touchSigmaTimed = {\n        x: self.touchDelta.x,\n        y: self.touchDelta.y,\n        t: self.touchDelta.t,\n      };\n      self.touchContextTimeout = setTimeout(function () {\n        self.contextmenuEvent(e, self.touchStart);\n      }, self.attributes.touchContextMenuTimeMs);\n      self.calculatePPSTimer = setInterval(\n        self.calculatePPSTimed,\n        touchTimerMs,\n      );\n      if (\n        self.startingCell &&\n        (self.startingCell.isGrid ||\n          ['tree', 'inherit'].indexOf(self.startingCell.context) !== -1)\n      ) {\n        self.hasFocus = false;\n        return;\n      }\n      self.hasFocus = true;\n      if (self.startingCell.isHeader) {\n        if (self.startingCell.isRowHeader) {\n          self.selectArea({\n            top: self.startingCell.rowIndex,\n            bottom: self.startingCell.rowIndex,\n            left: 0,\n            right: self.getVisibleSchema().length - 1,\n          });\n          self.draw(true);\n        } else if (self.startingCell.isColumnHeader) {\n          if (self.attributes.columnHeaderClickBehavior === 'sort') {\n            if (self.orderBy === self.startingCell.header.name) {\n              self.orderDirection =\n                self.orderDirection === 'asc' ? 'desc' : 'asc';\n            } else {\n              self.orderDirection = 'asc';\n            }\n            self.order(self.startingCell.header.name, self.orderDirection);\n          }\n          if (self.attributes.columnHeaderClickBehavior === 'select') {\n            self.selectArea({\n              top: 0,\n              bottom: self.viewData.length - 1,\n              left: self.startingCell.columnIndex,\n              right: self.startingCell.columnIndex,\n            });\n            self.draw(true);\n          }\n        }\n        self.touchEndEvents(e);\n        return;\n      }\n    }\n    if (self.zoomAltered) {\n      return;\n    }\n    document.body.addEventListener('touchmove', self.touchmove, {\n      passive: false,\n    });\n    document.body.addEventListener('touchend', self.touchend, false);\n    document.body.addEventListener('touchcancel', self.touchcancel, false);\n    self.draw(true);\n  };\n  self.touchSelect = function (cell, handleType) {\n    if (cell.rowIndex === undefined || cell.columnIndex === undefined) {\n      return;\n    }\n    self.touchSelecting = true;\n    var bounds = self.getSelectionBounds();\n    if (\n      handleType === 'selection-handle-bl' &&\n      cell.rowIndex >= bounds.top &&\n      cell.columnIndex <= bounds.right\n    ) {\n      bounds.bottom = cell.rowIndex;\n      bounds.left = cell.columnIndex;\n    } else if (\n      handleType === 'selection-handle-tl' &&\n      cell.rowIndex <= bounds.bottom &&\n      cell.columnIndex <= bounds.right\n    ) {\n      bounds.top = cell.rowIndex;\n      bounds.left = cell.columnIndex;\n    } else if (\n      handleType === 'selection-handle-tr' &&\n      cell.rowIndex <= bounds.bottom &&\n      cell.columnIndex >= bounds.left\n    ) {\n      bounds.top = cell.rowIndex;\n      bounds.right = cell.columnIndex;\n    } else if (\n      handleType === 'selection-handle-br' &&\n      cell.rowIndex >= bounds.top &&\n      cell.columnIndex >= bounds.left\n    ) {\n      bounds.bottom = cell.rowIndex;\n      bounds.right = cell.columnIndex;\n    }\n    if (self.attributes.selectionMode === 'row' || cell.rowIndex === -1) {\n      bounds.left = 0;\n      bounds.right = self.getSchema().length - 1;\n    } else {\n      bounds.left = Math.max(0, bounds.left);\n    }\n    self.selectArea(bounds);\n    self.draw(true);\n  };\n  function touchMove(e) {\n    var ch, rw, rScrollZone, lScrollZone, bScrollZone, tScrollZone, sbw, t1, t2;\n    if (self.dispatchEvent('beforetouchmove', { NativeEvent: e })) {\n      return;\n    }\n    clearTimeout(touchScrollTimeout);\n    if (e.changedTouches[0]) {\n      self.touchPosition = self.getTouchPos(e);\n    }\n    if (e.changedTouches[1]) {\n      self.touchPosition1 = self.getTouchPos(e, 1);\n    }\n    if (\n      Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) >\n      self.attributes.touchDeadZone\n    ) {\n      clearTimeout(self.touchContextTimeout);\n    }\n    if (e.touches.length === 2 && self.touchPosition && self.touchPosition1) {\n      t1 = self.touchPosition.y;\n      t2 = self.touchPosition1.y;\n      if (!self.zoomDeltaStart) {\n        self.zoomDeltaStart = Math.abs(t1 - t2);\n        self.startScale = self.scale;\n      }\n      self.touchLength = 2;\n      self.scaleDelta = self.zoomDeltaStart - Math.abs(t1 - t2);\n      self.scale =\n        self.startScale -\n        self.scaleDelta * self.attributes.touchZoomSensitivity;\n      self.scale = Math.min(\n        Math.max(self.scale, self.attributes.touchZoomMin),\n        self.attributes.touchZoomMax,\n      );\n      self.zoomAltered = true;\n      self.resize(true);\n      self.resizeChildGrids();\n      return;\n    }\n    if (self.zoomAltered) {\n      return;\n    }\n    self.touchLength = 1;\n    self.touchPosition = self.touchPosition || self.touchPosition1;\n    ch = self.getColumnHeaderCellHeight();\n    rw = self.getRowHeaderCellWidth();\n    rScrollZone =\n      self.width - self.style.scrollBarWidth - self.touchPosition.x <\n      self.attributes.selectionScrollZone;\n    lScrollZone =\n      self.touchPosition.x - rw < self.attributes.selectionScrollZone;\n    bScrollZone =\n      self.height - self.style.scrollBarWidth - self.touchPosition.y <\n      self.attributes.selectionScrollZone;\n    tScrollZone =\n      self.touchPosition.y - ch < self.attributes.selectionScrollZone;\n    sbw = self.style.scrollBarWidth;\n    function touchScroll() {\n      var x = self.scrollBox.scrollLeft,\n        y = self.scrollBox.scrollTop;\n      x += rScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      y += bScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      y -= tScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      x -= lScrollZone ? self.attributes.selectionScrollIncrement : 0;\n      self.scrollBox.scrollTo(x, y);\n      touchScrollTimeout = setTimeout(\n        touchScroll,\n        self.attributes.scrollRepeatRate,\n      );\n    }\n    e.stopPropagation();\n    self.touchDelta = {\n      x: self.touchPosition.x - self.touchStart.x,\n      y: self.touchPosition.y - self.touchStart.y,\n      scrollLeft: self.scrollBox.scrollLeft,\n      scrollTop: self.scrollBox.scrollTop,\n      t: performance.now(),\n    };\n    self.currentCell = self.getCellAt(\n      self.touchPosition.x,\n      self.touchPosition.y,\n    );\n    self.dispatchEvent('touchmove', { NativeEvent: e, cell: self.currentCell });\n    self.calculatePPS();\n    self.touchDuration = performance.now() - self.touchScrollStart.t;\n    self.stopAnimation = true;\n    self.animationFrames = 0;\n    if (\n      self.touchSelecting &&\n      (rScrollZone || lScrollZone || tScrollZone || bScrollZone)\n    ) {\n      touchScroll();\n    }\n    if (/vertical-scroll-/.test(self.startingCell.style)) {\n      self.scrollBox.scrollTop =\n        self.scrollBox.scrollHeight *\n        ((self.touchPosition.y - ch - sbw) /\n          (self.scrollBox.height - sbw - ch));\n      return;\n    }\n    if (/horizontal-scroll-/.test(self.startingCell.style)) {\n      self.scrollBox.scrollLeft =\n        self.scrollBox.scrollWidth *\n        ((self.touchPosition.x - rw - sbw) / (self.scrollBox.width - sbw - rw));\n      return;\n    }\n    if (/selection-handle-/.test(self.startingCell.style)) {\n      self.touchSelect(self.currentCell, self.startingCell.style);\n      return;\n    }\n    self.scrollBox.scrollTo(\n      self.touchScrollStart.x - self.touchDelta.x,\n      self.touchScrollStart.y - self.touchDelta.y,\n    );\n  }\n  self.touchmove = function (e) {\n    if (touchMoving) {\n      return;\n    }\n    requestAnimationFrame(function () {\n      touchMoving = true;\n      touchMove(e);\n      touchMoving = false;\n    });\n  };\n  self.touchEndEvents = function (e) {\n    self.zoomDeltaStart = undefined;\n    self.touchSelecting = false;\n    clearInterval(self.touchScrollTimeout);\n    clearInterval(self.touchContextTimeout);\n    clearInterval(self.calculatePPSTimer);\n    e.stopPropagation();\n    document.body.removeEventListener('touchmove', self.touchmove, {\n      passive: false,\n    });\n    document.body.removeEventListener('touchend', self.touchend, false);\n    document.body.removeEventListener('touchcancel', self.touchcancel, false);\n  };\n  self.touchend = function (e) {\n    if (\n      self.dispatchEvent('touchend', { NativeEvent: e, cell: self.currentCell })\n    ) {\n      return;\n    }\n    self.zoomDeltaStart = undefined;\n    if (e.changedTouches[0]) {\n      self.touchPosition = undefined;\n    }\n    if (e.changedTouches[1]) {\n      self.touchPosition1 = undefined;\n    }\n    if (self.zoomAltered) {\n      if (e.touches.length === 0) {\n        self.zoomAltered = false;\n      }\n      return;\n    }\n    var dz =\n      Math.abs(self.touchDelta.x) + Math.abs(self.touchDelta.y) <\n      self.attributes.touchDeadZone;\n    if (isNaN(self.xPPS)) {\n      self.xPPS = 0;\n    }\n    if (isNaN(self.yPPS)) {\n      self.yPPS = 0;\n    }\n    if (isNaN(self.xPPST)) {\n      self.xPPST = 0;\n    }\n    if (isNaN(self.yPPST)) {\n      self.yPPST = 0;\n    }\n    self.touchAnimateTo.x =\n      self.xPPS * self.attributes.touchReleaseAcceleration;\n    self.touchAnimateTo.y =\n      self.yPPS * self.attributes.touchReleaseAcceleration;\n    self.calculatePPSTimed();\n    if (dz && !self.contextMenu) {\n      self.touchCell(self.touchStartEvent)();\n    } else if (\n      self.animationFrames === 0 &&\n      (Math.abs(self.xPPST) > self.attributes.scrollAnimationPPSThreshold ||\n        Math.abs(self.yPPST) > self.attributes.scrollAnimationPPSThreshold) &&\n      !/-scroll-/.test(self.startingCell.style) &&\n      !dz\n    ) {\n      self.stopAnimation = false;\n      self.touchEndAnimation();\n    }\n    self.touchEndEvents(e);\n  };\n  self.touchcancel = function (e) {\n    if (\n      self.dispatchEvent('touchcancel', {\n        NativeEvent: e,\n        cell: self.currentCell,\n      })\n    ) {\n      return;\n    }\n    self.touchEndEvents(e);\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false, Event: false*/\n'use strict';\n\nexport default function (self) {\n  var zIndexTop, hoverScrollTimeout, autoCompleteContext;\n  function applyContextItemStyle(contextItemContainer) {\n    self.createInlineStyle(\n      contextItemContainer,\n      'canvas-datagrid-context-menu-item' + (self.mobile ? '-mobile' : ''),\n    );\n    contextItemContainer.addEventListener('mouseover', function () {\n      self.createInlineStyle(\n        contextItemContainer,\n        'canvas-datagrid-context-menu-item:hover',\n      );\n    });\n    contextItemContainer.addEventListener('mouseout', function () {\n      self.createInlineStyle(\n        contextItemContainer,\n        'canvas-datagrid-context-menu-item',\n      );\n    });\n  }\n  function createContextMenu(ev, pos, items, parentContextMenu) {\n    var container = document.createElement('div'),\n      upArrow = document.createElement('div'),\n      downArrow = document.createElement('div'),\n      children = [],\n      selectedIndex = -1,\n      intf = {},\n      rect;\n    if (!Array.isArray(items)) {\n      throw new Error('createContextMenu expects an array.');\n    }\n    function createItems() {\n      items.forEach(function (item) {\n        var contextItemContainer = document.createElement('div'),\n          childMenuArrow;\n        function removeChildContext(e) {\n          if (\n            e.relatedTarget === container ||\n            item.contextMenu.container === e.relatedTarget ||\n            childMenuArrow === e.relatedTarget ||\n            contextItemContainer === e.relatedTarget ||\n            item.contextMenu.container.contains(e.relatedTarget)\n          ) {\n            return;\n          }\n          item.contextMenu.dispose();\n          children.splice(children.indexOf(item.contextMenu), 1);\n          item.contextMenu = undefined;\n          contextItemContainer.removeEventListener(\n            'mouseout',\n            removeChildContext,\n          );\n          container.removeEventListener('mouseout', removeChildContext);\n          contextItemContainer.setAttribute('contextOpen', '0');\n          contextItemContainer.setAttribute('opening', '0');\n        }\n        function contextAddCallback(items) {\n          // check yet again if the user hasn't moved off\n          if (\n            contextItemContainer.getAttribute('opening') !== '1' ||\n            contextItemContainer.getAttribute('contextOpen') === '1'\n          ) {\n            return;\n          }\n          var cPos = contextItemContainer.getBoundingClientRect();\n          cPos = {\n            left:\n              cPos.left +\n              self.style.childContextMenuMarginLeft +\n              container.offsetWidth,\n            top: cPos.top + self.style.childContextMenuMarginTop,\n            bottom: cPos.bottom,\n            right: cPos.right,\n          };\n          item.contextMenu = createContextMenu(ev, cPos, items, intf);\n          contextItemContainer.setAttribute('contextOpen', '1');\n          contextItemContainer.addEventListener('mouseout', removeChildContext);\n          container.addEventListener('mouseout', removeChildContext);\n          children.push(item.contextMenu);\n        }\n        function createChildContext() {\n          var i;\n          if (contextItemContainer.getAttribute('contextOpen') === '1') {\n            return;\n          }\n          contextItemContainer.setAttribute('opening', '1');\n          if (typeof item.items === 'function') {\n            i = item.items.apply(intf, [\n              function (items) {\n                contextAddCallback(items);\n              },\n            ]);\n            if (i !== undefined && Array.isArray(i)) {\n              contextAddCallback(i);\n            }\n            return;\n          }\n          contextAddCallback(item.items);\n        }\n        function addItem(item) {\n          function addContent(content) {\n            if (content === null) {\n              return;\n            }\n            if (typeof content === 'function') {\n              return addContent(content(ev));\n            }\n            if (typeof content === 'object') {\n              contextItemContainer.appendChild(content);\n              return;\n            }\n            applyContextItemStyle(contextItemContainer);\n            contextItemContainer.innerHTML = content;\n            return;\n          }\n          addContent(item.title);\n          item.contextItemContainer = contextItemContainer;\n          if (\n            (item.items && item.items.length > 0) ||\n            typeof item.items === 'function'\n          ) {\n            childMenuArrow = document.createElement('div');\n            self.createInlineStyle(\n              childMenuArrow,\n              'canvas-datagrid-context-child-arrow',\n            );\n            childMenuArrow.innerHTML = self.style.childContextMenuArrowHTML;\n            contextItemContainer.appendChild(childMenuArrow);\n            contextItemContainer.addEventListener(\n              'mouseover',\n              createChildContext,\n            );\n            contextItemContainer.addEventListener('mouseout', function () {\n              contextItemContainer.setAttribute('opening', '0');\n            });\n          }\n          if (item.click) {\n            contextItemContainer.addEventListener('click', function (ev) {\n              item.click.apply(self, [ev]);\n            });\n          }\n        }\n        addItem(item);\n        container.appendChild(contextItemContainer);\n      });\n    }\n    function clickIndex(idx) {\n      items[idx].contextItemContainer.dispatchEvent(new Event('click'));\n    }\n    function checkArrowVisibility() {\n      if (container.scrollTop > 0) {\n        self.parentDOMNode.appendChild(upArrow);\n      } else if (upArrow.parentNode) {\n        upArrow.parentNode.removeChild(upArrow);\n      }\n      if (\n        container.scrollTop >=\n          container.scrollHeight - container.offsetHeight &&\n        downArrow.parentNode\n      ) {\n        downArrow.parentNode.removeChild(downArrow);\n      } else if (\n        container.scrollHeight - container.offsetHeight > 0 &&\n        !(\n          container.scrollTop >=\n          container.scrollHeight - container.offsetHeight\n        )\n      ) {\n        self.parentDOMNode.appendChild(downArrow);\n      }\n    }\n    function startHoverScroll(type) {\n      return function t() {\n        var a = self.attributes.contextHoverScrollAmount;\n        if (type === 'up' && container.scrollTop === 0) {\n          return;\n        }\n        if (type === 'down' && container.scrollTop === container.scrollHeight) {\n          return;\n        }\n        container.scrollTop += type === 'up' ? -a : a;\n        hoverScrollTimeout = setTimeout(\n          t,\n          self.attributes.contextHoverScrollRateMs,\n          type,\n        );\n      };\n    }\n    function endHoverScroll(type) {\n      return function () {\n        clearTimeout(hoverScrollTimeout);\n      };\n    }\n    function init() {\n      var loc = {},\n        s = self.scrollOffset(self.canvas);\n      if (zIndexTop === undefined) {\n        zIndexTop = self.style.contextMenuZIndex;\n      }\n      createItems();\n      self.createInlineStyle(\n        container,\n        'canvas-datagrid-context-menu' + (self.mobile ? '-mobile' : ''),\n      );\n      loc.x = pos.left - s.left;\n      loc.y = pos.top - s.top;\n      loc.height = 0;\n      zIndexTop += 1;\n      container.style.position = 'absolute';\n      upArrow.style.color = self.style.contextMenuArrowColor;\n      downArrow.style.color = self.style.contextMenuArrowColor;\n      [upArrow, downArrow].forEach(function (el) {\n        el.style.textAlign = 'center';\n        el.style.position = 'absolute';\n        el.style.zIndex = zIndexTop + 1;\n      });\n      container.style.zIndex = zIndexTop;\n      if (parentContextMenu && parentContextMenu.inputDropdown) {\n        container.style.maxHeight =\n          window.innerHeight -\n          loc.y -\n          self.style.autocompleteBottomMargin +\n          'px';\n        container.style.minWidth = pos.width + 'px';\n        loc.y += pos.height;\n      }\n      if (self.mobile) {\n        container.style.width = pos.width + 'px';\n      }\n      container.style.left = loc.x + 'px';\n      container.style.top = loc.y + 'px';\n      container.addEventListener('scroll', checkArrowVisibility);\n      container.addEventListener('wheel', function (e) {\n        if (self.hasFocus) {\n          container.scrollTop += e.deltaY;\n          container.scrollLeft += e.deltaX;\n        }\n        checkArrowVisibility();\n      });\n      upArrow.innerHTML = self.style.contextMenuArrowUpHTML;\n      downArrow.innerHTML = self.style.contextMenuArrowDownHTML;\n      container.appendChild(upArrow);\n      document.body.appendChild(downArrow);\n      document.body.appendChild(container);\n      rect = container.getBoundingClientRect();\n      // TODO: fix !(parentContextMenu && parentContextMenu.inputDropdown) state (autocomplete)\n      if (rect.bottom > window.innerHeight) {\n        if (!(parentContextMenu && parentContextMenu.inputDropdown)) {\n          loc.y -=\n            rect.bottom +\n            self.style.contextMenuWindowMargin -\n            window.innerHeight;\n        }\n        if (loc.y < 0) {\n          loc.y = self.style.contextMenuWindowMargin;\n        }\n        if (\n          container.offsetHeight >\n          window.innerHeight - self.style.contextMenuWindowMargin\n        ) {\n          container.style.height =\n            window.innerHeight - self.style.contextMenuWindowMargin * 2 + 'px';\n        }\n      }\n      if (rect.right > window.innerWidth) {\n        loc.x -=\n          rect.right - window.innerWidth + self.style.contextMenuWindowMargin;\n      }\n      if (loc.x < 0) {\n        loc.x = self.style.contextMenuWindowMargin;\n      }\n      if (loc.y < 0) {\n        loc.y = self.style.contextMenuWindowMargin;\n      }\n      container.style.left = loc.x + 'px';\n      container.style.top = loc.y + 'px';\n      rect = container.getBoundingClientRect();\n      upArrow.style.top = rect.top + 'px';\n      downArrow.style.top =\n        rect.top + rect.height - downArrow.offsetHeight + 'px';\n      upArrow.style.left = rect.left + 'px';\n      downArrow.style.left = rect.left + 'px';\n      downArrow.style.width = container.offsetWidth + 'px';\n      upArrow.style.width = container.offsetWidth + 'px';\n      downArrow.addEventListener('mouseover', startHoverScroll('down'));\n      downArrow.addEventListener('mouseout', endHoverScroll('down'));\n      upArrow.addEventListener('mouseover', startHoverScroll('up'));\n      upArrow.addEventListener('mouseout', endHoverScroll('up'));\n      checkArrowVisibility();\n    }\n    intf.parentGrid = self.intf;\n    intf.parentContextMenu = parentContextMenu;\n    intf.container = container;\n    init();\n    intf.clickIndex = clickIndex;\n    intf.rect = rect;\n    intf.items = items;\n    intf.upArrow = upArrow;\n    intf.downArrow = downArrow;\n    intf.dispose = function () {\n      clearTimeout(hoverScrollTimeout);\n      children.forEach(function (c) {\n        c.dispose();\n      });\n      [downArrow, upArrow, container].forEach(function (el) {\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        }\n      });\n    };\n    Object.defineProperty(intf, 'selectedIndex', {\n      get: function () {\n        return selectedIndex;\n      },\n      set: function (value) {\n        if (typeof value !== 'number' || isNaN(value || !isFinite(value))) {\n          throw new Error('Context menu selected index must be a sane number.');\n        }\n        selectedIndex = value;\n        if (selectedIndex > items.length - 1) {\n          selectedIndex = items.length - 1;\n        }\n        if (selectedIndex < 0) {\n          selectedIndex = 0;\n        }\n        items.forEach(function (item, index) {\n          if (index === selectedIndex) {\n            return self.createInlineStyle(\n              item.contextItemContainer,\n              'canvas-datagrid-context-menu-item:hover',\n            );\n          }\n          self.createInlineStyle(\n            item.contextItemContainer,\n            'canvas-datagrid-context-menu-item',\n          );\n        });\n      },\n    });\n    return intf;\n  }\n  function createFilterContextMenuItems(e) {\n    var filterContainer = document.createElement('div'),\n      filterLabel = document.createElement('div'),\n      filterAutoCompleteButton = document.createElement('button'),\n      filterInput = document.createElement('input'),\n      n =\n        e.cell && e.cell.header\n          ? e.cell.header.title || e.cell.header.name\n          : '',\n      iRect;\n    function checkRegExpErrorState() {\n      filterInput.style.background = self.style.contextFilterInputBackground;\n      filterInput.style.color = self.style.contextFilterInputColor;\n      if (self.invalidFilterRegEx) {\n        filterInput.style.background =\n          self.style.contextFilterInvalidRegExpBackground;\n        filterInput.style.color = self.style.contextFilterInvalidRegExpColor;\n      }\n    }\n    function fillAutoComplete() {\n      var count = 0;\n      var items = {};\n      var blanksItem = [];\n\n      self.viewData.forEach(function (row) {\n        var cellValue =\n          row[e.cell.header.name] == null\n            ? row[e.cell.header.name]\n            : String(row[e.cell.header.name]).trim();\n        var value = self.blankValues.includes(cellValue)\n          ? self.attributes.blanksText\n          : cellValue;\n\n        if (items[value] || count > self.attributes.maxAutoCompleteItems) {\n          return;\n        }\n        count += 1;\n        items[value] = {\n          title: self.formatters[e.cell.header.type || 'string']({\n            cell: { value: value },\n          }),\n          click: function (e) {\n            filterInput.value = value;\n            e.stopPropagation();\n            filterInput.dispatchEvent(new Event('keyup'));\n            self.disposeAutocomplete();\n            return;\n          },\n        };\n      });\n\n      if (Object.keys(items).indexOf(self.attributes.blanksText) !== -1) {\n        blanksItem.push(items[self.attributes.blanksText]);\n        delete items[self.attributes.blanksText];\n      }\n\n      return blanksItem.concat(\n        Object.keys(items).map(function (key) {\n          return items[key];\n        }),\n      );\n    }\n\n    function createAutoCompleteContext(ev) {\n      if (ev && ['ArrowDown', 'ArrowUp', 'Enter', 'Tab'].includes(ev.key)) {\n        return;\n      }\n\n      var autoCompleteItems = fillAutoComplete();\n\n      iRect = filterInput.getBoundingClientRect();\n      if (autoCompleteContext) {\n        autoCompleteContext.dispose();\n        autoCompleteContext = undefined;\n      }\n      autoCompleteContext = createContextMenu(\n        e,\n        {\n          left: iRect.left,\n          top: iRect.top,\n          right: iRect.right,\n          bottom: iRect.bottom,\n          height: iRect.height,\n          width: iRect.width,\n        },\n        autoCompleteItems,\n        { inputDropdown: true },\n      );\n      autoCompleteContext.selectedIndex = 0;\n    }\n    self.createInlineStyle(filterLabel, 'canvas-datagrid-context-menu-label');\n    self.createInlineStyle(\n      filterAutoCompleteButton,\n      'canvas-datagrid-context-menu-filter-button',\n    );\n    self.createInlineStyle(\n      filterInput,\n      'canvas-datagrid-context-menu-filter-input',\n    );\n    checkRegExpErrorState();\n    filterInput.onclick = self.disposeAutocomplete;\n    filterInput.addEventListener('keydown', function (e) {\n      if (e.key === 'ArrowDown') {\n        autoCompleteContext.selectedIndex += 1;\n      }\n\n      if (e.key === 'ArrowUp') {\n        autoCompleteContext.selectedIndex -= 1;\n      }\n\n      if (e.key === 'Enter') {\n        autoCompleteContext.clickIndex(autoCompleteContext.selectedIndex);\n        self.disposeContextMenu();\n      }\n\n      if (e.key === 'Tab') {\n        autoCompleteContext.clickIndex(autoCompleteContext.selectedIndex);\n        e.preventDefault();\n      }\n\n      if (e.key === 'Escape') {\n        self.disposeContextMenu();\n      }\n    });\n    filterInput.addEventListener('keyup', function () {\n      self.setFilter(e.cell.header.name, filterInput.value);\n    });\n    filterInput.addEventListener('keyup', createAutoCompleteContext);\n    ['focus', 'blur', 'keydown', 'keyup', 'change'].forEach(function (en) {\n      filterInput.addEventListener(en, checkRegExpErrorState);\n    });\n    filterInput.value = e.cell.header\n      ? self.columnFilters[e.cell.header.name] || ''\n      : '';\n    filterLabel.innerHTML = self.attributes.filterOptionText.replace(/%s/g, n);\n    filterAutoCompleteButton.onclick = function () {\n      if (autoCompleteContext) {\n        return self.disposeAutocomplete();\n      }\n      createAutoCompleteContext();\n    };\n    filterAutoCompleteButton.innerHTML = self.style.contextFilterButtonHTML;\n    filterContainer.addEventListener('click', function (e) {\n      return e.stopPropagation();\n    });\n    filterContainer.appendChild(filterLabel);\n    filterContainer.appendChild(filterInput);\n    filterContainer.appendChild(filterAutoCompleteButton);\n    e.items.push({\n      title: filterContainer,\n    });\n    if (Object.keys(self.columnFilters).length) {\n      Object.keys(self.columnFilters).forEach(function (cf) {\n        var h = self.getHeaderByName(cf);\n        e.items.push({\n          title: self.attributes.removeFilterOptionText.replace(\n            /%s/g,\n            h.title || h.name,\n          ),\n          click: function removeFilterClick(e) {\n            e.preventDefault();\n            self.setFilter(cf, '');\n            self.controlInput.focus();\n          },\n        });\n      });\n    }\n  }\n  function addDefaultContextMenuItem(e) {\n    var isNormalCell =\n      !(\n        e.cell.isBackground ||\n        e.cell.isColumnHeaderCellCap ||\n        e.cell.isScrollBar ||\n        e.cell.isCorner ||\n        e.cell.isRowHeader\n      ) && e.cell.header;\n    if (self.attributes.showFilter && isNormalCell) {\n      createFilterContextMenuItems(e);\n    }\n    if (\n      self.attributes.showCopy &&\n      self.selections.reduce(function (p, r) {\n        return p + r.length;\n      }, 0) > 0\n    ) {\n      e.items.push({\n        title: self.attributes.copyText,\n        click: function () {\n          document.execCommand('copy');\n          self.disposeContextMenu();\n          self.controlInput.focus();\n        },\n      });\n    }\n    if (self.attributes.showPaste && self.clipBoardData) {\n      e.items.push({\n        title: self.attributes.pasteText,\n        click: function () {\n          self.paste(self.clipBoardData, e.cell.columnIndex, e.cell.rowIndex);\n          self.draw();\n        },\n      });\n    }\n    if (self.attributes.showColumnSelector) {\n      e.items.push({\n        title: self.attributes.columnSelectorText,\n        items: function () {\n          var d = [];\n          self.getSchema().forEach(function (column) {\n            function toggleColumnVisibility(e) {\n              column.hidden = !column.hidden;\n              self.dispatchEvent('togglecolumn', {\n                column: column,\n                hidden: column.hidden,\n              });\n              e.preventDefault();\n              self.stopPropagation(e);\n              self.disposeContextMenu();\n              self.resize(true);\n              self.setStorageData();\n            }\n            var el = document.createElement('div');\n            applyContextItemStyle(el);\n            el.addEventListener('touchstart', toggleColumnVisibility);\n            el.addEventListener('click', toggleColumnVisibility);\n            el.innerHTML =\n              (column.hidden\n                ? self.attributes.columnSelectorHiddenText\n                : self.attributes.columnSelectorVisibleText) +\n              (column.title || column.name);\n            d.push({\n              title: el,\n            });\n          });\n          return d;\n        },\n      });\n      if (e.cell && e.cell.header && e.cell.columnIndex > -1) {\n        e.items.push({\n          title: self.attributes.hideColumnText.replace(\n            /%s/gi,\n            e.cell.header.title || e.cell.header.name,\n          ),\n          click: function (ev) {\n            self.getSchema()[e.cell.columnIndex].hidden = true;\n            ev.preventDefault();\n            self.stopPropagation(ev);\n            self.disposeContextMenu();\n            self.setStorageData();\n            setTimeout(function () {\n              self.resize(true);\n            }, 10);\n          },\n        });\n      }\n    }\n    if (\n      self.attributes.saveAppearance &&\n      self.attributes.showClearSettingsOption &&\n      (Object.keys(self.sizes.rows).length > 0 ||\n        Object.keys(self.sizes.columns).length > 0)\n    ) {\n      e.items.push({\n        title: self.attributes.clearSettingsOptionText,\n        click: function (e) {\n          e.preventDefault();\n          self.sizes.rows = {};\n          self.sizes.columns = {};\n          self.createRowOrders();\n          self.createColumnOrders();\n          self.storedSettings = undefined;\n          self.dispatchEvent('resizecolumn', {\n            columnWidth: self.style.cellWidth,\n          });\n          self.dispatchEvent('resizerow', {\n            cellHeight: self.style.cellHeight,\n          });\n          self.setStorageData();\n          self.resize(true);\n          self.disposeContextMenu();\n          self.controlInput.focus();\n        },\n      });\n    }\n    if (\n      self.attributes.allowSorting &&\n      self.attributes.showOrderByOption &&\n      isNormalCell\n    ) {\n      e.items.push({\n        title: self.attributes.showOrderByOptionTextAsc.replace(\n          '%s',\n          e.cell.header.title || e.cell.header.name,\n        ),\n        click: function (ev) {\n          ev.preventDefault();\n          self.order(e.cell.header.name, 'asc');\n          self.controlInput.focus();\n        },\n      });\n      e.items.push({\n        title: self.attributes.showOrderByOptionTextDesc.replace(\n          '%s',\n          e.cell.header.title || e.cell.header.name,\n        ),\n        click: function (ev) {\n          ev.preventDefault();\n          self.order(e.cell.header.name, 'desc');\n          self.disposeContextMenu();\n          self.controlInput.focus();\n        },\n      });\n    }\n  }\n  self.disposeAutocomplete = function () {\n    if (autoCompleteContext) {\n      autoCompleteContext.dispose();\n      autoCompleteContext = undefined;\n    }\n  };\n  self.disposeContextMenu = function () {\n    document.removeEventListener('click', self.disposeContextMenu);\n    zIndexTop = self.style.contextMenuZIndex;\n    self.disposeAutocomplete();\n    if (self.contextMenu) {\n      self.contextMenu.dispose();\n    }\n    self.contextMenu = undefined;\n  };\n  self.contextmenuEvent = function (e, overridePos) {\n    if (!self.hasFocus && e.target !== self.canvas) {\n      return;\n    }\n    function createDiposeEvent() {\n      requestAnimationFrame(function () {\n        document.addEventListener('click', self.disposeContextMenu);\n        document.removeEventListener('mouseup', createDiposeEvent);\n      });\n    }\n    var contextPosition,\n      items = [],\n      pos = overridePos || self.getLayerPos(e),\n      ev = {\n        NativeEvent: e,\n        cell: self.getCellAt(pos.x, pos.y),\n        items: items,\n      };\n    if (!ev.cell.isGrid) {\n      addDefaultContextMenuItem(ev);\n    }\n    if (self.dispatchEvent('contextmenu', ev)) {\n      return;\n    }\n    if (!ev.cell.isGrid) {\n      if (self.contextMenu) {\n        self.disposeContextMenu();\n      }\n      contextPosition = {\n        left:\n          pos.x +\n          pos.rect.left +\n          self.style.contextMenuMarginLeft +\n          self.canvasOffsetLeft,\n        top:\n          pos.y +\n          pos.rect.top +\n          self.style.contextMenuMarginTop +\n          self.canvasOffsetTop,\n        right: ev.cell.width + ev.cell.x + pos.rect.left,\n        bottom: ev.cell.height + ev.cell.y + pos.rect.top,\n        height: ev.cell.height,\n        width: ev.cell.width,\n      };\n      if (self.mobile) {\n        contextPosition.left = self.style.mobileContextMenuMargin + 'px';\n        contextPosition.width =\n          self.width - self.style.mobileContextMenuMargin * 2 + 'px';\n      }\n      self.contextMenu = createContextMenu(ev, contextPosition, items);\n      document.addEventListener('mouseup', createDiposeEvent);\n      e.preventDefault();\n    }\n  };\n  return;\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  self.getClippingRect = function (ele) {\n    var boundingRect = self.position(self.parentNode),\n      eleRect = self.position(ele),\n      s = self.scrollOffset(self.canvas),\n      clipRect = {\n        x: 0,\n        y: 0,\n        h: 0,\n        w: 0,\n      },\n      parentRect = {\n        x: -Infinity,\n        y: -Infinity,\n        h: Infinity,\n        w: Infinity,\n      },\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth = self.getRowHeaderCellWidth();\n    boundingRect.top -= s.top;\n    boundingRect.left -= s.left;\n    eleRect.top -= s.top;\n    eleRect.left -= s.left;\n    clipRect.h =\n      boundingRect.top +\n      boundingRect.height -\n      ele.offsetTop -\n      self.style.scrollBarWidth;\n    clipRect.w =\n      boundingRect.left +\n      boundingRect.width -\n      ele.offsetLeft -\n      self.style.scrollBarWidth;\n    clipRect.x = boundingRect.left + eleRect.left * -1 + rowHeaderCellWidth;\n    clipRect.y = boundingRect.top + eleRect.top * -1 + columnHeaderCellHeight;\n    return {\n      x: clipRect.x > parentRect.x ? clipRect.x : parentRect.x,\n      y: clipRect.y > parentRect.y ? clipRect.y : parentRect.y,\n      h: clipRect.h < parentRect.h ? clipRect.h : parentRect.h,\n      w: clipRect.w < parentRect.w ? clipRect.w : parentRect.w,\n    };\n  };\n  self.clipElement = function (ele) {\n    var clipRect = self.getClippingRect(ele);\n    if (clipRect.w < 0) {\n      clipRect.w = 0;\n    }\n    if (clipRect.h < 0) {\n      clipRect.h = 0;\n    }\n    ele.style.clip =\n      'rect(' +\n      clipRect.y +\n      'px,' +\n      clipRect.w +\n      'px,' +\n      clipRect.h +\n      'px,' +\n      clipRect.x +\n      'px' +\n      ')';\n    // INFO https://developer.mozilla.org/en-US/docs/Web/CSS/clip\n    // clip has been \"deprecated\" for clipPath.  Of course nothing but chrome\n    // supports clip path, so we'll keep using clip until someday clipPath becomes\n    // more widely support.  The code below works correctly, but setting clipPath and clip\n    // at the same time has undesirable results.\n    // ele.style.clipPath = 'polygon('\n    //     + clipRect.x + 'px ' + clipRect.y + 'px,'\n    //     + clipRect.x + 'px ' + clipRect.h + 'px,'\n    //     + clipRect.w + 'px ' + clipRect.h + 'px,'\n    //     + clipRect.w + 'px ' + clipRect.y + 'px'\n    //     + ')';\n  };\n  self.scrollOffset = function (e) {\n    var x = 0,\n      y = 0,\n      scrollingElement = document.scrollingElement || {\n        scrollLeft: 0,\n        scrollTop: 0,\n      };\n    while (\n      e.parentNode &&\n      e.nodeName !== 'CANVAS-DATAGRID' &&\n      e !== self.intf\n    ) {\n      if (\n        e.nodeType !== 'canvas-datagrid-tree' &&\n        e.nodeType !== 'canvas-datagrid-cell'\n      ) {\n        x -= e.scrollLeft;\n        y -= e.scrollTop;\n      }\n      e = e.parentNode;\n    }\n    return {\n      left: x - scrollingElement.scrollLeft,\n      top: y - scrollingElement.scrollTop,\n    };\n  };\n  self.resizeEditInput = function () {\n    if (self.input && self.input.editCell) {\n      var pos = self.canvas.getBoundingClientRect(),\n        s = self.scrollOffset(self.intf),\n        bm = self.style.gridBorderCollapse === 'collapse' ? 1 : 2,\n        borderWidth = self.style.cellBorderWidth * bm,\n        cell = self.getVisibleCellByIndex(\n          self.input.editCell.columnIndex,\n          self.input.editCell.rowIndex,\n        ) || { x: -100, y: -100, height: 0, width: 0 };\n      if (self.mobile) {\n        self.input.style.left = '0';\n        self.input.style.top =\n          self.height -\n          self.style.mobileEditInputHeight -\n          borderWidth -\n          1 +\n          'px';\n        self.input.style.height = self.style.mobileEditInputHeight + 'px';\n        self.input.style.width = self.width - borderWidth - 1 + 'px';\n        return;\n      }\n      self.input.style.left =\n        pos.left + cell.x + self.canvasOffsetLeft - s.left + 'px';\n      self.input.style.top =\n        pos.top +\n        cell.y -\n        self.style.cellBorderWidth +\n        self.canvasOffsetTop -\n        s.top +\n        'px';\n      self.input.style.height = cell.height - borderWidth + 'px';\n      self.input.style.width = cell.width - self.style.cellPaddingLeft + 'px';\n      self.clipElement(self.input);\n    }\n  };\n  self.position = function (e, ignoreScrollOffset) {\n    var x = 0,\n      y = 0,\n      s = e,\n      h,\n      w;\n    while (e.offsetParent && e.nodeName !== 'CANVAS-DATAGRID') {\n      x += e.offsetLeft;\n      y += e.offsetTop;\n      h = e.offsetHeight;\n      w = e.offsetWidth;\n      e = e.offsetParent;\n    }\n    if (ignoreScrollOffset) {\n      return { left: x, top: y, height: h, width: w };\n    }\n    e = s;\n    s = self.scrollOffset(e);\n    return { left: x + s.left, top: y + s.top, height: h, width: w };\n  };\n  self.getLayerPos = function (e) {\n    var rect = self.canvas.getBoundingClientRect(),\n      pos = {\n        x: e.clientX - rect.left,\n        y: e.clientY - rect.top,\n      };\n    if (self.isChildGrid) {\n      pos.x -= self.canvasOffsetLeft;\n      pos.y -= self.canvasOffsetTop;\n    }\n    return {\n      x: pos.x,\n      y: pos.y,\n      rect: rect,\n    };\n  };\n  /**\n   * Ends editing, optionally aborting the edit.\n   * @memberof canvasDatagrid\n   * @name endEdit\n   * @method\n   * @param {boolean} abort When true, abort the edit.\n   */\n  self.endEdit = function (abort) {\n    var cell = self.input.editCell,\n      y = cell.rowIndex;\n    function abortEdit() {\n      abort = true;\n    }\n    if (\n      self.dispatchEvent('beforeendedit', {\n        cell: cell,\n        newValue: self.input.value,\n        oldValue: cell.value,\n        abort: abortEdit,\n        input: self.input,\n      })\n    ) {\n      return false;\n    }\n    if (self.input.value !== cell.value && !abort) {\n      self.changes[y] = self.changes[y] || {};\n      self.changes[y][cell.header.name] = self.input.value;\n      if (!cell.data) {\n        self.originalData[cell.boundRowIndex] = {};\n        cell.data = self.originalData[cell.boundRowIndex];\n      }\n      cell.data[cell.header.name] = self.input.value;\n      if (y === self.viewData.length) {\n        if (\n          self.dispatchEvent('newrow', {\n            value: self.input.value,\n            defaultValue: cell.value,\n            aborted: abort,\n            cell: cell,\n            input: self.input,\n          })\n        ) {\n          return false;\n        }\n        self.addRow(cell.data);\n        self.createNewRowData();\n      }\n      self.draw(true);\n    }\n    if (self.input.parentNode) {\n      self.input.parentNode.removeChild(self.input);\n    }\n    self.intf.focus();\n    self.dispatchEvent('endedit', {\n      cell: cell,\n      value: self.input.value,\n      aborted: abort,\n      input: self.input,\n    });\n    self.input = undefined;\n    return true;\n  };\n  /**\n   * Begins editing at cell x, row y.\n   * @memberof canvasDatagrid\n   * @name beginEditAt\n   * @method\n   * @param {number} x The column index of the cell to edit.\n   * @param {number} y The row index of the cell to edit.\n   * @param {boolean} inEnterMode If true, starting to type in cell will replace the\n   * cell's previous value instead of appending, and using the arrow keys will allow\n   * the user to navigate to adjacent cells instead of moving the text cursor around\n   * (default is false, and means user is in 'edit' mode).\n   */\n  self.beginEditAt = function (x, y, NativeEvent, inEnterMode = false) {\n    if (!self.attributes.editable) {\n      return;\n    }\n    if (self.input) {\n      self.endEdit();\n    }\n    var cell = self.getVisibleCellByIndex(x, y),\n      s = self.getSchema(),\n      adjacentCells,\n      enumItems,\n      enu,\n      option,\n      valueInEnum;\n    if (!(cell && cell.header)) {\n      return;\n    }\n    //HACK for IE10, does not like literal enum\n    enu = cell.header['enum'];\n    if (\n      self.dispatchEvent('beforebeginedit', {\n        cell: cell,\n        NativeEvent: NativeEvent,\n      })\n    ) {\n      return false;\n    }\n    self.scrollIntoView(x, y);\n    self.setActiveCell(x, y);\n    adjacentCells = self.getAdjacentCells();\n    if (enu) {\n      self.input = document.createElement('select');\n    } else {\n      self.input = document.createElement(\n        self.attributes.multiLine ? 'textarea' : 'input',\n      );\n    }\n    cell = self.getVisibleCellByIndex(x, y);\n    //HACK on mobile devices sometimes edit can begin without the cell being in view, I don't know how.\n    if (!cell) {\n      return;\n    }\n    if (enu) {\n      // add enums\n      if (typeof enu === 'function') {\n        enumItems = enu.apply(self.intf, [{ cell: cell }]);\n      } else if (Array.isArray(enu)) {\n        enumItems = enu;\n      }\n      enumItems.forEach(function (e) {\n        var i = document.createElement('option'),\n          val,\n          title;\n        if (Array.isArray(e)) {\n          val = e[0];\n          title = e[1];\n        } else {\n          val = e;\n          title = e;\n        }\n        if (val === cell.value) {\n          valueInEnum = true;\n        }\n        i.value = val;\n        i.innerHTML = title;\n        self.input.appendChild(i);\n      });\n      if (!valueInEnum) {\n        option = document.createElement('option');\n        option.value = cell.value;\n        option.innerHTML = cell.value;\n        self.input.appendChild(option);\n      }\n      self.input.addEventListener('change', function () {\n        self.endEdit();\n        self.draw(true);\n      });\n    }\n    // if the user has not prevented the default action, append to the body\n    if (\n      !self.dispatchEvent('appendeditinput', { cell: cell, input: self.input })\n    ) {\n      document.body.appendChild(self.input);\n    }\n    self.createInlineStyle(\n      self.input,\n      self.mobile\n        ? 'canvas-datagrid-edit-mobile-input'\n        : 'canvas-datagrid-edit-input',\n    );\n    self.input.style.position = 'absolute';\n    self.input.editCell = cell;\n    self.resizeEditInput();\n    self.input.style.zIndex = self.style.editCellZIndex;\n    self.input.style.fontSize =\n      parseInt(self.style.editCellFontSize, 10) * self.scale + 'px';\n\n    var cellValueIsEmpty = [null, undefined].indexOf(cell.value) !== -1;\n    var shouldClearCellValue = cellValueIsEmpty || inEnterMode;\n\n    self.input.value = shouldClearCellValue ? '' : cell.value;\n    self.input.focus();\n    self.input.addEventListener('click', self.stopPropagation);\n    self.input.addEventListener('dblclick', self.stopPropagation);\n    self.input.addEventListener('mouseup', self.stopPropagation);\n    self.input.addEventListener('mousedown', self.stopPropagation);\n    self.input.addEventListener('keydown', function (e) {\n      var nx = cell.columnIndex,\n        ny = cell.rowIndex;\n\n      if (e.key === 'Escape') {\n        self.endEdit(true); // end edit and abort the value change\n        self.draw(true);\n      } else if (e.key === 'Enter' && self.attributes.multiLine && e.altKey) {\n        self.input.value = self.input.value + '\\n';\n        self.input.scrollTop = self.input.scrollHeight;\n      } else if (e.key === 'Enter') {\n        self.endEdit();\n\n        // Move to cell in next or previous row\n        var nextRowIndex = e.shiftKey\n          ? Math.max(0, ny - 1)\n          : Math.min(ny + 1, self.viewData.length - 1);\n\n        if (nextRowIndex !== ny) {\n          self.scrollIntoView(nx, nextRowIndex);\n          self.setActiveCell(nx, nextRowIndex);\n        }\n\n        self.draw(true);\n      } else if (\n        ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight'].includes(e.key) &&\n        inEnterMode\n      ) {\n        switch (e.key) {\n          case 'ArrowUp':\n            ny = Math.max(0, ny - 1);\n            break;\n          case 'ArrowDown':\n            ny = Math.min(ny + 1, self.viewData.length - 1);\n            break;\n          case 'ArrowLeft':\n            nx = Math.max(nx - 1, 0);\n            break;\n          case 'ArrowRight':\n            nx = adjacentCells.right;\n            break;\n        }\n\n        self.endEdit();\n\n        self.scrollIntoView(nx, ny);\n        self.setActiveCell(nx, ny);\n\n        self.draw(true);\n      } else if (e.key === 'Tab') {\n        e.preventDefault();\n        if (!self.endEdit()) {\n          return;\n        }\n        if (e.shiftKey) {\n          nx = adjacentCells.left;\n        } else {\n          nx = adjacentCells.right;\n        }\n        if (adjacentCells.left === x && e.shiftKey) {\n          nx = adjacentCells.last;\n          ny -= 1;\n        }\n        if (adjacentCells.right === x && !e.shiftKey) {\n          nx = adjacentCells.first;\n          ny += 1;\n        }\n        if (ny < 0) {\n          ny = self.viewData.length - 1;\n        }\n        if (ny > self.viewData.length - 1) {\n          ny = 0;\n        }\n        self.scrollIntoView(nx, ny);\n        self.beginEditAt(nx, ny, e);\n      }\n    });\n\n    self.dispatchEvent('beginedit', { cell: cell, input: self.input });\n  };\n  self.createInlineStyle = function (el, className) {\n    var css = {\n      'canvas-datagrid-context-menu-filter-input': {\n        height: '19px',\n        verticalAlign: 'bottom',\n        marginLeft: '2px',\n        padding: '0',\n        background: self.style.contextFilterInputBackground,\n        color: self.style.contextFilterInputColor,\n        border: self.style.contextFilterInputBorder,\n        borderRadius: self.style.contextFilterInputBorderRadius,\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextFilterInputFontFamily,\n        fontSize: self.style.contextFilterInputFontSize,\n      },\n      'canvas-datagrid-context-menu-filter-button': {\n        height: '19px',\n        verticalAlign: 'bottom',\n        marginLeft: '2px',\n        padding: '0',\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextFilterButtonBorder,\n        borderRadius: self.style.contextFilterButtonBorderRadius,\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFilterButtonFontFamily,\n        fontSize: self.style.contextMenuFilterButtonFontSize,\n      },\n      'canvas-datagrid-context-child-arrow': {\n        cssFloat: 'right',\n        color: self.style.childContextMenuArrowColor,\n        fontSize: self.style.contextMenuChildArrowFontSize,\n        fontFamily: self.style.contextMenuFontFamily,\n        verticalAlign: 'middle',\n      },\n      'canvas-datagrid-autocomplete': {\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextMenuBorder,\n        padding: self.style.contextMenuPadding,\n        borderRadius: self.style.contextMenuBorderRadius,\n        opacity: self.style.contextMenuOpacity,\n        position: 'absolute',\n        zIndex: 9999,\n        overflow: 'hidden',\n      },\n      'canvas-datagrid-autocomplete-item': {\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n      },\n      'canvas-datagrid-autocomplete-item:hover': {\n        background: self.style.contextMenuHoverBackground,\n        color: self.style.contextMenuHoverColor,\n      },\n      'canvas-datagrid-canvas': {\n        position: 'absolute',\n        zIndex: '-1',\n      },\n      'canvas-datagrid': {\n        display: 'block',\n      },\n      'canvas-datagrid-control-input': {\n        position: 'fixed',\n        top: '-5px',\n        left: '-5px',\n        border: 'none',\n        opacity: '0',\n        cursor: 'pointer',\n        width: '1px',\n        height: '1px',\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n      },\n      'canvas-datagrid-edit-mobile-input': {\n        boxSizing: 'content-box',\n        outline: 'none',\n        margin: '0',\n        padding: '0 0 0 0',\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.mobileEditFontFamily,\n        fontSize: self.style.mobileEditFontSize,\n        border: self.style.editCellBorder,\n        color: self.style.editCellColor,\n        background: self.style.editCellBackgroundColor,\n        appearance: 'none',\n        webkitAppearance: 'none',\n        mozAppearance: 'none',\n        borderRadius: '0',\n      },\n      'canvas-datagrid-edit-input': {\n        boxSizing: 'content-box',\n        outline: 'none',\n        margin: '0',\n        padding: '0 0 0 ' + self.style.editCellPaddingLeft + 'px',\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.editCellFontFamily,\n        fontSize: self.style.editCellFontSize,\n        boxShadow: self.style.editCellBoxShadow,\n        border: self.style.editCellBorder,\n        color: self.style.editCellColor,\n        background: self.style.editCellBackgroundColor,\n        appearance: 'none',\n        webkitAppearance: 'none',\n        mozAppearance: 'none',\n        borderRadius: '0',\n      },\n      'canvas-datagrid-context-menu-item-mobile': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        color: 'inherit',\n        background: 'inherit',\n        margin: self.style.contextMenuItemMargin,\n        borderRadius: self.style.contextMenuItemBorderRadius,\n        verticalAlign: 'middle',\n      },\n      'canvas-datagrid-context-menu-item': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        color: 'inherit',\n        background: 'inherit',\n        margin: self.style.contextMenuItemMargin,\n        borderRadius: self.style.contextMenuItemBorderRadius,\n        verticalAlign: 'middle',\n      },\n      'canvas-datagrid-context-menu-item:hover': {\n        background: self.style.contextMenuHoverBackground,\n        color: self.style.contextMenuHoverColor,\n      },\n      'canvas-datagrid-context-menu-label': {\n        margin: self.style.contextMenuLabelMargin,\n        display: self.style.contextMenuLabelDisplay,\n        minWidth: self.style.contextMenuLabelMinWidth,\n        maxWidth: self.style.contextMenuLabelMaxWidth,\n      },\n      'canvas-datagrid-context-menu-mobile': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextMenuBorder,\n        padding: self.style.contextMenuPadding,\n        borderRadius: self.style.contextMenuBorderRadius,\n        opacity: self.style.contextMenuOpacity,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n      },\n      'canvas-datagrid-context-menu': {\n        lineHeight: 'normal',\n        fontWeight: 'normal',\n        fontFamily: self.style.contextMenuFontFamily,\n        fontSize: self.style.contextMenuFontSize,\n        background: self.style.contextMenuBackground,\n        color: self.style.contextMenuColor,\n        border: self.style.contextMenuBorder,\n        padding: self.style.contextMenuPadding,\n        borderRadius: self.style.contextMenuBorderRadius,\n        opacity: self.style.contextMenuOpacity,\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        cursor: self.style.contextMenuCursor,\n      },\n      'canvas-datagrid-invalid-search-regExp': {\n        background: self.style.contextMenuFilterInvalidExpresion,\n      },\n    };\n    if (css[className]) {\n      Object.keys(css[className]).map(function (prop) {\n        el.style[prop] = css[className][prop];\n      });\n    }\n    return;\n  };\n  self.appendTo = function (e) {\n    self.parentNode = e;\n    self.setDom();\n  };\n  self.setDom = function () {\n    if (self.isChildGrid) {\n      self.parentGrid = self.parentNode.parentGrid;\n      self.ctx = self.parentGrid.context;\n      self.canvas = self.parentGrid.canvas;\n      self.controlInput = self.parentGrid.controlInput;\n      self.eventParent = self.canvas;\n    } else {\n      self.controlInput = self.controlInput || document.createElement('input');\n      self.controlInput.onblur = self.intf.blur;\n      self.createInlineStyle(\n        self.controlInput,\n        'canvas-datagrid-control-input',\n      );\n      self.isChildGrid = false;\n      self.parentDOMNode = self.parentNode;\n      self.parentIsCanvas = /^canvas$/i.test(self.parentDOMNode.tagName);\n      if (self.parentIsCanvas) {\n        self.canvas = self.parentDOMNode;\n      } else {\n        self.canvas = document.createElement('canvas');\n        self.parentDOMNode.appendChild(self.canvas);\n      }\n      document.body.appendChild(self.controlInput);\n      self.createInlineStyle(self.canvas, 'canvas-datagrid');\n      self.ctx = self.canvas.getContext('2d');\n      self.ctx.textBaseline = 'alphabetic';\n      self.eventParent = self.canvas;\n    }\n    self.parentNodeStyle = self.canvas.style;\n    self.controlInput.setAttribute('readonly', true);\n    self.controlInput.addEventListener('blur', function (e) {\n      if (e.target !== self.canvas) {\n        self.hasFocus = false;\n      }\n    });\n    self.eventParent.addEventListener('scroll', self.resize, false);\n    self.eventParent.addEventListener('touchstart', self.touchstart, false);\n    self.eventParent.addEventListener('mouseup', self.mouseup, false);\n    self.eventParent.addEventListener('mousedown', self.mousedown, false);\n    self.eventParent.addEventListener('dblclick', self.dblclick, false);\n    self.eventParent.addEventListener('click', self.click, false);\n    self.eventParent.addEventListener('mousemove', self.mousemove);\n    self[self.isChildGrid ? 'parentGrid' : 'eventParent'].addEventListener(\n      'wheel',\n      self.scrollWheel,\n      false,\n    );\n    self.canvas.addEventListener('contextmenu', self.contextmenuEvent, false);\n    self.controlInput.addEventListener('copy', self.copy);\n    self.controlInput.addEventListener('cut', self.cut);\n    self.controlInput.addEventListener('paste', self.paste);\n    self.controlInput.addEventListener('keypress', self.keypress, false);\n    self.controlInput.addEventListener('keyup', self.keyup, false);\n    self.controlInput.addEventListener('keydown', self.keydown, false);\n    window.addEventListener('resize', self.resize);\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self) {\n  /**\n   * Converts a integer into a letter A - ZZZZZ...\n   * @memberof canvasDatagrid\n   * @name integerToAlpha\n   * @method\n   * @param {column} n The number to convert.\n   */\n  self.integerToAlpha = function (n) {\n    var ordA = 'a'.charCodeAt(0),\n      ordZ = 'z'.charCodeAt(0),\n      len = ordZ - ordA + 1,\n      s = '';\n    while (n >= 0) {\n      s = String.fromCharCode((n % len) + ordA) + s;\n      n = Math.floor(n / len) - 1;\n    }\n    return s;\n  };\n  /**\n   * Inserts a new column before the specified index into the schema.\n   * @tutorial schema\n   * @memberof canvasDatagrid\n   * @name insertColumn\n   * @method\n   * @param {column} c The column to insert into the schema.\n   * @param {number} index The index of the column to insert before.\n   */\n  self.insertColumn = function (c, index) {\n    var s = self.getSchema();\n    if (s.length < index) {\n      throw new Error('Index is beyond the length of the schema.');\n    }\n    self.validateColumn(c, s);\n    s.splice(index, 0, c);\n\n    self.originalData.forEach(function (row) {\n      self.applyDefaultValue(row, c);\n    });\n    self.intf.schema = s;\n\n    self.refresh();\n  };\n  /**\n   * Deletes a column from the schema at the specified index.\n   * @memberof canvasDatagrid\n   * @name deleteColumn\n   * @tutorial schema\n   * @method\n   * @param {number} index The index of the column to delete.\n   */\n  self.deleteColumn = function (index) {\n    var schema = self.getSchema();\n\n    // remove data matching this column name from data\n    self.originalData.forEach(function (row) {\n      delete row[schema[index].name];\n    });\n\n    schema.splice(index, 1);\n    self.intf.schema = schema;\n\n    self.refresh();\n  };\n  /**\n   * Adds a new column into the schema.\n   * @tutorial schema\n   * @memberof canvasDatagrid\n   * @name addColumn\n   * @method\n   * @param {column} c The column to add to the schema.\n   */\n  self.addColumn = function (c) {\n    var s = self.getSchema();\n    self.validateColumn(c, s);\n    s.push(c);\n    self.originalData.forEach(function (row) {\n      self.applyDefaultValue(row, c);\n    });\n    self.intf.schema = s;\n\n    self.refresh();\n  };\n  /**\n   * Deletes a row from the dataset at the specified index.\n   * @memberof canvasDatagrid\n   * @name deleteRow\n   * @method\n   * @param {number} index The index of the row to delete.\n   */\n  self.deleteRow = function (index) {\n    self.originalData.splice(index, 1);\n    self.setFilter();\n    self.resize(true);\n  };\n  /**\n   * Inserts a new row into the dataset before the specified index.\n   * @memberof canvasDatagrid\n   * @name insertRow\n   * @method\n   * @param {object} d data.\n   * @param {number} index The index of the row to insert before.\n   */\n  self.insertRow = function (d, index) {\n    if (self.originalData.length < index) {\n      throw new Error('Index is beyond the length of the dataset.');\n    }\n    self.originalData.splice(index, 0, d);\n    self.getSchema().forEach(function (c) {\n      if (d[c.name] === undefined) {\n        self.applyDefaultValue(self.originalData[index], c);\n      }\n    });\n\n    // setFilter calls .refresh(), so we need not call it again:\n    self.setFilter();\n\n    self.resize(true);\n  };\n  /**\n   * Adds a new row into the dataset.\n   * @memberof canvasDatagrid\n   * @name addRow\n   * @method\n   * @param {object} d data.\n   */\n  self.addRow = function (d) {\n    self.originalData.push(d);\n    self.getSchema().forEach(function (c) {\n      if (d[c.name] === undefined) {\n        self.applyDefaultValue(\n          self.originalData[self.originalData.length - 1],\n          c,\n        );\n      }\n    });\n\n    // setFilter calls .refresh(), so we need not call it again:\n    self.setFilter();\n\n    self.resize(true);\n  };\n  /**\n   * Sets the height of a given row by index number.\n   * @memberof canvasDatagrid\n   * @name setRowHeight\n   * @method\n   * @param {number} rowIndex The index of the row to set.\n   * @param {number} height Height to set the row to.\n   */\n  self.setRowHeight = function (rowIndex, height) {\n    self.sizes.rows[rowIndex] = height;\n    self.draw(true);\n  };\n  /**\n   * Sets the width of a given column by index number.\n   * @memberof canvasDatagrid\n   * @name setColumnWidth\n   * @method\n   * @param {number} colIndex The index of the column to set.\n   * @param {number} width Width to set the column to.\n   */\n  self.setColumnWidth = function (colIndex, width) {\n    self.sizes.columns[colIndex] = width;\n    self.draw(true);\n  };\n  /**\n   * Removes any changes to the width of the columns due to user or api interaction, setting them back to the schema or style default.\n   * @memberof canvasDatagrid\n   * @name resetColumnWidths\n   * @tutorial schema\n   * @method\n   */\n  self.resetColumnWidths = function () {\n    self.sizes.columns = {};\n    self.draw(true);\n  };\n  /**\n   * Removes any changes to the height of the rows due to user or api interaction, setting them back to the schema or style default.\n   * @memberof canvasDatagrid\n   * @name resetRowHeights\n   * @tutorial schema\n   * @method\n   */\n  self.resetRowHeights = function () {\n    self.sizes.rows = {};\n    self.draw(true);\n  };\n  /**\n   * Sets the value of the filter.\n   * @memberof canvasDatagrid\n   * @name setFilter\n   * @method\n   * @param {string} column Name of the column to filter.\n   * @param {string} value The value to filter for.\n   */\n  self.setFilter = function (column, value) {\n    if (column === undefined && value === undefined) {\n      self.columnFilters = {};\n    } else if (column && (value === '' || value === undefined)) {\n      delete self.columnFilters[column];\n    } else {\n      self.columnFilters[column] = value;\n    }\n    self.refresh();\n  };\n  /**\n   * Returns the number of pixels to scroll down to line up with row rowIndex.\n   * @memberof canvasDatagrid\n   * @name findRowScrollTop\n   * @method\n   * @param {number} rowIndex The row index of the row to scroll find.\n   */\n  self.findRowScrollTop = function (rowIndex) {\n    if (self.scrollCache.y[rowIndex] === undefined) {\n      throw new RangeError(\n        `Row index ${rowIndex} out of range: ${self.scrollCache.y.length}.`,\n      );\n    }\n    return self.scrollCache.y[rowIndex];\n  };\n  /**\n   * Returns the number of pixels to scroll to the left to line up with column columnIndex.\n   * @memberof canvasDatagrid\n   * @name findColumnScrollLeft\n   * @method\n   * @param {number} columnIndex The column index of the column to find.\n   */\n  self.findColumnScrollLeft = function (columnIndex) {\n    var i = Math.max(columnIndex - 1, 0);\n    if (self.scrollCache.x[i] === undefined) {\n      throw new Error('Column index out of range.');\n    }\n    return (\n      self.scrollCache.x[i] -\n      self.getColummnWidth(self.orders.columns[columnIndex])\n    );\n  };\n  /**\n   * Scrolls to the cell at columnIndex x, and rowIndex y.  If you define both rowIndex and columnIndex additional calculations can be made to center the cell using the target cell's height and width.  Defining only one rowIndex or only columnIndex will result in simpler calculations.\n   * @memberof canvasDatagrid\n   * @name gotoCell\n   * @method\n   * @param {number} x The column index of the cell to scroll to.\n   * @param {number} y The row index of the cell to scroll to.\n   * @param {number} [offsetX=0] Percentage offset the cell should be from the left edge (not including headers).  The default is 0, meaning the cell will appear at the left edge. Valid values are 0 through 1. 1 = Left, 0 = Right, 0.5 = Center.\n   * @param {number} [offsetY=0] Percentage offset the cell should be from the top edge (not including headers).  The default is 0, meaning the cell will appear at the top edge. Valid values are 0 through 1. 1 = Bottom, 0 = Top, 0.5 = Center.\n   */\n  self.gotoCell = function (x, y, offsetX, offsetY) {\n    var targetX = x === undefined ? undefined : self.findColumnScrollLeft(x),\n      targetY = y === undefined ? undefined : self.findRowScrollTop(y),\n      cell,\n      sbw =\n        self.scrollBox.width -\n        (self.scrollBox.verticalBarVisible ? self.style.scrollBarWidth : 0),\n      sbh =\n        self.scrollBox.height -\n        (self.scrollBox.horizontalBarVisible ? self.style.scrollBarWidth : 0);\n    offsetX = offsetX === undefined ? 0 : offsetX;\n    offsetY = offsetY === undefined ? 0 : offsetY;\n    targetX -= sbw * offsetX;\n    targetY -= sbh * offsetY;\n    if (x !== undefined && y !== undefined) {\n      self.scrollBox.scrollTo(targetX, targetY);\n      requestAnimationFrame(function () {\n        cell = self.getVisibleCellByIndex(x, y);\n        // HACK: just don't offset if the target cell cannot be seen\n        // TODO: offset does not work on very small grids, not sure why\n        if (!cell) {\n          return;\n        }\n        targetX += cell.width * offsetX;\n        targetY += cell.height * offsetY;\n        self.scrollBox.scrollTo(targetX, targetY);\n      });\n    } else if (x !== undefined) {\n      self.scrollBox.scrollLeft = targetX;\n    } else if (y !== undefined) {\n      self.scrollBox.scrollTop = targetY;\n    }\n  };\n  /**\n   * Scrolls the row y.\n   * @memberof canvasDatagrid\n   * @name gotoRow\n   * @method\n   * @param {number} y The row index of the cell to scroll to.\n   */\n  self.gotoRow = function (y) {\n    self.gotoCell(0, y);\n  };\n  /**\n   * Scrolls the cell at cell x, row y into view if it is not already.\n   * @memberof canvasDatagrid\n   * @name scrollIntoView\n   * @method\n   * @param {number} x The column index of the cell to scroll into view.\n   * @param {number} y The row index of the cell to scroll into view.\n   * @param {number} [offsetX=0] Percentage offset the cell should be from the left edge (not including headers).  The default is 0, meaning the cell will appear at the left edge. Valid values are 0 through 1. 1 = Left, 0 = Right, 0.5 = Center.\n   * @param {number} [offsetY=0] Percentage offset the cell should be from the top edge (not including headers).  The default is 0, meaning the cell will appear at the top edge. Valid values are 0 through 1. 1 = Bottom, 0 = Top, 0.5 = Center.\n   */\n  self.scrollIntoView = function (x, y, offsetX, offsetY) {\n    if (\n      self.visibleCells.filter(function (cell) {\n        return (\n          (cell.rowIndex === y || y === undefined) &&\n          (cell.columnIndex === x || x === undefined) &&\n          cell.x > 0 &&\n          cell.y > 0 &&\n          cell.x + cell.width < self.width &&\n          cell.y + cell.height < self.height\n        );\n      }).length === 0\n    ) {\n      self.gotoCell(x, y, offsetX, offsetY);\n    }\n  };\n  /**\n   * Sets the active cell. Requires redrawing.\n   * @memberof canvasDatagrid\n   * @name setActiveCell\n   * @method\n   * @param {number} x The column index of the cell to set active.\n   * @param {number} y The row index of the cell to set active.\n   */\n  self.setActiveCell = function (x, y) {\n    if (x < 0) {\n      x = 0;\n    }\n    if (y < 0) {\n      y = 0;\n    }\n    self.activeCell = {\n      rowIndex: y,\n      columnIndex: x,\n    };\n  };\n  /**\n   * Removes the selection.\n   * @memberof canvasDatagrid\n   * @name selectNone\n   * @param {boolean} dontDraw Suppress the draw method after the selection change.\n   * @method\n   */\n  self.selectNone = function (dontDraw) {\n    self.selections = [];\n    self.dispatchEvent('selectionchanged', {\n      selectedData: self.getSelectedData(),\n      selections: self.selections,\n      selectionBounds: self.selectionBounds,\n    });\n    if (dontDraw) {\n      return;\n    }\n    self.draw();\n  };\n  /**\n   * Selects every visible cell.\n   * @memberof canvasDatagrid\n   * @name selectAll\n   * @param {boolean} dontDraw Suppress the draw method after the selection change.\n   * @method\n   */\n  self.selectAll = function (dontDraw) {\n    self.selectArea({\n      top: 0,\n      left: -1,\n      right: self.getSchema().length - 1,\n      bottom: self.viewData.length - 1,\n    });\n    if (dontDraw) {\n      return;\n    }\n    self.draw();\n  };\n  /**\n   * Returns true if the selected columnIndex is selected on every row.\n   * @memberof canvasDatagrid\n   * @name isColumnSelected\n   * @method\n   * @param {number} columnIndex The column index to check.\n   */\n  self.isColumnSelected = function (columnIndex) {\n    var colIsSelected = true;\n    self.viewData.forEach(function (row, rowIndex) {\n      if (\n        !self.selections[rowIndex] ||\n        self.selections[rowIndex].indexOf(self.orders.columns[columnIndex]) ===\n          -1\n      ) {\n        colIsSelected = false;\n      }\n    });\n    return colIsSelected;\n  };\n  /**\n   * Runs the defined method on each selected cell.\n   * @memberof canvasDatagrid\n   * @name forEachSelectedCell\n   * @method\n   * @param {number} fn The function to execute.  The signature of the function is: (data, rowIndex, columnName).\n   * @param {number} expandToRow When true the data in the array is expanded to the entire row.\n   */\n  self.forEachSelectedCell = function (fn, expandToRow) {\n    var d = [],\n      s = expandToRow ? self.getSchema() : self.getVisibleSchema(),\n      l = self.viewData.length;\n    self.selections.forEach(function (row, index) {\n      if (index === l) {\n        return;\n      }\n      if (row.length === 0) {\n        d[index] = null;\n        return;\n      }\n      d[index] = {};\n      row.forEach(function (col) {\n        if (col === -1 || !s[col]) {\n          return;\n        }\n        fn(self.viewData, index, s[col].name);\n      });\n    });\n  };\n  /**\n   * Selects a column.\n   * @memberof canvasDatagrid\n   * @name selectColumn\n   * @method\n   * @param {number} columnIndex The column index to select.\n   * @param {boolean} toggleSelectMode When true, behaves as if you were holding control/command when you clicked the column.\n   * @param {boolean} shift When true, behaves as if you were holding shift when you clicked the column.\n   * @param {boolean} supressSelectionchangedEvent When true, prevents the selectionchanged event from firing.\n   */\n  self.selectColumn = function (columnIndex, ctrl, shift, supressEvent) {\n    var s, e, x;\n    function addCol(i) {\n      self.viewData.forEach(function (row, rowIndex) {\n        self.selections[rowIndex] = self.selections[rowIndex] || [];\n        if (self.selections[rowIndex].indexOf(i) === -1) {\n          self.selections[rowIndex].push(i);\n        }\n      });\n    }\n    function removeCol(i) {\n      self.viewData.forEach(function (row, rowIndex) {\n        self.selections[rowIndex] = self.selections[rowIndex] || [];\n        if (self.selections[rowIndex].indexOf(i) !== -1) {\n          self.selections[rowIndex].splice(\n            self.selections[rowIndex].indexOf(i),\n            1,\n          );\n        }\n      });\n    }\n    if (shift) {\n      if (!self.activeCell) {\n        return;\n      }\n      s = Math.min(self.activeCell.columnIndex, columnIndex);\n      e = Math.max(self.activeCell.columnIndex, columnIndex);\n      for (x = s; e > x; x += 1) {\n        addCol(x);\n      }\n    }\n    if (!ctrl && !shift) {\n      self.selections = [];\n      self.activeCell.columnIndex = columnIndex;\n      self.activeCell.rowIndex = self.scrollIndexTop;\n    }\n    if (ctrl && self.isColumnSelected(columnIndex)) {\n      removeCol(columnIndex);\n    } else {\n      addCol(columnIndex);\n    }\n    if (supressEvent) {\n      return;\n    }\n    self.dispatchEvent('selectionchanged', {\n      selectedData: self.getSelectedData(),\n      selections: self.selections,\n      selectionBounds: self.getSelectionBounds(),\n    });\n  };\n  /**\n   * Selects a row.\n   * @memberof canvasDatagrid\n   * @name selectRow\n   * @method\n   * @param {number} rowIndex The row index to select.\n   * @param {boolean} ctrl When true, behaves as if you were holding control/command when you clicked the row.\n   * @param {boolean} shift When true, behaves as if you were holding shift when you clicked the row.\n   * @param {boolean} supressSelectionchangedEvent When true, prevents the selectionchanged event from firing.\n   */\n  self.selectRow = function (rowIndex, ctrl, shift, supressEvent) {\n    var x,\n      st,\n      en,\n      s = self.getVisibleSchema();\n    function de() {\n      if (supressEvent) {\n        return;\n      }\n      self.dispatchEvent('selectionchanged', {\n        selectedData: self.getSelectedData(),\n        selections: self.selections,\n        selectionBounds: self.selectionBounds,\n      });\n    }\n    function addRow(ri) {\n      self.selections[ri] = [];\n      self.selections[ri].push(-1);\n      s.forEach(function (col, index) {\n        self.selections[ri].push(self.orders.columns.indexOf(col.index));\n      });\n    }\n    if (self.dragAddToSelection === false || self.dragObject === undefined) {\n      if (\n        self.selections[rowIndex] &&\n        self.selections[rowIndex].length - 1 === s.length\n      ) {\n        if (ctrl) {\n          self.selections[rowIndex] = [];\n          de();\n          return;\n        }\n      }\n    }\n    if (self.dragAddToSelection === true || self.dragObject === undefined) {\n      if (shift && self.dragObject === undefined) {\n        if (!self.activeCell) {\n          return;\n        }\n        st = Math.min(self.activeCell.rowIndex, rowIndex);\n        en = Math.max(self.activeCell.rowIndex, rowIndex);\n        for (x = st; en >= x; x += 1) {\n          addRow(x);\n        }\n      } else {\n        addRow(rowIndex);\n      }\n    }\n    de();\n  };\n  /**\n   * Collapse a tree grid by row index.\n   * @memberof canvasDatagrid\n   * @name collapseTree\n   * @method\n   * @param {number} index The index of the row to collapse.\n   */\n  self.collapseTree = function (rowIndex) {\n    self.dispatchEvent('collapsetree', {\n      childGrid: self.childGrids[rowIndex],\n      data: self.viewData[rowIndex],\n      rowIndex: rowIndex,\n    });\n    self.openChildren[rowIndex].blur();\n    self.openChildren[rowIndex].dispose();\n    delete self.openChildren[rowIndex];\n    delete self.sizes.trees[rowIndex];\n    delete self.childGrids[rowIndex];\n    self.dispatchEvent('resizerow', {\n      cellHeight: self.style.cellHeight,\n    });\n    self.resize(true);\n    self.draw(true);\n  };\n  /**\n   * Expands a tree grid by row index.\n   * @memberof canvasDatagrid\n   * @name expandTree\n   * @method\n   * @param {number} index The index of the row to expand.\n   */\n  self.expandTree = function (rowIndex) {\n    var trArgs = self.args.treeGridAttributes || {},\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight(),\n      rowHeaderCellWidth =\n        self.sizes.columns.cornerCell || self.style.rowHeaderCellWidth,\n      h = self.sizes.trees[rowIndex] || self.style.treeGridHeight,\n      treeGrid;\n    if (!self.childGrids[rowIndex]) {\n      trArgs.debug = self.attributes.debug;\n      trArgs.name = self.attributes.saveAppearance\n        ? self.attributes.name + 'tree' + rowIndex\n        : undefined;\n      trArgs.style = trArgs.style || self.style;\n      trArgs.parentNode = {\n        parentGrid: self.intf,\n        nodeType: 'canvas-datagrid-tree',\n        offsetHeight: h,\n        offsetWidth: self.width - rowHeaderCellWidth,\n        header: { width: self.width - rowHeaderCellWidth },\n        offsetLeft: rowHeaderCellWidth,\n        offsetTop: columnHeaderCellHeight,\n        offsetParent: self.intf.parentNode,\n        parentNode: self.intf.parentNode,\n        style: 'tree',\n        data: self.viewData[rowIndex],\n      };\n      treeGrid = self.createGrid(trArgs);\n      self.childGrids[rowIndex] = treeGrid;\n    }\n    treeGrid = self.childGrids[rowIndex];\n    treeGrid.visible = true;\n    self.dispatchEvent('expandtree', {\n      treeGrid: treeGrid,\n      data: self.viewData[rowIndex],\n      rowIndex: rowIndex,\n    });\n    self.openChildren[rowIndex] = treeGrid;\n    self.sizes.trees[rowIndex] = h;\n    self.dispatchEvent('resizerow', { height: self.style.cellHeight });\n    self.resize(true);\n  };\n  /**\n   * Toggles tree grid open and close by row index.\n   * @memberof canvasDatagrid\n   * @name toggleTree\n   * @method\n   * @param {number} index The index of the row to toggle.\n   */\n  self.toggleTree = function (rowIndex) {\n    var i = self.openChildren[rowIndex];\n    if (i) {\n      return self.collapseTree(rowIndex);\n    }\n    self.expandTree(rowIndex);\n  };\n  /**\n   * Returns a header from the schema by name.\n   * @memberof canvasDatagrid\n   * @name getHeaderByName\n   * @tutorial schema\n   * @method\n   * @returns {header} header with the selected name, or undefined.\n   * @param {string} name The name of the column to resize.\n   */\n  self.getHeaderByName = function (name) {\n    var x,\n      i = self.getSchema();\n    for (x = 0; x < i.length; x += 1) {\n      if (i[x].name === name) {\n        return i[x];\n      }\n    }\n  };\n  /**\n   * Resizes a column to fit the longest value in the column. Call without a value to resize all columns.\n   * Warning, can be slow on very large record sets (1m records ~3-5 seconds on an i7).\n   * @memberof canvasDatagrid\n   * @name fitColumnToValues\n   * @method\n   * @param {string} name The name of the column to resize.\n   */\n  self.fitColumnToValues = function (name, internal) {\n    if (!self.canvas) {\n      return;\n    }\n    self.sizes.columns[\n      name === 'cornerCell' ? -1 : self.getHeaderByName(name).index\n    ] = Math.max(self.findColumnMaxTextLength(name), self.style.minColumnWidth);\n    if (!internal) {\n      self.resize();\n      self.draw(true);\n    }\n  };\n  /**\n   * Checks if a cell is currently visible.\n   * @memberof canvasDatagrid\n   * @name isCellVisible\n   * @overload\n   * @method\n   * @returns {boolean} when true, the cell is visible, when false the cell is not currently drawn.\n   * @param {number} columnIndex The column index of the cell to check.\n   * @param {number} rowIndex The row index of the cell to check.\n   */\n  self.isCellVisible = function (cell, rowIndex) {\n    // overload\n    if (rowIndex !== undefined) {\n      return (\n        self.visibleCells.filter(function (c) {\n          return c.columnIndex === cell && c.rowIndex === rowIndex;\n        }).length > 0\n      );\n    }\n    var x,\n      l = self.visibleCells.length;\n    for (x = 0; x < l; x += 1) {\n      if (\n        cell.x === self.visibleCells[x].x &&\n        cell.y === self.visibleCells[x].y\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * Sets the order of the data.\n   * @memberof canvasDatagrid\n   * @name order\n   * @method\n   * @param {number} columnName Name of the column to be sorted.\n   * @param {string} direction `asc` for ascending or `desc` for descending.\n   * @param {function} [sortFunction] When defined, override the default sorting method defined in the column's schema and use this one.\n   * @param {bool} [dontSetStorageData] Don't store this setting for future use.\n   */\n  self.order = function (\n    columnName,\n    direction,\n    sortFunction,\n    dontSetStorageData,\n  ) {\n    var f,\n      c = self.getSchema().filter(function (col) {\n        return col.name === columnName;\n      });\n    if (\n      self.dispatchEvent('beforesortcolumn', {\n        name: columnName,\n        direction: direction,\n      })\n    ) {\n      return;\n    }\n    self.orderBy = columnName;\n    self.orderDirection = direction;\n    if (!self.viewData || self.viewData.length === 0) {\n      return;\n    }\n    if (c.length === 0) {\n      throw new Error('Cannot sort.  No such column name');\n    }\n    f = sortFunction || c[0].sorter || self.sorters[c[0].type];\n    if (!f && c[0].type !== undefined) {\n      console.warn(\n        'Cannot sort type \"%s\" falling back to string sort.',\n        c[0].type,\n      );\n    }\n    self.orderings.add(\n      columnName,\n      direction,\n      typeof f === 'function' ? f : self.sorters.string,\n    );\n    self.refresh();\n    self.dispatchEvent('sortcolumn', {\n      name: columnName,\n      direction: direction,\n    });\n\n    if (dontSetStorageData) {\n      return;\n    }\n    self.setStorageData();\n  };\n  self.isInGrid = function (e) {\n    if (e.x < 0 || e.x > self.width || e.y < 0 || e.y > self.height) {\n      return false;\n    }\n    return true;\n  };\n  /**\n   * Moves the current selection relative to the its current position.  Note: this method does not move the selected data, just the selection itself.\n   * @memberof canvasDatagrid\n   * @name moveSelection\n   * @method\n   * @param {number} offsetX The number of columns to offset the selection.\n   * @param {number} offsetY The number of rows to offset the selection.\n   */\n  self.moveSelection = function (offsetX, offsetY) {\n    var sel = [];\n    self.selections.forEach(function (row, rowIndex) {\n      sel[rowIndex + offsetY] = [];\n      row.forEach(function (colIndex) {\n        sel[rowIndex + offsetY].push(colIndex + offsetX);\n      });\n    });\n    self.selections = sel;\n  };\n  /**\n   * Moves data in the provided selection to another position in the grid.  Moving data off the edge of the schema (columns/x) will truncate data.\n   * @memberof canvasDatagrid\n   * @name moveTo\n   * @method\n   * @param {array} sel 2D array representing selected rows and columns.  `canvasDatagrid.selections` is in this format and can be used here.\n   * @param {number} x The column index to start inserting the selection at.\n   * @param {number} y The row index to start inserting the selection at.\n   */\n  self.moveTo = function (sel, x, y) {\n    var selectedData = self.getSelectedData(),\n      visibleSchema = self.getVisibleSchema(),\n      selectionLength = sel.length,\n      xi,\n      maxRowLength = -Infinity,\n      minXi = Infinity,\n      yi = y - 1;\n\n    sel.forEach(function (row, rowIndex) {\n      if (rowIndex === selectionLength) {\n        return;\n      }\n      if (row.length === 0) {\n        return;\n      }\n      minXi = Math.min(self.getVisibleColumnIndexOf(x), minXi);\n      maxRowLength = Math.max(maxRowLength, row.length);\n      row.forEach(function (colIndex) {\n        // intentional redef of colIndex\n        colIndex = self.getVisibleColumnIndexOf(colIndex);\n        if (!visibleSchema[colIndex]) {\n          return;\n        }\n        // TODO:\n        if (!self.data[rowIndex]) {\n          self.data[rowIndex] = {};\n        }\n        // TODO:\n        self.data[rowIndex][visibleSchema[colIndex].name] = null;\n      });\n    });\n\n    sel.forEach(function (row, index) {\n      var lastSourceIndex;\n      yi += 1;\n      xi = self.getVisibleColumnIndexOf(x);\n      row.forEach(function (colIndex, cidx) {\n        colIndex = self.getVisibleColumnIndexOf(colIndex);\n        if (cidx > 0) {\n          // this confusing bit of nonsense figures out\n          // if the selection has skipped cells\n          xi += colIndex - lastSourceIndex;\n        }\n        lastSourceIndex = colIndex;\n        if (\n          colIndex === -1 ||\n          !visibleSchema[xi] ||\n          !visibleSchema[colIndex] ||\n          // TODO:\n          self.data.length - 1 < yi ||\n          yi < 0\n        ) {\n          return;\n        }\n        // TODO:\n        if (!self.data[yi]) {\n          self.data[yi] = {};\n        }\n        // TODO:\n        self.data[yi][visibleSchema[xi].name] =\n          selectedData[index][visibleSchema[colIndex].name];\n      });\n    });\n  };\n  /**\n   * Checks if a given column is visible.\n   * @memberof canvasDatagrid\n   * @name isColumnVisible\n   * @method\n   * @returns {boolean} When true, the column is visible.\n   * @param {number} columnIndex Column index.\n   */\n  self.isColumnVisible = function (columnIndex) {\n    return (\n      self.visibleCells.filter(function (c) {\n        return c.columnIndex === columnIndex;\n      }).length > 0\n    );\n  };\n  /**\n   * Checks if a given row is visible.\n   * @memberof canvasDatagrid\n   * @name isRowVisible\n   * @method\n   * @returns {boolean} When true, the row is visible.\n   * @param {number} rowIndex Row index.\n   */\n  self.isRowVisible = function (rowIndex) {\n    return (\n      self.visibleCells.filter(function (c) {\n        return c.rowIndex === rowIndex;\n      }).length > 0\n    );\n  };\n  /**\n   * Gets the cell at columnIndex and rowIndex.\n   * @memberof canvasDatagrid\n   * @name getVisibleCellByIndex\n   * @method\n   * @returns {cell} cell at the selected location.\n   * @param {number} x Column index.\n   * @param {number} y Row index.\n   */\n  self.getVisibleCellByIndex = function (x, y) {\n    return self.visibleCells.filter(function (c) {\n      return c.columnIndex === x && c.rowIndex === y;\n    })[0];\n  };\n  /**\n   * Gets the cell at grid pixel coordinate x and y.  Author's note.  This function ties drawing and events together.  This is a very complex function and is core to the component.\n   * @memberof canvasDatagrid\n   * @name getCellAt\n   * @method\n   * @returns {cell} cell at the selected location.\n   * @param {number} x Number of pixels from the left.\n   * @param {number} y Number of pixels from the top.\n   */\n  self.getCellAt = function (x, y, useTouchScrollZones) {\n    function getBorder(entitiy) {\n      if (\n        entitiy.x + entitiy.width - self.attributes.borderResizeZone * 0.4 <\n          x &&\n        entitiy.x + entitiy.width + self.attributes.borderResizeZone * 0.6 > x\n      ) {\n        return 'r';\n      }\n      if (\n        entitiy.x - self.attributes.borderResizeZone * 0.4 < x &&\n        entitiy.x + self.attributes.borderResizeZone * 0.6 > x\n      ) {\n        return 'l';\n      }\n      if (\n        entitiy.y + entitiy.height - self.attributes.borderResizeZone * 0.4 <\n          y &&\n        entitiy.y + entitiy.height + self.attributes.borderResizeZone * 0.6 > y\n      ) {\n        return 'b';\n      }\n      if (\n        entitiy.y - self.attributes.borderResizeZone * 0.4 < y &&\n        entitiy.y + self.attributes.borderResizeZone * 0.6 > y\n      ) {\n        return 't';\n      }\n    }\n    if (!self.visibleCells) {\n      return;\n    }\n    var border,\n      tsz = useTouchScrollZones ? self.attributes.touchScrollZone : 0,\n      moveMode = self.attributes.borderDragBehavior === 'move',\n      i,\n      l = self.visibleCells.length,\n      moveBorder,\n      xBorderBehavior = moveMode ? self.cursorGrab : 'ew-resize',\n      yBorderBehavior = moveMode ? self.cursorGrab : 'ns-resize',\n      cell,\n      entitiy;\n    if (!self.visibleCells || !self.visibleCells.length) {\n      return;\n    }\n    self.hasFocus = true;\n    if (!(y < self.height && y > 0 && x < self.width && x > 0)) {\n      self.hasFocus = false;\n      return {\n        dragContext: 'inherit',\n        context: 'inherit',\n      };\n    }\n    for (i = 0; i < l; i += 1) {\n      cell = self.visibleCells[i];\n      // interactive dimensions of the cell.  used for touch \"over size\" zones\n      entitiy = {\n        x: cell.x,\n        y: cell.y,\n        height: cell.height,\n        width: cell.width,\n      };\n      if (\n        useTouchScrollZones &&\n        /(vertical|horizontal)-scroll-/.test(cell.style)\n      ) {\n        entitiy.x -= tsz;\n        entitiy.y -= tsz;\n        entitiy.height += tsz;\n        entitiy.width += tsz;\n      }\n      if (\n        entitiy.x - self.style.cellBorderWidth < x &&\n        entitiy.x + entitiy.width + self.style.cellBorderWidth > x &&\n        entitiy.y - self.style.cellBorderWidth < y &&\n        entitiy.y + entitiy.height + self.style.cellBorderWidth > y\n      ) {\n        if (/frozen-row-marker/.test(cell.style)) {\n          cell.dragContext = cell.style;\n          cell.context = 'row-resize';\n          return cell;\n        }\n        if (/frozen-column-marker/.test(cell.style)) {\n          cell.dragContext = cell.style;\n          cell.context = 'col-resize';\n          return cell;\n        }\n        if (/selection-handle-/.test(cell.style)) {\n          cell.dragContext = cell.style;\n          cell.context = 'crosshair';\n          return cell;\n        }\n        if (/vertical-scroll-(bar|box)/.test(cell.style)) {\n          cell.dragContext = 'vertical-scroll-box';\n          cell.context = 'vertical-scroll-box';\n          cell.isScrollBar = true;\n          cell.isVerticalScrollBar = true;\n          if (y > self.scrollBox.box.v.y + self.scrollBox.scrollBoxHeight) {\n            cell.dragContext = 'vertical-scroll-bottom';\n            cell.context = 'vertical-scroll-bottom';\n          } else if (y < self.scrollBox.box.v.y) {\n            cell.dragContext = 'vertical-scroll-top';\n            cell.context = 'vertical-scroll-top';\n          }\n          self.cursor = 'default';\n          return cell;\n        }\n        if (/horizontal-scroll-(bar|box)/.test(cell.style)) {\n          cell.dragContext = 'horizontal-scroll-box';\n          cell.context = 'horizontal-scroll-box';\n          cell.isScrollBar = true;\n          cell.isHorizontalScrollBar = true;\n          if (x > self.scrollBox.box.h.x + self.scrollBox.scrollBoxWidth) {\n            cell.dragContext = 'horizontal-scroll-right';\n            cell.context = 'horizontal-scroll-right';\n          } else if (x < self.scrollBox.box.h.x) {\n            cell.dragContext = 'horizontal-scroll-left';\n            cell.context = 'horizontal-scroll-left';\n          }\n          self.cursor = 'default';\n          return cell;\n        }\n        border = getBorder(entitiy);\n        // check if the border of this cell is the border of the selection and if so show move cursor in move mode\n        moveBorder =\n          moveMode &&\n          cell.selectionBorder &&\n          cell.selectionBorder.indexOf(border) !== -1;\n        if (\n          ['l', 'r'].indexOf(border) !== -1 &&\n          (self.attributes.allowColumnResize || moveBorder) &&\n          ((self.attributes.allowColumnResizeFromCell && cell.isNormal) ||\n            !cell.isNormal ||\n            moveBorder) &&\n          ((self.attributes.allowRowHeaderResize &&\n            (cell.isRowHeader || cell.isCorner)) ||\n            !(cell.isRowHeader && cell.isCorner))\n        ) {\n          if (\n            (cell.isColumnHeader ||\n              cell.isCorner ||\n              (self.attributes.allowColumnResizeFromCell && cell.isNormal)) &&\n            border === 'r'\n          ) {\n            cell.context = 'ew-resize';\n            cell.dragContext = 'ew-resize';\n            return cell;\n          }\n          if (!(cell.isColumnHeader || cell.isCorner) && moveBorder) {\n            cell.context = xBorderBehavior;\n            cell.dragContext = border + '-move';\n            return cell;\n          }\n        }\n        if (\n          ['t', 'b'].indexOf(border) !== -1 &&\n          cell.rowIndex > -1 &&\n          (self.attributes.allowRowResize || moveBorder) &&\n          ((self.attributes.allowRowResizeFromCell && cell.isNormal) ||\n            !cell.isNormal ||\n            moveBorder) &&\n          !cell.isColumnHeader\n        ) {\n          if (\n            (cell.isRowHeader ||\n              cell.isCorner ||\n              (self.attributes.allowRowResizeFromCell && cell.isNormal)) &&\n            border === 'b'\n          ) {\n            cell.context = 'ns-resize';\n            cell.dragContext = 'ns-resize';\n            return cell;\n          }\n          if (!(cell.isRowHeader || cell.isCorner) && moveBorder) {\n            cell.context = yBorderBehavior;\n            cell.dragContext = border + '-move';\n            return cell;\n          }\n        }\n        if (cell.style === 'columnHeaderCell') {\n          cell.context = 'cell';\n          cell.dragContext = 'column-reorder';\n          return cell;\n        }\n        if (cell.style === 'rowHeaderCell') {\n          if (\n            self.attributes.rowGrabZoneSize +\n              (cell.y - self.style.cellBorderWidth) <\n              y ||\n            !self.attributes.allowRowReordering\n          ) {\n            cell.dragContext = 'cell';\n            cell.context = 'cell';\n          } else {\n            cell.context = self.cursorGrab;\n            cell.dragContext = 'row-reorder';\n          }\n          return cell;\n        }\n        if (cell.isGrid) {\n          self.hasFocus = false;\n          cell.dragContext = 'cell-grid';\n          cell.context = 'cell-grid';\n          return cell;\n        }\n        if (cell.style === 'tree-grid') {\n          self.hasFocus = false;\n          cell.dragContext = 'tree';\n          cell.context = 'tree';\n          return cell;\n        }\n        cell.dragContext = 'cell';\n        cell.context = 'cell';\n        return cell;\n      }\n    }\n    self.hasFocus = true;\n    self.cursor = 'default';\n    return {\n      dragContext: 'background',\n      context: 'background',\n      style: 'background',\n      isBackground: true,\n    };\n  };\n  /**\n   * Gets the bounds of current selection.\n   * @returns {rect} selection.\n   * @memberof canvasDatagrid\n   * @name getSelectionBounds\n   * @method\n   */\n  self.getSelectionBounds = function () {\n    var low = { x: Infinity, y: Infinity },\n      high = { x: -Infinity, y: -Infinity };\n    self.selections.forEach(function (row, rowIndex) {\n      var maxCol, minCol;\n      low.y = rowIndex < low.y ? rowIndex : low.y;\n      high.y = rowIndex > high.y ? rowIndex : high.y;\n      maxCol = Math.max.apply(null, row);\n      minCol = Math.min.apply(null, row);\n      low.x = minCol < low.x ? minCol : low.x;\n      high.x = maxCol > high.x ? maxCol : high.x;\n    });\n    return {\n      top: low.y,\n      left: low.x,\n      bottom: high.y,\n      right: high.x,\n    };\n  };\n  /**\n   * Returns an auto generated schema based on data structure.\n   * @memberof canvasDatagrid\n   * @name getSchemaFromData\n   * @method\n   * @tutorial schema\n   * @returns {schema} schema A schema based on the first item in the data array.\n   */\n  self.getSchemaFromData = function (d) {\n    d = d || self.originalData;\n    return Object.keys(d[0] || { ' ': '' }).map(function mapEachSchemaColumn(\n      key,\n      index,\n    ) {\n      var type = self.getBestGuessDataType(key, d),\n        i = {\n          name: key,\n          title: isNaN(parseInt(key, 10))\n            ? key\n            : self.integerToAlpha(key).toUpperCase(),\n          index: index,\n          columnIndex: index,\n          type: type,\n          filter: self.filter(type),\n        };\n      if (\n        self.storedSettings &&\n        self.storedSettings.visibility &&\n        self.storedSettings.visibility[i.name] !== undefined\n      ) {\n        i.hidden = !self.storedSettings.visibility[i.name];\n      }\n      return i;\n    });\n  };\n  /**\n   * Clears the change log grid.changes that keeps track of changes to the data set.\n   * This does not undo changes or alter data it is simply a convince array to keep\n   * track of changes made to the data since last this method was called.\n   * @memberof canvasDatagrid\n   * @name clearChangeLog\n   * @method\n   */\n  self.clearChangeLog = function () {\n    self.changes = [];\n  };\n  /**\n   * Selects an area of the grid.\n   * @memberof canvasDatagrid\n   * @name selectArea\n   * @method\n   * @param {rect} bounds A rect object representing the selected values.\n   */\n  self.selectArea = function (bounds, ctrl) {\n    self.selectionBounds = bounds || self.selectionBounds;\n    var ev,\n      x,\n      y,\n      s = self.getSchema();\n    if (!ctrl) {\n      self.selections = [];\n    }\n    if (\n      self.selectionBounds.top < -1 ||\n      self.selectionBounds.bottom > self.viewData.length ||\n      self.selectionBounds.left < -1 ||\n      self.selectionBounds.right > s.length\n    ) {\n      throw new Error('Impossible selection area');\n    }\n    for (\n      x = self.selectionBounds.top;\n      x <= self.selectionBounds.bottom;\n      x += 1\n    ) {\n      self.selections[x] = [];\n      for (\n        y = self.selectionBounds.left;\n        y <= self.selectionBounds.right;\n        y += 1\n      ) {\n        if (self.selections[x].indexOf(y) === -1) {\n          self.selections[x].push(y);\n        }\n      }\n    }\n    ev = {\n      selections: self.selections,\n      selectionBounds: self.selectionBounds,\n    };\n    Object.defineProperty(ev, 'selectedData', {\n      get: function () {\n        return self.getSelectedData();\n      },\n    });\n    self.dispatchEvent('selectionchanged', ev);\n  };\n  /**\n   * Returns the maximum text width for a given column by column name.\n   * @memberof canvasDatagrid\n   * @name findColumnMaxTextLength\n   * @method\n   * @returns {number} The number of pixels wide the maximum width value in the selected column.\n   * @param {string} name The name of the column to calculate the value's width of.\n   */\n  self.findColumnMaxTextLength = function (name) {\n    var m = -Infinity;\n    if (name === 'cornerCell') {\n      self.ctx.font = self.style.rowHeaderCellFont;\n      return (\n        self.ctx.measureText(\n          (\n            self.viewData.length + (self.attributes.showNewRow ? 1 : 0)\n          ).toString(),\n        ).width +\n        self.style.autosizePadding +\n        self.style.autosizeHeaderCellPadding +\n        self.style.rowHeaderCellPaddingRight +\n        self.style.rowHeaderCellPaddingLeft +\n        (self.attributes.tree\n          ? self.style.treeArrowWidth +\n            self.style.treeArrowMarginLeft +\n            self.style.treeArrowMarginRight\n          : 0)\n      );\n    }\n    var formatter = null;\n    self.getSchema().forEach(function (col) {\n      if (col.name !== name) {\n        return;\n      }\n      self.ctx.font = self.style.columnHeaderCellFont;\n      var t =\n        self.ctx.measureText(col.title || col.name).width +\n        self.style.headerCellPaddingRight +\n        self.style.headerCellPaddingLeft;\n      m = t > m ? t : m;\n      formatter = self.formatters[col.type];\n    });\n    self.viewData.forEach(function (row) {\n      var text = row[name];\n      if (formatter) {\n        text = formatter({ cell: { value: text } });\n      }\n      self.ctx.font = self.style.cellFont;\n      var t =\n        self.ctx.measureText(text).width +\n        self.style.cellPaddingRight +\n        self.style.cellPaddingLeft +\n        self.style.cellAutoResizePadding;\n      m = t > m ? t : m;\n    });\n    return m;\n  };\n  /**\n   * Gets the total width of all header columns.\n   * @memberof canvasDatagrid\n   * @name getHeaderWidth\n   * @method\n   */\n  self.getHeaderWidth = function () {\n    return self.getVisibleSchema().reduce(function (total, header) {\n      return total + parseInt(header.width || self.style.cellWidth, 10);\n    }, 0);\n  };\n  /**\n   * Gets the height of a row by index.\n   * @memberof canvasDatagrid\n   * @name getRowHeight\n   * @method\n   * @param {number} rowIndex The row index to lookup.\n   */\n  self.getRowHeight = function (rowIndex) {\n    return (self.sizes.rows[rowIndex] || self.style.cellHeight) * self.scale;\n  };\n  /**\n   * Gets the width of a column by index.\n   * @memberof canvasDatagrid\n   * @name getColummnWidth\n   * @method\n   * @param {number} columnIndex The column index to lookup.\n   */\n  self.getColummnWidth = function (columnIndex) {\n    return (\n      (self.sizes.columns[columnIndex] ||\n        self.getSchema()[columnIndex].width ||\n        self.style.cellWidth) * self.scale\n    );\n  };\n  self.formatters.string = function cellFormatterString(e) {\n    return e.cell.value !== undefined ? e.cell.value : '';\n  };\n  self.formatters.rowHeaderCell = self.formatters.string;\n  self.formatters.headerCell = self.formatters.string;\n  self.formatters.number = self.formatters.string;\n  self.formatters.int = self.formatters.string;\n  self.formatters.html = self.formatters.string;\n  self.sorters.string = function (columnName, direction) {\n    var asc = direction === 'asc';\n    return function (a, b) {\n      if (a[columnName] === undefined || a[columnName] === null) {\n        return 1;\n      }\n      if (b[columnName] === undefined || b[columnName] === null) {\n        return 0;\n      }\n      if (asc) {\n        if (!a[columnName].localeCompare) {\n          return 1;\n        }\n        return a[columnName].localeCompare(b[columnName]);\n      }\n      if (!b[columnName].localeCompare) {\n        return 1;\n      }\n      return b[columnName].localeCompare(a[columnName]);\n    };\n  };\n  self.sorters.number = function (columnName, direction) {\n    var asc = direction === 'asc';\n    return function (a, b) {\n      if (asc) {\n        return a[columnName] - b[columnName];\n      }\n      return b[columnName] - a[columnName];\n    };\n  };\n  self.sorters.date = function (columnName, direction) {\n    var asc = direction === 'asc';\n    return function (a, b) {\n      if (asc) {\n        return (\n          new Date(a[columnName]).getTime() - new Date(b[columnName]).getTime()\n        );\n      }\n      return (\n        new Date(b[columnName]).getTime() - new Date(a[columnName]).getTime()\n      );\n    };\n  };\n}\n","/*jslint browser: true, unparam: true, todo: true*/\n/*globals HTMLElement: false, Reflect: false, define: true, MutationObserver: false, requestAnimationFrame: false, performance: false, btoa: false*/\n'use strict';\n\nexport default function (self, ctor) {\n  self.scale = 1;\n  self.orders = {\n    rows: [],\n    columns: [],\n  };\n  self.appliedInlineStyles = {};\n  self.cellGridAttributes = {};\n  self.treeGridAttributes = {};\n  self.visibleRowHeights = [];\n  self.hasFocus = false;\n  self.activeCell = {\n    columnIndex: 0,\n    rowIndex: 0,\n  };\n  self.innerHTML = '';\n  self.storageName = 'canvasDataGrid';\n  self.invalidSearchExpClass = 'canvas-datagrid-invalid-search-regExp';\n  self.localStyleLibraryStorageKey = 'canvas-datagrid-user-style-library';\n  self.dataType = 'application/x-canvas-datagrid';\n  self.orderBy = null;\n  self.orderDirection = 'asc';\n  self.orderings = {\n    columns: [],\n    add: function (orderBy, orderDirection, sortFunction) {\n      self.orderings.columns = self.orderings.columns.filter(function (col) {\n        return col.orderBy !== orderBy;\n      });\n      self.orderings.columns.push({\n        orderBy: orderBy,\n        orderDirection: orderDirection,\n        sortFunction: sortFunction,\n      });\n    },\n    sort: function () {\n      console.warn(\n        'grid.orderings.sort has been deprecated. Please use grid.refresh().',\n      );\n\n      self.orderings.columns.forEach(function (col) {\n        self.viewData.sort(col.sortFunction(col.orderBy, col.orderDirection));\n      });\n    },\n  };\n  self.columnFilters = {};\n  self.filters = {};\n  self.frozenRow = 0;\n  self.frozenColumn = 0;\n  self.ellipsisCache = {};\n  self.scrollCache = { x: [], y: [] };\n  self.scrollBox = {};\n  self.visibleRows = [];\n  self.visibleCells = [];\n  self.sizes = {\n    rows: {},\n    columns: {},\n    trees: {},\n  };\n  self.currentFilter = function () {\n    return true;\n  };\n  self.selections = [];\n  self.hovers = {};\n  self.attributes = {};\n  self.style = {};\n  self.formatters = {};\n  self.sorters = {};\n  self.parsers = {};\n  self.schemaHashes = {};\n  self.events = {};\n  self.changes = [];\n  self.scrollIndexTop = 0;\n  self.scrollPixelTop = 0;\n  self.scrollIndexLeft = 0;\n  self.scrollPixelLeft = 0;\n  self.childGrids = {};\n  self.openChildren = {};\n  self.scrollModes = [\n    'vertical-scroll-box',\n    'vertical-scroll-top',\n    'vertical-scroll-bottom',\n    'horizontal-scroll-box',\n    'horizontal-scroll-right',\n    'horizontal-scroll-left',\n  ];\n  self.componentL1Events = {};\n  self.eventNames = [\n    'afterdraw',\n    'afterrendercell',\n    'attributechanged',\n    'beforebeginedit',\n    'beforecreatecellgrid',\n    'beforedraw',\n    'beforeendedit',\n    'beforerendercell',\n    'beforerendercellgrid',\n    'beginedit',\n    'cellmouseout',\n    'cellmouseover',\n    'click',\n    'collapsetree',\n    'contextmenu',\n    'copy',\n    'datachanged',\n    'dblclick',\n    'endedit',\n    'expandtree',\n    'formatcellvalue',\n    'keydown',\n    'keypress',\n    'keyup',\n    'mousedown',\n    'mousemove',\n    'mouseup',\n    'newrow',\n    'ordercolumn',\n    'rendercell',\n    'rendercellgrid',\n    'renderorderbyarrow',\n    'rendertext',\n    'rendertreearrow',\n    'reorder',\n    'reordering',\n    'resize',\n    'resizecolumn',\n    'resizerow',\n    'schemachanged',\n    'scroll',\n    'selectionchanged',\n    'stylechanged',\n    'touchcancel',\n    'touchend',\n    'touchmove',\n    'touchstart',\n    'wheel',\n  ];\n  self.mouse = { x: 0, y: 0 };\n  self.getSelectedData = function (expandToRow) {\n    const selectedData = [];\n    const schema = self.getSchema();\n    const viewDataLength = self.viewData.length;\n\n    if (viewDataLength === 0) {\n      return [];\n    }\n\n    // self.selections is a sparse array, so `viewRowIndex` here\n    // will equal the row index as where it's rendered,\n    // not as where it is in the original data array.\n    self.selections.forEach(function (row, viewRowIndex) {\n      if (!row) {\n        return;\n      }\n\n      if (viewRowIndex === viewDataLength) {\n        return;\n      }\n\n      if (row.length === 0) {\n        selectedData[viewRowIndex] = null;\n        return;\n      }\n\n      selectedData[viewRowIndex] = {};\n\n      row.forEach(function (col) {\n        if (col === -1 || !schema[col]) {\n          return;\n        }\n\n        const orderedIndex = self.orders.columns[col];\n\n        if (!expandToRow && schema[orderedIndex].hidden) {\n          return;\n        }\n\n        if (self.viewData[viewRowIndex]) {\n          selectedData[viewRowIndex][schema[orderedIndex].name] =\n            self.viewData[viewRowIndex][schema[orderedIndex].name];\n        }\n      });\n    });\n\n    return selectedData;\n  };\n  self.getBoundRowIndexFromViewRowIndex = function (viewRowIndex) {\n    if (self.boundRowIndexMap && self.boundRowIndexMap.has(viewRowIndex)) {\n      return self.boundRowIndexMap.get(viewRowIndex);\n    }\n\n    return undefined;\n  };\n  self.getColumnHeaderCellHeight = function () {\n    if (!self.attributes.showColumnHeaders) {\n      return 0;\n    }\n    return (\n      (self.sizes.rows[-1] || self.style.columnHeaderCellHeight) * self.scale\n    );\n  };\n  self.getRowHeaderCellWidth = function () {\n    if (!self.attributes.showRowHeaders) {\n      return 0;\n    }\n    return (\n      (self.sizes.columns[-1] || self.style.rowHeaderCellWidth) * self.scale\n    );\n  };\n  self.setStorageData = function () {\n    if (!self.attributes.saveAppearance || !self.attributes.name) {\n      return;\n    }\n    var visibility = {};\n    self.getSchema().forEach(function (column) {\n      visibility[column.name] = !column.hidden;\n    });\n    localStorage.setItem(\n      self.storageName + '-' + self.attributes.name,\n      JSON.stringify({\n        sizes: {\n          rows: self.sizes.rows,\n          columns: self.sizes.columns,\n        },\n        orders: {\n          rows: self.orders.rows,\n          columns: self.orders.columns,\n        },\n        orderBy: self.orderBy,\n        orderDirection: self.orderDirection,\n        visibility: visibility,\n      }),\n    );\n  };\n  self.getSchema = function () {\n    return self.schema || self.tempSchema || [];\n  };\n  function fillArray(low, high) {\n    var i = [],\n      x;\n    for (x = low; x <= high; x += 1) {\n      i[x] = x;\n    }\n    return i;\n  }\n  self.createColumnOrders = function () {\n    var s = self.getSchema();\n    self.orders.columns = fillArray(0, s.length - 1);\n  };\n  self.createRowOrders = function () {\n    self.orders.rows = fillArray(0, self.originalData.length - 1);\n  };\n  self.getVisibleSchema = function () {\n    return self.getSchema().filter(function (col) {\n      return !col.hidden;\n    });\n  };\n  self.applyDefaultValue = function (row, header) {\n    var d = header.defaultValue || '';\n    if (typeof d === 'function') {\n      d = d.apply(self.intf, [header]);\n    }\n    row[header.name] = d;\n  };\n  self.createNewRowData = function () {\n    self.newRow = {};\n    self.getSchema().forEach(function forEachHeader(header) {\n      self.applyDefaultValue(self.newRow, header);\n    });\n  };\n  self.getSchemaNameHash = function (key) {\n    var n = 0;\n    while (self.schemaHashes[key]) {\n      n += 1;\n      key = key + n;\n    }\n    return key;\n  };\n  self.filter = function (type) {\n    var f = self.filters[type];\n    if (!f && type !== undefined) {\n      console.warn(\n        'Cannot find filter for type %s, falling back to substring match.',\n        type,\n      );\n      f = self.filters.string;\n    }\n    return f;\n  };\n  self.hasActiveFilters = function () {\n    return self.columnFilters && Object.keys(self.columnFilters).length > 0;\n  };\n  self.getFilteredAndSortedViewData = function (originalData) {\n    // We make a copy of originalData here in order be able to\n    // filter and sort rows without modifying the original array.\n    // Each row is turned into a (row, rowIndex) tuple\n    // so that when we apply filters, we can refer back to the\n    // row's original row number in originalData. This becomes\n    // useful when emitting cell events.\n    let newViewData = originalData.map((row, originalRowIndex) => [\n      row,\n      originalRowIndex,\n    ]);\n\n    // Apply filtering\n    for (const [headerName, filterText] of Object.entries(self.columnFilters)) {\n      const header = self.getHeaderByName(headerName);\n\n      if (!header) {\n        continue;\n      }\n\n      const currentFilterFunction =\n        header.filter || self.filter(header.type || 'string');\n\n      newViewData = newViewData.filter(function ([row]) {\n        const cellValue = row[headerName];\n        const shouldIncludeRow = currentFilterFunction(cellValue, filterText);\n\n        return shouldIncludeRow;\n      });\n    }\n\n    // Apply sorting\n    for (const column of self.orderings.columns) {\n      const sortFn = column.sortFunction(column.orderBy, column.orderDirection);\n\n      newViewData.sort(([rowA], [rowB]) => sortFn(rowA, rowB));\n    }\n\n    return {\n      viewData: newViewData.map(([row]) => row),\n      boundRowIndexMap: new Map(\n        newViewData.map(([_row, originalRowIndex], viewRowIndex) => [\n          viewRowIndex,\n          originalRowIndex,\n        ]),\n      ),\n    };\n  };\n  self.refresh = function () {\n    const { viewData, boundRowIndexMap } = self.getFilteredAndSortedViewData(\n      self.originalData,\n    );\n\n    self.viewData = viewData;\n    self.boundRowIndexMap = boundRowIndexMap;\n\n    self.resize();\n    self.draw(true);\n  };\n  self.getBestGuessDataType = function (columnName, data) {\n    var t,\n      x,\n      l = data.length;\n    for (x = 0; x < l; x += 1) {\n      if (\n        data[x] !== undefined &&\n        data[x] !== null &&\n        [null, undefined].indexOf(data[x][columnName]) !== -1\n      ) {\n        t = typeof data[x];\n        return t === 'object' ? 'string' : t;\n      }\n    }\n    return 'string';\n  };\n  self.drawChildGrids = function () {\n    Object.keys(self.childGrids).forEach(function (gridKey) {\n      self.childGrids[gridKey].draw();\n    });\n  };\n  self.resizeChildGrids = function () {\n    Object.keys(self.childGrids).forEach(function (gridKey) {\n      self.childGrids[gridKey].resize();\n    });\n  };\n  self.autoScrollZone = function (e, x, y, ctrl) {\n    var setTimer,\n      rowHeaderCellWidth = self.getRowHeaderCellWidth(),\n      columnHeaderCellHeight = self.getColumnHeaderCellHeight();\n    if (y !== -1) {\n      if (\n        x > self.width - self.attributes.selectionScrollZone &&\n        x < self.width\n      ) {\n        self.scrollBox.scrollLeft += self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n      if (x - self.attributes.selectionScrollZone - rowHeaderCellWidth < 0) {\n        self.scrollBox.scrollLeft -= self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n    }\n    if (y !== -1) {\n      if (\n        y > self.height - self.attributes.selectionScrollZone &&\n        y < self.height\n      ) {\n        self.scrollBox.scrollTop += self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n      if (\n        y - self.attributes.selectionScrollZone - columnHeaderCellHeight <\n        0\n      ) {\n        self.scrollBox.scrollTop -= self.attributes.selectionScrollIncrement;\n        setTimer = true;\n      }\n    }\n    if (\n      setTimer &&\n      !ctrl &&\n      self.currentCell &&\n      self.currentCell.columnIndex !== -1\n    ) {\n      self.scrollTimer = setTimeout(\n        self.mousemove,\n        self.attributes.scrollRepeatRate,\n        e,\n      );\n    }\n  };\n  self.validateColumn = function (c, s) {\n    if (!c.name) {\n      throw new Error('A column must contain at least a name.');\n    }\n    if (\n      s.filter(function (i) {\n        return i.name === c.name;\n      }).length > 0\n    ) {\n      throw new Error(\n        'A column with the name ' +\n          c.name +\n          ' already exists and cannot be added again.',\n      );\n    }\n    return true;\n  };\n  self.setDefaults = function (obj1, obj2, key, def) {\n    obj1[key] = obj2[key] === undefined ? def : obj2[key];\n  };\n  self.setAttributes = function () {\n    self.defaults.attributes.forEach(function eachAttribute(i) {\n      self.setDefaults(self.attributes, self.args, i[0], i[1]);\n    });\n  };\n  self.setStyle = function () {\n    self.defaults.styles.forEach(function eachStyle(i) {\n      self.setDefaults(self.style, self.args.style || {}, i[0], i[1]);\n    });\n  };\n  self.autosize = function (colName) {\n    self.getVisibleSchema().forEach(function (col, colIndex) {\n      if (col.name === colName || colName === undefined) {\n        self.sizes.columns[colIndex] = Math.max(\n          self.findColumnMaxTextLength(col.name),\n          self.style.minColumnWidth,\n        );\n      }\n    });\n    self.sizes.columns[-1] = self.findColumnMaxTextLength('cornerCell');\n  };\n  self.dispose = function () {\n    if (!self.isChildGrid && self.canvas && self.canvas.parentNode) {\n      self.canvas.parentNode.removeChild(self.canvas);\n    }\n    if (!self.isChildGrid) {\n      document.body.removeChild(self.controlInput);\n    }\n    self.eventParent.removeEventListener('mouseup', self.mouseup, false);\n    self.eventParent.removeEventListener('mousedown', self.mousedown, false);\n    self.eventParent.removeEventListener('dblclick', self.dblclick, false);\n    self.eventParent.removeEventListener('click', self.click, false);\n    self.eventParent.removeEventListener('mousemove', self.mousemove);\n    self.eventParent.removeEventListener('wheel', self.scrollWheel, false);\n    self.canvas.removeEventListener('contextmenu', self.contextmenu, false);\n    self.canvas.removeEventListener('copy', self.copy);\n    self.controlInput.removeEventListener('copy', self.copy);\n    self.controlInput.removeEventListener('cut', self.cut);\n    self.controlInput.removeEventListener('paste', self.paste);\n    self.controlInput.removeEventListener('keypress', self.keypress, false);\n    self.controlInput.removeEventListener('keyup', self.keyup, false);\n    self.controlInput.removeEventListener('keydown', self.keydown, false);\n    window.removeEventListener('resize', self.resize);\n    if (self.observer && self.observer.disconnect) {\n      self.observer.disconnect();\n    }\n  };\n  self.tryLoadStoredSettings = function () {\n    var s;\n    self.reloadStoredValues();\n    if (\n      self.storedSettings &&\n      typeof self.storedSettings.orders === 'object' &&\n      self.storedSettings.orders !== null\n    ) {\n      if (\n        self.storedSettings.orders.rows.length >= (self.viewData || []).length\n      ) {\n        self.orders.rows = self.storedSettings.orders.rows;\n      }\n      s = self.getSchema();\n      if (self.storedSettings.orders.columns.length === s.length) {\n        self.orders.columns = self.storedSettings.orders.columns;\n      }\n      self.orderBy =\n        self.storedSettings.orderBy === undefined\n          ? s[0].name\n          : self.storedSettings.orderBy;\n      self.orderDirection =\n        self.storedSettings.orderDirection === undefined\n          ? 'asc'\n          : self.storedSettings.orderDirection;\n      if (\n        self.storedSettings.orderBy !== undefined &&\n        self.getHeaderByName(self.orderBy) &&\n        self.orderDirection\n      ) {\n        self.order(self.orderBy, self.orderDirection);\n      }\n    }\n  };\n  self.getDomRoot = function () {\n    return self.shadowRoot ? self.shadowRoot.host : self.parentNode;\n  };\n  self.getFontName = function (fontStyle) {\n    return fontStyle.replace(/\\d+\\.?\\d*px/, '');\n  };\n  self.getFontHeight = function (fontStyle) {\n    return parseFloat(fontStyle, 10);\n  };\n  self.parseStyleValue = function (key) {\n    if (/Font/.test(key)) {\n      self.style[key + 'Height'] = self.getFontHeight(self.style[key]);\n      self.style[key + 'Name'] = self.getFontName(self.style[key]);\n      return;\n    }\n    // when inheriting styles from already instantiated grids, don't parse already parsed values.\n    if (\n      key === 'moveOverlayBorderSegments' &&\n      typeof self.style[key] === 'string'\n    ) {\n      self.style[key] = self.style[key].split(',').map(function (i) {\n        return parseInt(i, 10);\n      });\n    }\n  };\n  self.initProp = function (propName) {\n    if (!self.args[propName]) {\n      return;\n    }\n    Object.keys(self.args[propName]).forEach(function (key) {\n      self[propName][key] = self.args[propName][key];\n    });\n  };\n  self.getStyleProperty = function (key) {\n    if (self.styleKeys.indexOf(key) === -1) {\n      return self.parentNodeStyle[key];\n    }\n    return self.style[key];\n  };\n  self.setStyleProperty = function (key, value, supressDrawAndEvent) {\n    var isDim =\n      [\n        'height',\n        'width',\n        'minHeight',\n        'minWidth',\n        'maxHeight',\n        'maxWidth',\n      ].indexOf(key) !== -1;\n    if (self.styleKeys.indexOf(key) === -1) {\n      self.parentNodeStyle[key] = value;\n    } else {\n      if (/-/.test(key)) {\n        key = self.dehyphenateProperty(key);\n      }\n      self.style[key] = value;\n      self.parseStyleValue(key);\n    }\n    if (isDim) {\n      self.resize();\n    }\n    if (!supressDrawAndEvent) {\n      self.draw(true);\n      self.dispatchEvent('stylechanged', { name: 'style', value: value });\n    }\n  };\n  self.reloadStoredValues = function () {\n    if (self.attributes.name && self.attributes.saveAppearance) {\n      try {\n        self.storedSettings = localStorage.getItem(\n          self.storageName + '-' + self.attributes.name,\n        );\n      } catch (e) {\n        console.warn('Error loading stored values. ' + e.message);\n        self.storedSettings = undefined;\n      }\n      if (self.storedSettings) {\n        try {\n          self.storedSettings = JSON.parse(self.storedSettings);\n        } catch (e) {\n          console.warn('could not read settings from localStore', e);\n          self.storedSettings = undefined;\n        }\n      }\n      if (self.storedSettings) {\n        if (\n          typeof self.storedSettings.sizes === 'object' &&\n          self.storedSettings.sizes !== null\n        ) {\n          self.sizes.rows = self.storedSettings.sizes.rows;\n          self.sizes.columns = self.storedSettings.sizes.columns;\n          ['trees', 'columns', 'rows'].forEach(function (i) {\n            if (!self.sizes[i]) {\n              self.sizes[i] = {};\n            }\n          });\n        }\n        if (typeof self.storedSettings.visibility === 'object') {\n          self.getSchema().forEach(function (column) {\n            if (\n              self.storedSettings.visibility &&\n              self.storedSettings.visibility[column.name] !== undefined\n            ) {\n              column.hidden = !self.storedSettings.visibility[column.name];\n            }\n          });\n        }\n      }\n    }\n  };\n  self.init = function () {\n    if (self.initialized) {\n      return;\n    }\n    function addStyleKeyIfNoneExists(key) {\n      if (self.styleKeys.indexOf(key) === -1) {\n        self.styleKeys.push(key);\n      }\n    }\n    var publicStyleKeyIntf = {};\n    self.setAttributes();\n    self.setStyle();\n    self.initScrollBox();\n    self.setDom();\n    self.nodeType = 'canvas-datagrid';\n    self.ie = /Trident/.test(window.navigator.userAgent);\n    self.edge = /Edge/.test(window.navigator.userAgent);\n    self.webKit = /WebKit/.test(window.navigator.userAgent);\n    self.moz = /Gecko/.test(window.navigator.userAgent);\n    self.mobile = /Mobile/i.test(window.navigator.userAgent);\n    self.blankValues = [undefined, null, ''];\n    self.cursorGrab = 'grab';\n    self.cursorGrabing = 'grabbing';\n    self.cursorGrab = self.webKit ? '-webkit-grab' : self.cursorGrab;\n    self.cursorGrabing = self.moz ? '-webkit-grabbing' : self.cursorGrabbing;\n    self.pointerLockPosition = { x: 0, y: 0 };\n    Object.keys(self.style).forEach(self.parseStyleValue);\n    self.intf.moveSelection = self.moveSelection;\n    self.intf.moveTo = self.moveTo;\n    self.intf.addEventListener = self.addEventListener;\n    self.intf.removeEventListener = self.removeEventListener;\n    self.intf.dispatchEvent = self.dispatchEvent;\n    /**\n     * Releases grid resources and removes grid elements.\n     * @memberof canvasDatagrid\n     * @name dispose\n     * @method\n     */\n    self.intf.dispose = self.dispose;\n    /**\n     * Appends the grid to another element later.  Not implemented.\n     * @memberof canvasDatagrid\n     * @name appendTo\n     * @method\n     * @param {number} el The element to append the grid to.\n     */\n    self.intf.appendTo = self.appendTo;\n    self.intf.getVisibleCellByIndex = self.getVisibleCellByIndex;\n    self.intf.filters = self.filters;\n    self.intf.sorters = self.sorters;\n    self.intf.autosize = self.autosize;\n    self.intf.beginEditAt = self.beginEditAt;\n    self.intf.endEdit = self.endEdit;\n    self.intf.setActiveCell = self.setActiveCell;\n    self.intf.forEachSelectedCell = self.forEachSelectedCell;\n    self.intf.scrollIntoView = self.scrollIntoView;\n    self.intf.clearChangeLog = self.clearChangeLog;\n    self.intf.gotoCell = self.gotoCell;\n    self.intf.gotoRow = self.gotoRow;\n    self.intf.getHeaderByName = self.getHeaderByName;\n    self.intf.findColumnScrollLeft = self.findColumnScrollLeft;\n    self.intf.findRowScrollTop = self.findRowScrollTop;\n    self.intf.fitColumnToValues = self.fitColumnToValues;\n    self.intf.findColumnMaxTextLength = self.findColumnMaxTextLength;\n    self.intf.disposeContextMenu = self.disposeContextMenu;\n    self.intf.getCellAt = self.getCellAt;\n    self.intf.isCellVisible = self.isCellVisible;\n    self.intf.isRowVisible = self.isRowVisible;\n    self.intf.isColumnVisible = self.isColumnVisible;\n    self.intf.order = self.order;\n    self.intf.draw = self.draw;\n    self.intf.refresh = self.refresh;\n    self.intf.isComponent = self.isComponent;\n    self.intf.selectArea = self.selectArea;\n    self.intf.clipElement = self.clipElement;\n    self.intf.getSchemaFromData = self.getSchemaFromData;\n    self.intf.setFilter = self.setFilter;\n    self.intf.selectRow = self.selectRow;\n    self.intf.parentGrid = self.parentGrid;\n    self.intf.toggleTree = self.toggleTree;\n    self.intf.expandTree = self.expandTree;\n    self.intf.collapseTree = self.collapseTree;\n    self.intf.canvas = self.canvas;\n    self.intf.context = self.ctx;\n    self.intf.insertRow = self.insertRow;\n    self.intf.deleteRow = self.deleteRow;\n    self.intf.addRow = self.addRow;\n    self.intf.insertColumn = self.insertColumn;\n    self.intf.deleteColumn = self.deleteColumn;\n    self.intf.addColumn = self.addColumn;\n    self.intf.getClippingRect = self.getClippingRect;\n    self.intf.setRowHeight = self.setRowHeight;\n    self.intf.setColumnWidth = self.setColumnWidth;\n    self.intf.resetColumnWidths = self.resetColumnWidths;\n    self.intf.resetRowHeights = self.resetRowHeights;\n    self.intf.resize = self.resize;\n    self.intf.selectColumn = self.selectColumn;\n    self.intf.selectRow = self.selectRow;\n    self.intf.selectAll = self.selectAll;\n    self.intf.selectNone = self.selectNone;\n    self.intf.drawChildGrids = self.drawChildGrids;\n    self.intf.assertPxColor = self.assertPxColor;\n    self.intf.clearPxColorAssertions = self.clearPxColorAssertions;\n    self.intf.integerToAlpha = self.integerToAlpha;\n    self.intf.copy = self.copy;\n    self.intf.paste = self.paste;\n    self.intf.setStyleProperty = self.setStyleProperty;\n    Object.defineProperty(self.intf, 'defaults', {\n      get: function () {\n        return {\n          styles: self.defaults.styles.reduce(function (a, i) {\n            a[i[0]] = i[1];\n            return a;\n          }, {}),\n          attributes: self.defaults.attributes.reduce(function (a, i) {\n            a[i[0]] = i[1];\n            return a;\n          }, {}),\n        };\n      },\n    });\n    self.styleKeys = Object.keys(self.intf.defaults.styles);\n    self.styleKeys\n      .map(function (i) {\n        return self.hyphenateProperty(i, false);\n      })\n      .forEach(addStyleKeyIfNoneExists);\n    self.styleKeys\n      .map(function (i) {\n        return self.hyphenateProperty(i, true);\n      })\n      .forEach(addStyleKeyIfNoneExists);\n    self.DOMStyles = window.getComputedStyle(document.body, null);\n    self.styleKeys.concat(Object.keys(self.DOMStyles)).forEach(function (key) {\n      // unless this line is here, Object.keys() will not work on <instance>.style\n      publicStyleKeyIntf[key] = undefined;\n      Object.defineProperty(publicStyleKeyIntf, key, {\n        get: function () {\n          return self.getStyleProperty(key);\n        },\n        set: function (value) {\n          if (self.initialized) {\n            self.appliedInlineStyles[key] = value;\n          }\n          self.setStyleProperty(key, value);\n        },\n      });\n    });\n    Object.defineProperty(self.intf, 'shadowRoot', {\n      get: function () {\n        return self.shadowRoot;\n      },\n    });\n    Object.defineProperty(self.intf, 'activeCell', {\n      get: function () {\n        return self.activeCell;\n      },\n    });\n    Object.defineProperty(self.intf, 'hasFocus', {\n      get: function () {\n        return self.hasFocus;\n      },\n    });\n    /**\n     * Indicates whether grid has filters active\n     * @memberof canvasDatagrid\n     * @name hasActiveFilters\n     * @returns {boolean} When true, grid data is being filtered\n     */\n    Object.defineProperty(self.intf, 'hasActiveFilters', {\n      get: function () {\n        return self.hasActiveFilters();\n      },\n    });\n    Object.defineProperty(self.intf, 'style', {\n      get: function () {\n        return publicStyleKeyIntf;\n      },\n      set: function (valueObject) {\n        Object.keys(valueObject).forEach(function (key) {\n          self.setStyleProperty(key, valueObject[key], true);\n        });\n        self.draw(true);\n        self.dispatchEvent('stylechanged', {\n          name: 'style',\n          value: valueObject,\n        });\n      },\n    });\n    Object.defineProperty(self.intf, 'attributes', { value: {} });\n    Object.keys(self.attributes).forEach(function (key) {\n      Object.defineProperty(self.intf.attributes, key, {\n        get: function () {\n          return self.attributes[key];\n        },\n        set: function (value) {\n          self.attributes[key] = value;\n          if (key === 'name') {\n            self.tryLoadStoredSettings();\n          }\n          self.draw(true);\n          self.dispatchEvent('attributechanged', {\n            name: key,\n            value: value[key],\n          });\n        },\n      });\n    });\n    self.filters.string = function (value, filterFor) {\n      if (filterFor === self.attributes.blanksText) {\n        return self.blankValues.includes(\n          value == null ? value : String(value).trim(),\n        );\n      }\n\n      value = String(value);\n      var filterRegExp,\n        regEnd = /\\/(i|g|m)*$/,\n        pattern = regEnd.exec(filterFor),\n        flags = pattern ? pattern[0].substring(1) : '',\n        flagLength = flags.length;\n      self.invalidFilterRegEx = undefined;\n      if (filterFor.substring(0, 1) === '/' && pattern) {\n        try {\n          filterRegExp = new RegExp(\n            filterFor.substring(1, filterFor.length - (flagLength + 1)),\n            flags,\n          );\n        } catch (e) {\n          self.invalidFilterRegEx = e;\n          return;\n        }\n        return filterRegExp.test(value);\n      }\n      return value.toString\n        ? value\n            .toString()\n            .toLocaleUpperCase()\n            .indexOf(filterFor.toLocaleUpperCase()) !== -1\n        : false;\n    };\n    self.filters.number = function (value, filterFor) {\n      if (filterFor === self.attributes.blanksText) {\n        return self.blankValues.includes(\n          value == null ? value : String(value).trim(),\n        );\n      }\n\n      if (!filterFor) {\n        return true;\n      }\n      return value === filterFor;\n    };\n    ['formatters', 'filters', 'sorters'].forEach(self.initProp);\n    self.applyComponentStyle(false, self.intf);\n    self.reloadStoredValues();\n    if (self.args.data) {\n      self.intf.data = self.args.data;\n    }\n    if (self.intf.innerText || self.intf.textContent) {\n      if (self.intf.dataType === 'application/x-canvas-datagrid') {\n        self.intf.dataType = 'application/json+x-canvas-datagrid';\n      }\n      self.intf.data = self.intf.innerText || self.intf.textContent;\n    }\n    if (self.args.schema) {\n      self.intf.schema = self.args.schema;\n    }\n    if (self.isChildGrid || !self.isComponent) {\n      requestAnimationFrame(function () {\n        self.resize(true);\n      });\n    } else {\n      self.resize(true);\n    }\n    self.initialized = true;\n    return self;\n  };\n  /**\n   * Removes focus from the grid.\n   * @memberof canvasDatagrid\n   * @name blur\n   * @method\n   */\n  self.intf.blur = function (e) {\n    self.hasFocus = false;\n  };\n  /**\n   * Focuses on the grid.\n   * @memberof canvasDatagrid\n   * @name focus\n   * @method\n   */\n  self.intf.focus = function () {\n    self.hasFocus = true;\n    self.controlInput.focus();\n  };\n  if (self.shadowRoot || self.isChildGrid) {\n    Object.defineProperty(self.intf, 'height', {\n      get: function () {\n        if (self.shadowRoot) {\n          return self.shadowRoot.height;\n        }\n        return self.parentNode.height;\n      },\n      set: function (value) {\n        if (self.shadowRoot) {\n          self.shadowRoot.height = value;\n        } else {\n          self.parentNode.height = value;\n        }\n        self.resize(true);\n      },\n    });\n    Object.defineProperty(self.intf, 'width', {\n      get: function () {\n        if (self.shadowRoot) {\n          return self.shadowRoot.width;\n        }\n        return self.parentNode.width;\n      },\n      set: function (value) {\n        if (self.shadowRoot) {\n          self.shadowRoot.width = value;\n        } else {\n          self.parentNode.width = value;\n        }\n        self.resize(true);\n      },\n    });\n    Object.defineProperty(self.intf, 'parentNode', {\n      get: function () {\n        return self.parentNode;\n      },\n      set: function (value) {\n        if (!self.isChildGrid) {\n          throw new TypeError(\n            'Cannot set property parentNode which has only a getter',\n          );\n        }\n        self.parentNode = value;\n      },\n    });\n  }\n  Object.defineProperty(self.intf, 'visibleRowHeights', {\n    get: function () {\n      return self.visibleRowHeights;\n    },\n  });\n  Object.defineProperty(self.intf, 'openChildren', {\n    get: function () {\n      return self.openChildren;\n    },\n  });\n  Object.defineProperty(self.intf, 'childGrids', {\n    get: function () {\n      return Object.keys(self.childGrids).map(function (gridId) {\n        return self.childGrids[gridId];\n      });\n    },\n  });\n  Object.defineProperty(self.intf, 'isChildGrid', {\n    get: function () {\n      return self.isChildGrid;\n    },\n  });\n  Object.defineProperty(self, 'cursor', {\n    get: function () {\n      return self.parentNodeStyle.cursor;\n    },\n    set: function (value) {\n      if (value === 'cell') {\n        value = 'default';\n      }\n      if (self.currentCursor !== value) {\n        self.parentNodeStyle.cursor = value;\n        self.currentCursor = value;\n      }\n    },\n  });\n  Object.defineProperty(self.intf, 'orderDirection', {\n    get: function () {\n      return self.orderDirection;\n    },\n    set: function (value) {\n      if (value !== 'desc') {\n        value = 'asc';\n      }\n      self.orderDirection = value;\n      self.order(self.orderBy, self.orderDirection);\n    },\n  });\n  Object.defineProperty(self.intf, 'orderBy', {\n    get: function () {\n      return self.orderBy;\n    },\n    set: function (value) {\n      if (\n        self.getSchema().find(function (col) {\n          return col.name === value;\n        }) === undefined\n      ) {\n        throw new Error('Cannot sort by unknown column name.');\n      }\n      self.orderBy = value;\n      self.order(self.orderBy, self.orderDirection);\n    },\n  });\n  if (self.isComponent) {\n    Object.defineProperty(self.intf, 'offsetHeight', {\n      get: function () {\n        return self.canvas.offsetHeight;\n      },\n    });\n    Object.defineProperty(self.intf, 'offsetWidth', {\n      get: function () {\n        return self.canvas.offsetWidth;\n      },\n    });\n  }\n  Object.defineProperty(self.intf, 'scrollHeight', {\n    get: function () {\n      return self.scrollBox.scrollHeight;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollWidth', {\n    get: function () {\n      return self.scrollBox.scrollWidth;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollTop', {\n    get: function () {\n      return self.scrollBox.scrollTop;\n    },\n    set: function (value) {\n      self.scrollBox.scrollTop = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollLeft', {\n    get: function () {\n      return self.scrollBox.scrollLeft;\n    },\n    set: function (value) {\n      self.scrollBox.scrollLeft = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'sizes', {\n    get: function () {\n      return self.sizes;\n    },\n  });\n  Object.defineProperty(self.intf, 'parentDOMNode', {\n    get: function () {\n      return self.parentDOMNode;\n    },\n  });\n  Object.defineProperty(self.intf, 'input', {\n    get: function () {\n      return self.input;\n    },\n  });\n  Object.defineProperty(self.intf, 'controlInput', {\n    get: function () {\n      return self.controlInput;\n    },\n  });\n  Object.defineProperty(self.intf, 'currentCell', {\n    get: function () {\n      return self.currentCell;\n    },\n  });\n  Object.defineProperty(self.intf, 'visibleCells', {\n    get: function () {\n      return self.visibleCells;\n    },\n  });\n  Object.defineProperty(self.intf, 'visibleRows', {\n    get: function () {\n      return self.visibleRows;\n    },\n  });\n  Object.defineProperty(self.intf, 'selections', {\n    get: function () {\n      return self.selections;\n    },\n  });\n  Object.defineProperty(self.intf, 'dragMode', {\n    get: function () {\n      return self.dragMode;\n    },\n  });\n  Object.defineProperty(self.intf, 'changes', {\n    get: function () {\n      return self.changes;\n    },\n  });\n  self.intf.formatters = self.formatters;\n  Object.defineProperty(self.intf, 'dataType', {\n    get: function () {\n      return self.dataType;\n    },\n    set: function (value) {\n      if (!self.parsers[value]) {\n        throw new Error('No parser for MIME type ' + value);\n      }\n      self.dataType = value;\n    },\n  });\n  self.eventNames.forEach(function (eventName) {\n    Object.defineProperty(self.intf, 'on' + eventName, {\n      get: function () {\n        return self.componentL1Events[eventName];\n      },\n      set: function (value) {\n        self.events[eventName] = [];\n        self.componentL1Events[eventName] = value;\n        if (!value) {\n          return;\n        }\n        self.addEventListener(eventName, value);\n      },\n    });\n  });\n  Object.defineProperty(self.intf, 'frozenRow', {\n    get: function () {\n      return self.frozenRow;\n    },\n    set: function (val) {\n      if (isNaN(val)) {\n        throw new TypeError('Expected value for frozenRow to be a number.');\n      }\n      if (self.visibleRows.length < val) {\n        throw new RangeError(\n          'Cannot set a value larger than the number of visible rows.',\n        );\n      }\n      self.frozenRow = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'frozenColumn', {\n    get: function () {\n      return self.frozenColumn;\n    },\n    set: function (val) {\n      if (isNaN(val)) {\n        throw new TypeError('Expected value for frozenRow to be a number.');\n      }\n      if (self.getVisibleSchema().length < val) {\n        throw new RangeError(\n          'Cannot set a value larger than the number of visible columns.',\n        );\n      }\n      self.frozenColumn = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollIndexRect', {\n    get: function () {\n      return {\n        top: self.scrollIndexTop,\n        right: self.scrollIndexRight,\n        bottom: self.scrollIndexBottom,\n        left: self.scrollIndexLeft,\n      };\n    },\n  });\n  Object.defineProperty(self.intf, 'scrollPixelRect', {\n    get: function () {\n      return {\n        top: self.scrollPixelTop,\n        right: self.scrollPixelRight,\n        bottom: self.scrollPixelBottom,\n        left: self.scrollPixelLeft,\n      };\n    },\n  });\n  Object.defineProperty(self.intf, 'rowOrder', {\n    get: function () {\n      return self.orders.rows;\n    },\n    set: function (val) {\n      if (!Array.isArray(val)) {\n        throw new TypeError('Value must be an array.');\n      }\n      if (!self.originalData || val.length < self.originalData.length) {\n        throw new RangeError(\n          'Array length must be equal to or greater than number of rows.',\n        );\n      }\n      self.orders.rows = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'columnOrder', {\n    get: function () {\n      return self.orders.columns;\n    },\n    set: function (val) {\n      if (!Array.isArray(val)) {\n        throw new TypeError('Value must be an array.');\n      }\n      if (val.length < self.getSchema().length) {\n        throw new RangeError(\n          'Array length must be equal to or greater than number of columns.',\n        );\n      }\n      self.orders.columns = val;\n    },\n  });\n  Object.defineProperty(self.intf, 'selectionBounds', {\n    get: function () {\n      return self.getSelectionBounds();\n    },\n  });\n  Object.defineProperty(self.intf, 'selectedRows', {\n    get: function () {\n      return self.getSelectedData(true);\n    },\n  });\n  Object.defineProperty(self.intf, 'selectedCells', {\n    get: function () {\n      return self.getSelectedData();\n    },\n  });\n  Object.defineProperty(self.intf, 'visibleSchema', {\n    get: function () {\n      return self.getVisibleSchema().map(function eachDataRow(col) {\n        return col;\n      });\n    },\n  });\n  Object.defineProperty(self.intf, 'treeGridAttributes', {\n    get: function () {\n      return self.treeGridAttributes;\n    },\n    set: function setTreeGridAttributes(value) {\n      self.treeGridAttributes = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'cellGridAttributes', {\n    get: function () {\n      return self.cellGridAttributes;\n    },\n    set: function setCellGridAttributes(value) {\n      self.cellGridAttributes = value;\n    },\n  });\n  Object.defineProperty(self.intf, 'ctx', {\n    get: function () {\n      return self.ctx;\n    },\n  });\n  Object.defineProperty(self.intf, 'schema', {\n    get: function schemaGetter() {\n      return self.getSchema();\n    },\n    set: function schemaSetter(value) {\n      if (value === undefined) {\n        // Issue #89 - allow schema to be set to initialized state\n        self.schema = undefined;\n        self.tempSchema = undefined;\n        self.dispatchEvent('schemachanged', { schema: undefined });\n        return;\n      }\n      if (!Array.isArray(value) || typeof value[0] !== 'object') {\n        throw new Error('Schema must be an array of objects.');\n      }\n      if (value[0].name === undefined) {\n        throw new Error(\n          'Expected schema to contain an object with at least a name property.',\n        );\n      }\n      self.schema = value.map(function eachSchemaColumn(column, index) {\n        column.width = column.width || self.style.cellWidth;\n        column.filter = column.filter || self.filter(column.type);\n        column.type = column.type || 'string';\n        column.index = index;\n        column.columnIndex = index;\n        column.rowIndex = -1;\n        return column;\n      });\n      self.tempSchema = undefined;\n      self.createNewRowData();\n      self.createColumnOrders();\n      self.tryLoadStoredSettings();\n      if (\n        self.storedSettings &&\n        typeof self.storedSettings.visibility === 'object'\n      ) {\n        self.schema.forEach(function hideEachSchemaColumn(column, index) {\n          if (\n            self.storedSettings &&\n            self.storedSettings.visibility[column.name] !== undefined\n          ) {\n            column.hidden = !self.storedSettings.visibility[column.name];\n          }\n        });\n      }\n      self.resize(true);\n      self.dispatchEvent('schemachanged', { schema: self.schema });\n    },\n  });\n  /**\n   * Gets an array of currently registered MIME types.\n   * @memberof canvasDatagrid\n   * @name getDataTypes\n   * @method\n   */\n  self.intf.getTypes = function () {\n    return Object.keys(self.parsers);\n  };\n  self.parseInnerHtml = function (data) {\n    if (!data || /^ +$/.test(data)) {\n      return [];\n    }\n    try {\n      data = JSON.parse(data);\n    } catch (e) {\n      console.warn(\n        Error(\n          'Cannot parse application/json+x-canvas-datagrid formated data. ' +\n            e.message +\n            '  \\nNote: canvas-datagrid.innerHTML is for string data only.  ' +\n            'Use the canvas-datagrid.data property to set object data.',\n        ),\n      );\n    }\n    return data;\n  };\n  self.parsers['application/json+x-canvas-datagrid'] = function (\n    data,\n    callback,\n  ) {\n    self.parsers['application/x-canvas-datagrid'](\n      self.parseInnerHtml(data),\n      function (data, schema) {\n        return callback(data, schema);\n      },\n    );\n  };\n  self.parsers['application/x-canvas-datagrid'] = function (data, callback) {\n    return callback(data);\n  };\n  self.intf.parsers = self.parsers;\n  // send to dataType ETL function to extract from input data\n  // and transform into native [{}, {}] format\n  self.etl = function (data, callback) {\n    if (!self.intf.parsers[self.dataType]) {\n      throw new Error('Unsupported data type.');\n    }\n    self.intf.parsers[self.dataType](data, function (data, schema) {\n      // set the unfiltered/sorted data array\n      self.originalData = data;\n      self.viewData = Array.from(self.originalData);\n\n      if (Array.isArray(schema)) {\n        self.schema = schema;\n      }\n      // Issue #89 - allow schema to be auto-created every time data is set\n      if (self.attributes.autoGenerateSchema) {\n        self.schema = self.getSchemaFromData(data);\n      }\n      if (!self.schema) {\n        self.tempSchema = self.getSchemaFromData(data);\n      }\n      if (self.getSchema()) {\n        self.createColumnOrders();\n      }\n      // apply filter, sort, etc to incoming dataset, set viewData:\n      self.refresh();\n      // empty data was set\n      if (!self.schema && (self.originalData || []).length === 0) {\n        self.tempSchema = [{ name: '' }];\n      }\n      self.fitColumnToValues('cornerCell', true);\n      if (\n        (self.tempSchema && !self.schema) ||\n        self.attributes.autoGenerateSchema\n      ) {\n        self.createColumnOrders();\n        self.dispatchEvent('schemachanged', { schema: self.tempSchema });\n      }\n      callback();\n    });\n  };\n  Object.defineProperty(self.intf, 'viewData', {\n    get: function () {\n      return self.viewData;\n    },\n  });\n  Object.defineProperty(self.intf, 'boundData', {\n    get: function () {\n      return self.originalData;\n    },\n  });\n  Object.defineProperty(self.intf, 'data', {\n    get: function dataGetter() {\n      return self.originalData;\n    },\n    set: function dataSetter(value) {\n      self.etl(value, function () {\n        self.changes = [];\n        self.createNewRowData();\n        if (\n          self.attributes.autoResizeColumns &&\n          self.originalData.length > 0 &&\n          self.storedSettings === undefined\n        ) {\n          self.autosize();\n        }\n        // set the header column to fit the numbers in it\n        self.fitColumnToValues('cornerCell', true);\n        self.createRowOrders();\n        self.tryLoadStoredSettings();\n        self.dispatchEvent('datachanged', { data: self.originalData });\n        self.resize(true);\n      });\n    },\n  });\n  self.initScrollBox = function () {\n    var sHeight = 0,\n      sWidth = 0,\n      scrollTop = 0,\n      scrollLeft = 0,\n      scrollHeight = 0,\n      scrollWidth = 0,\n      scrollBoxHeight = 20,\n      scrollBoxWidth = 20;\n    function setScrollTop(value, preventScrollEvent) {\n      if (isNaN(value)) {\n        throw new Error('ScrollTop value must be a number');\n      }\n      if (value < 0) {\n        value = 0;\n      }\n      if (value > scrollHeight) {\n        value = scrollHeight;\n      }\n      if (scrollHeight < 0) {\n        value = 0;\n      }\n      scrollTop = value;\n      if (!preventScrollEvent) {\n        self.scroll();\n      }\n    }\n    function setScrollLeft(value, preventScrollEvent) {\n      if (isNaN(value)) {\n        throw new Error('ScrollLeft value must be a number');\n      }\n      if (value < 0) {\n        value = 0;\n      }\n      if (value > scrollWidth) {\n        value = scrollWidth;\n      }\n      if (scrollWidth < 0) {\n        value = 0;\n      }\n      scrollLeft = value;\n      if (!preventScrollEvent) {\n        self.scroll();\n      }\n    }\n    self.scrollBox.toString = function () {\n      return (\n        '{\"width\": ' +\n        scrollWidth.toFixed(2) +\n        ', \"height\": ' +\n        scrollHeight.toFixed(2) +\n        ', \"left\": ' +\n        scrollLeft.toFixed(2) +\n        ', \"top\": ' +\n        scrollTop.toFixed(2) +\n        ', \"widthRatio\": ' +\n        self.scrollBox.widthBoxRatio.toFixed(5) +\n        ', \"heightRatio\": ' +\n        self.scrollBox.heightBoxRatio.toFixed(5) +\n        '}'\n      );\n    };\n    self.scrollBox.scrollTo = function (x, y, supressDrawEvent) {\n      setScrollLeft(x, true);\n      setScrollTop(y, supressDrawEvent);\n    };\n    Object.defineProperty(self.scrollBox, 'scrollBoxHeight', {\n      get: function () {\n        return scrollBoxHeight;\n      },\n      set: function (value) {\n        scrollBoxHeight = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'scrollBoxWidth', {\n      get: function () {\n        return scrollBoxWidth;\n      },\n      set: function (value) {\n        scrollBoxWidth = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'height', {\n      get: function () {\n        return sHeight;\n      },\n      set: function (value) {\n        sHeight = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'width', {\n      get: function () {\n        return sWidth;\n      },\n      set: function (value) {\n        sWidth = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'scrollTop', {\n      get: function () {\n        return scrollTop;\n      },\n      set: setScrollTop,\n    });\n    Object.defineProperty(self.scrollBox, 'scrollLeft', {\n      get: function () {\n        return scrollLeft;\n      },\n      set: setScrollLeft,\n    });\n    Object.defineProperty(self.scrollBox, 'scrollHeight', {\n      get: function () {\n        return scrollHeight;\n      },\n      set: function (value) {\n        if (scrollTop > value) {\n          scrollTop = Math.max(value, 0);\n        }\n        scrollHeight = value;\n      },\n    });\n    Object.defineProperty(self.scrollBox, 'scrollWidth', {\n      get: function () {\n        return scrollWidth;\n      },\n      set: function (value) {\n        if (scrollLeft > value) {\n          scrollLeft = Math.max(value, 0);\n        }\n        scrollWidth = value;\n      },\n    });\n  };\n  return;\n}\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"sourceRoot":""}